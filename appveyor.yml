version: 2.6.0.{build}
image: Visual Studio 2019
skip_non_tags: true

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: "{version}"
  package_version: "{version}"
  assembly_version: "{version}"
  file_version: "{version}"
  informational_version: "{version}"

before_build:
  - ps: >-
      nuget restore

build:
  project: C:\projects\dotfeather\dotfeather\dotfeather.csproj
  publish_nuget: true

configuration: Release

after_build:
  - nuget pack -Prop Configuration=Release DotFeather -OutputDirectory DotFeather/bin/Release/

artifacts:
  - path: '**\*.nupkg'
    name: DotFeather

deploy:
  - provider: NuGet
    api_key:
      # Use encrypt tool
      # https://ci.appveyor.com/tools/encrypt
      secure: 0p+A7xhW2Qex9C3sIr4LXPFBNUCxVd1NPvnKH0Yy6uETIpnSAa5q/DkQtOH9Sy9q
    artifact: /.*\.nupkg/
    on:
      appveyor_repo_tag: true
  - provider: GitHub
    artifact: /.*\.nupkg/ # upload all NuGet packages to release assets
    draft: false
    prerelease: false
    description: |
      ## 2.7.0

      ### 新機能
      - コールバック関数を用いて波形を生成し再生できる DelegateAudioSource を追加しました

      ### 改善
      - `async` `await` パターンによる非同期処理の中で、DotFeatherによるテクスチャ生成・テキスト描画を行ってもクラッシュしないようになりました
        - DotFeather を使用した場合、Task クラスによる非同期処理が既定で、全てシングルスレッド内で行われるようになりました

      ----

      ### New Feature
      - Added DelegateAudioSource, which can generate and play waveform using callback function

      ### Improvements
      - It no longer crashes when using DotFeather's texture generation and text drawing during asynchronous processing by `async` `await` pattern
        - By using DotFeather, asynchronous processing by Task class is now done by default in single thread

    auth_token:
      secure: FUlGF4CyRZNM6jaGz2wlmsOIwZt4av2Cxn4lHbi5wU5lim3FixH9ZIhLGDRZftOx
    on:
      APPVEYOR_REPO_TAG: true # deploy on tag push only
