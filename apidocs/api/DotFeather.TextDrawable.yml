### YamlMime:ManagedReference
items:
  - uid: DotFeather.TextDrawable
    commentId: T:DotFeather.TextDrawable
    id: TextDrawable
    parent: DotFeather
    children:
      - DotFeather.TextDrawable.#ctor(System.String,DotFeather.Font,System.Nullable{System.Drawing.Color})
      - DotFeather.TextDrawable.#ctor(System.String,System.Single,DotFeather.FontStyle,System.Nullable{System.Drawing.Color})
      - DotFeather.TextDrawable.BorderColor
      - DotFeather.TextDrawable.BorderThickness
      - DotFeather.TextDrawable.Color
      - DotFeather.TextDrawable.Destroy
      - DotFeather.TextDrawable.Font
      - DotFeather.TextDrawable.RenderedTexture
      - DotFeather.TextDrawable.Text
      - DotFeather.TextDrawable.UpdateTexture
    langs:
      - csharp
      - vb
    name: TextDrawable
    nameWithType: TextDrawable
    fullName: DotFeather.TextDrawable
    type: Class
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: TextDrawable
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 15
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nA <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref> object to render text.\n"
    example: []
    syntax:
      content: "public class TextDrawable : TextureDrawableBase, IContainable, ISizedDrawable, IDrawable"
      content.vb: >-
        Public Class TextDrawable
            Inherits TextureDrawableBase
            Implements IContainable, ISizedDrawable, IDrawable
    inheritance:
      - System.Object
      - DotFeather.TextureDrawableBase
    implements:
      - DotFeather.IContainable
      - DotFeather.ISizedDrawable
      - DotFeather.IDrawable
    inheritedMembers:
      - DotFeather.TextureDrawableBase.ZOrder
      - DotFeather.TextureDrawableBase.Name
      - DotFeather.TextureDrawableBase.Location
      - DotFeather.TextureDrawableBase.Angle
      - DotFeather.TextureDrawableBase.Scale
      - DotFeather.TextureDrawableBase.Width
      - DotFeather.TextureDrawableBase.Height
      - DotFeather.TextureDrawableBase.Texture
      - DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
      - DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
      - DotFeather.TextureDrawableBase.Parent
      - DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
      - DotFeather.TextureDrawableBase.AbsoluteLocation
      - DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.TextDrawable.Text
    commentId: P:DotFeather.TextDrawable.Text
    id: Text
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: Text
    nameWithType: TextDrawable.Text
    fullName: DotFeather.TextDrawable.Text
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Text
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 21
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a text to draw.\n"
    example: []
    syntax:
      content: public string Text { get; set; }
      parameters: []
      return:
        type: System.String
        description: ""
      content.vb: Public Property Text As String
    overload: DotFeather.TextDrawable.Text*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.TextDrawable.Font
    commentId: P:DotFeather.TextDrawable.Font
    id: Font
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: Font
    nameWithType: TextDrawable.Font
    fullName: DotFeather.TextDrawable.Font
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Font
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 37
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a font to draw.\n"
    example: []
    syntax:
      content: public Font Font { get; set; }
      parameters: []
      return:
        type: DotFeather.Font
        description: ""
      content.vb: Public Property Font As Font
    overload: DotFeather.TextDrawable.Font*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.TextDrawable.Color
    commentId: P:DotFeather.TextDrawable.Color
    id: Color
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: Color
    nameWithType: TextDrawable.Color
    fullName: DotFeather.TextDrawable.Color
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Color
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 53
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet and set a color to draw.\n"
    example: []
    syntax:
      content: public override Color? Color { get; set; }
      parameters: []
      return:
        type: System.Nullable{System.Drawing.Color}
        description: ""
      content.vb: Public Overrides Property Color As Color?
    overridden: DotFeather.TextureDrawableBase.Color
    overload: DotFeather.TextDrawable.Color*
    modifiers.csharp:
      - public
      - override
      - get
      - set
    modifiers.vb:
      - Public
      - Overrides
  - uid: DotFeather.TextDrawable.BorderColor
    commentId: P:DotFeather.TextDrawable.BorderColor
    id: BorderColor
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: BorderColor
    nameWithType: TextDrawable.BorderColor
    fullName: DotFeather.TextDrawable.BorderColor
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: BorderColor
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 68
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a color of the border.\n"
    example: []
    syntax:
      content: public Color? BorderColor { get; set; }
      parameters: []
      return:
        type: System.Nullable{System.Drawing.Color}
      content.vb: Public Property BorderColor As Color?
    overload: DotFeather.TextDrawable.BorderColor*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.TextDrawable.BorderThickness
    commentId: P:DotFeather.TextDrawable.BorderThickness
    id: BorderThickness
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: BorderThickness
    nameWithType: TextDrawable.BorderThickness
    fullName: DotFeather.TextDrawable.BorderThickness
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: BorderThickness
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 83
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a thickness of the border.\n"
    example: []
    syntax:
      content: public int BorderThickness { get; set; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public Property BorderThickness As Integer
    overload: DotFeather.TextDrawable.BorderThickness*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.TextDrawable.RenderedTexture
    commentId: P:DotFeather.TextDrawable.RenderedTexture
    id: RenderedTexture
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: RenderedTexture
    nameWithType: TextDrawable.RenderedTexture
    fullName: DotFeather.TextDrawable.RenderedTexture
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: RenderedTexture
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 98
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nSame as <xref href=\"DotFeather.TextureDrawableBase.Texture\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content: public Texture2D RenderedTexture { get; }
      parameters: []
      return:
        type: DotFeather.Texture2D
      content.vb: Public ReadOnly Property RenderedTexture As Texture2D
    overload: DotFeather.TextDrawable.RenderedTexture*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.TextDrawable.#ctor(System.String,DotFeather.Font,System.Nullable{System.Drawing.Color})
    commentId: M:DotFeather.TextDrawable.#ctor(System.String,DotFeather.Font,System.Nullable{System.Drawing.Color})
    id: "#ctor(System.String,DotFeather.Font,System.Nullable{System.Drawing.Color})"
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: TextDrawable(String, Font, Nullable<Color>)
    nameWithType: TextDrawable.TextDrawable(String, Font, Nullable<Color>)
    fullName: DotFeather.TextDrawable.TextDrawable(System.String, DotFeather.Font, System.Nullable<System.Drawing.Color>)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 107
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.TextDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: public TextDrawable(string text, Font font, Color? color = default(Color? ))
      parameters:
        - id: text
          type: System.String
        - id: font
          type: DotFeather.Font
        - id: color
          type: System.Nullable{System.Drawing.Color}
      content.vb: Public Sub New(text As String, font As Font, color As Color? = Nothing)
    overload: DotFeather.TextDrawable.#ctor*
    nameWithType.vb: TextDrawable.TextDrawable(String, Font, Nullable(Of Color))
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.TextDrawable.TextDrawable(System.String, DotFeather.Font, System.Nullable(Of System.Drawing.Color))
    name.vb: TextDrawable(String, Font, Nullable(Of Color))
  - uid: DotFeather.TextDrawable.#ctor(System.String,System.Single,DotFeather.FontStyle,System.Nullable{System.Drawing.Color})
    commentId: M:DotFeather.TextDrawable.#ctor(System.String,System.Single,DotFeather.FontStyle,System.Nullable{System.Drawing.Color})
    id: "#ctor(System.String,System.Single,DotFeather.FontStyle,System.Nullable{System.Drawing.Color})"
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: TextDrawable(String, Single, FontStyle, Nullable<Color>)
    nameWithType: TextDrawable.TextDrawable(String, Single, FontStyle, Nullable<Color>)
    fullName: DotFeather.TextDrawable.TextDrawable(System.String, System.Single, DotFeather.FontStyle, System.Nullable<System.Drawing.Color>)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 118
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.TextDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: public TextDrawable(string text, float fontSize = 16F, FontStyle fontStyle = FontStyle.Normal, Color? color = default(Color? ))
      parameters:
        - id: text
          type: System.String
        - id: fontSize
          type: System.Single
        - id: fontStyle
          type: DotFeather.FontStyle
        - id: color
          type: System.Nullable{System.Drawing.Color}
      content.vb: Public Sub New(text As String, fontSize As Single = 16F, fontStyle As FontStyle = FontStyle.Normal, color As Color? = Nothing)
    overload: DotFeather.TextDrawable.#ctor*
    nameWithType.vb: TextDrawable.TextDrawable(String, Single, FontStyle, Nullable(Of Color))
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.TextDrawable.TextDrawable(System.String, System.Single, DotFeather.FontStyle, System.Nullable(Of System.Drawing.Color))
    name.vb: TextDrawable(String, Single, FontStyle, Nullable(Of Color))
  - uid: DotFeather.TextDrawable.UpdateTexture
    commentId: M:DotFeather.TextDrawable.UpdateTexture
    id: UpdateTexture
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: UpdateTexture()
    nameWithType: TextDrawable.UpdateTexture()
    fullName: DotFeather.TextDrawable.UpdateTexture()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: UpdateTexture
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 129
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nUpdate the texture.\n"
    example: []
    syntax:
      content: public void UpdateTexture()
      content.vb: Public Sub UpdateTexture
    overload: DotFeather.TextDrawable.UpdateTexture*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.TextDrawable.Destroy
    commentId: M:DotFeather.TextDrawable.Destroy
    id: Destroy
    parent: DotFeather.TextDrawable
    langs:
      - csharp
      - vb
    name: Destroy()
    nameWithType: TextDrawable.Destroy()
    fullName: DotFeather.TextDrawable.Destroy()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/TextDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Destroy
      path: ../DotFeather/Graphics/TextDrawable.cs
      startLine: 157
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDispose this object.\n"
    example: []
    syntax:
      content: public override void Destroy()
      content.vb: Public Overrides Sub Destroy
    overridden: DotFeather.TextureDrawableBase.Destroy
    overload: DotFeather.TextDrawable.Destroy*
    modifiers.csharp:
      - public
      - override
    modifiers.vb:
      - Public
      - Overrides
references:
  - uid: DotFeather.IDrawable
    commentId: T:DotFeather.IDrawable
    parent: DotFeather
    name: IDrawable
    nameWithType: IDrawable
    fullName: DotFeather.IDrawable
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.TextureDrawableBase
    commentId: T:DotFeather.TextureDrawableBase
    parent: DotFeather
    name: TextureDrawableBase
    nameWithType: TextureDrawableBase
    fullName: DotFeather.TextureDrawableBase
  - uid: DotFeather.IContainable
    commentId: T:DotFeather.IContainable
    parent: DotFeather
    name: IContainable
    nameWithType: IContainable
    fullName: DotFeather.IContainable
  - uid: DotFeather.ISizedDrawable
    commentId: T:DotFeather.ISizedDrawable
    parent: DotFeather
    name: ISizedDrawable
    nameWithType: ISizedDrawable
    fullName: DotFeather.ISizedDrawable
  - uid: DotFeather.TextureDrawableBase.ZOrder
    commentId: P:DotFeather.TextureDrawableBase.ZOrder
    parent: DotFeather.TextureDrawableBase
    name: ZOrder
    nameWithType: TextureDrawableBase.ZOrder
    fullName: DotFeather.TextureDrawableBase.ZOrder
  - uid: DotFeather.TextureDrawableBase.Name
    commentId: P:DotFeather.TextureDrawableBase.Name
    parent: DotFeather.TextureDrawableBase
    name: Name
    nameWithType: TextureDrawableBase.Name
    fullName: DotFeather.TextureDrawableBase.Name
  - uid: DotFeather.TextureDrawableBase.Location
    commentId: P:DotFeather.TextureDrawableBase.Location
    parent: DotFeather.TextureDrawableBase
    name: Location
    nameWithType: TextureDrawableBase.Location
    fullName: DotFeather.TextureDrawableBase.Location
  - uid: DotFeather.TextureDrawableBase.Angle
    commentId: P:DotFeather.TextureDrawableBase.Angle
    parent: DotFeather.TextureDrawableBase
    name: Angle
    nameWithType: TextureDrawableBase.Angle
    fullName: DotFeather.TextureDrawableBase.Angle
  - uid: DotFeather.TextureDrawableBase.Scale
    commentId: P:DotFeather.TextureDrawableBase.Scale
    parent: DotFeather.TextureDrawableBase
    name: Scale
    nameWithType: TextureDrawableBase.Scale
    fullName: DotFeather.TextureDrawableBase.Scale
  - uid: DotFeather.TextureDrawableBase.Width
    commentId: P:DotFeather.TextureDrawableBase.Width
    parent: DotFeather.TextureDrawableBase
    name: Width
    nameWithType: TextureDrawableBase.Width
    fullName: DotFeather.TextureDrawableBase.Width
  - uid: DotFeather.TextureDrawableBase.Height
    commentId: P:DotFeather.TextureDrawableBase.Height
    parent: DotFeather.TextureDrawableBase
    name: Height
    nameWithType: TextureDrawableBase.Height
    fullName: DotFeather.TextureDrawableBase.Height
  - uid: DotFeather.TextureDrawableBase.Texture
    commentId: P:DotFeather.TextureDrawableBase.Texture
    parent: DotFeather.TextureDrawableBase
    name: Texture
    nameWithType: TextureDrawableBase.Texture
    fullName: DotFeather.TextureDrawableBase.Texture
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    parent: DotFeather.TextureDrawableBase
    name: ISizedDrawable.Width
    nameWithType: TextureDrawableBase.ISizedDrawable.Width
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Width
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Width
    name.vb: DotFeather.ISizedDrawable.Width
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    parent: DotFeather.TextureDrawableBase
    name: ISizedDrawable.Height
    nameWithType: TextureDrawableBase.ISizedDrawable.Height
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Height
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Height
    name.vb: DotFeather.ISizedDrawable.Height
  - uid: DotFeather.TextureDrawableBase.Parent
    commentId: P:DotFeather.TextureDrawableBase.Parent
    parent: DotFeather.TextureDrawableBase
    name: Parent
    nameWithType: TextureDrawableBase.Parent
    fullName: DotFeather.TextureDrawableBase.Parent
  - uid: DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    parent: DotFeather.TextureDrawableBase
    name: IContainable.Parent
    nameWithType: TextureDrawableBase.IContainable.Parent
    fullName: DotFeather.TextureDrawableBase.DotFeather.IContainable.Parent
    nameWithType.vb: TextureDrawableBase.DotFeather.IContainable.Parent
    name.vb: DotFeather.IContainable.Parent
  - uid: DotFeather.TextureDrawableBase.AbsoluteLocation
    commentId: P:DotFeather.TextureDrawableBase.AbsoluteLocation
    parent: DotFeather.TextureDrawableBase
    name: AbsoluteLocation
    nameWithType: TextureDrawableBase.AbsoluteLocation
    fullName: DotFeather.TextureDrawableBase.AbsoluteLocation
  - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    commentId: M:DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    parent: DotFeather.TextureDrawableBase
    name: Draw(GameBase, Vector)
    nameWithType: TextureDrawableBase.Draw(GameBase, Vector)
    fullName: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase, DotFeather.Vector)
    spec.csharp:
      - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: TextureDrawableBase.Draw
        fullName: DotFeather.TextureDrawableBase.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: TextureDrawableBase.Draw
        fullName: DotFeather.TextureDrawableBase.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.TextDrawable.Text*
    commentId: Overload:DotFeather.TextDrawable.Text
    name: Text
    nameWithType: TextDrawable.Text
    fullName: DotFeather.TextDrawable.Text
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: DotFeather.TextDrawable.Font*
    commentId: Overload:DotFeather.TextDrawable.Font
    name: Font
    nameWithType: TextDrawable.Font
    fullName: DotFeather.TextDrawable.Font
  - uid: DotFeather.Font
    commentId: T:DotFeather.Font
    parent: DotFeather
    name: Font
    nameWithType: Font
    fullName: DotFeather.Font
  - uid: DotFeather.TextureDrawableBase.Color
    commentId: P:DotFeather.TextureDrawableBase.Color
    parent: DotFeather.TextureDrawableBase
    name: Color
    nameWithType: TextureDrawableBase.Color
    fullName: DotFeather.TextureDrawableBase.Color
  - uid: DotFeather.TextDrawable.Color*
    commentId: Overload:DotFeather.TextDrawable.Color
    name: Color
    nameWithType: TextDrawable.Color
    fullName: DotFeather.TextDrawable.Color
  - uid: System.Nullable{System.Drawing.Color}
    commentId: T:System.Nullable{System.Drawing.Color}
    parent: System
    definition: System.Nullable`1
    name: Nullable<Color>
    nameWithType: Nullable<Color>
    fullName: System.Nullable<System.Drawing.Color>
    nameWithType.vb: Nullable(Of Color)
    fullName.vb: System.Nullable(Of System.Drawing.Color)
    name.vb: Nullable(Of Color)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Nullable`1
    commentId: T:System.Nullable`1
    isExternal: true
    name: Nullable<T>
    nameWithType: Nullable<T>
    fullName: System.Nullable<T>
    nameWithType.vb: Nullable(Of T)
    fullName.vb: System.Nullable(Of T)
    name.vb: Nullable(Of T)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.TextDrawable.BorderColor*
    commentId: Overload:DotFeather.TextDrawable.BorderColor
    name: BorderColor
    nameWithType: TextDrawable.BorderColor
    fullName: DotFeather.TextDrawable.BorderColor
  - uid: DotFeather.TextDrawable.BorderThickness*
    commentId: Overload:DotFeather.TextDrawable.BorderThickness
    name: BorderThickness
    nameWithType: TextDrawable.BorderThickness
    fullName: DotFeather.TextDrawable.BorderThickness
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: DotFeather.TextDrawable.RenderedTexture*
    commentId: Overload:DotFeather.TextDrawable.RenderedTexture
    name: RenderedTexture
    nameWithType: TextDrawable.RenderedTexture
    fullName: DotFeather.TextDrawable.RenderedTexture
  - uid: DotFeather.Texture2D
    commentId: T:DotFeather.Texture2D
    parent: DotFeather
    name: Texture2D
    nameWithType: Texture2D
    fullName: DotFeather.Texture2D
  - uid: DotFeather.TextDrawable
    commentId: T:DotFeather.TextDrawable
    name: TextDrawable
    nameWithType: TextDrawable
    fullName: DotFeather.TextDrawable
  - uid: DotFeather.TextDrawable.#ctor*
    commentId: Overload:DotFeather.TextDrawable.#ctor
    name: TextDrawable
    nameWithType: TextDrawable.TextDrawable
    fullName: DotFeather.TextDrawable.TextDrawable
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.FontStyle
    commentId: T:DotFeather.FontStyle
    parent: DotFeather
    name: FontStyle
    nameWithType: FontStyle
    fullName: DotFeather.FontStyle
  - uid: DotFeather.TextDrawable.UpdateTexture*
    commentId: Overload:DotFeather.TextDrawable.UpdateTexture
    name: UpdateTexture
    nameWithType: TextDrawable.UpdateTexture
    fullName: DotFeather.TextDrawable.UpdateTexture
  - uid: DotFeather.TextureDrawableBase.Destroy
    commentId: M:DotFeather.TextureDrawableBase.Destroy
    parent: DotFeather.TextureDrawableBase
    name: Destroy()
    nameWithType: TextureDrawableBase.Destroy()
    fullName: DotFeather.TextureDrawableBase.Destroy()
    spec.csharp:
      - uid: DotFeather.TextureDrawableBase.Destroy
        name: Destroy
        nameWithType: TextureDrawableBase.Destroy
        fullName: DotFeather.TextureDrawableBase.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.TextureDrawableBase.Destroy
        name: Destroy
        nameWithType: TextureDrawableBase.Destroy
        fullName: DotFeather.TextureDrawableBase.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.TextDrawable.Destroy*
    commentId: Overload:DotFeather.TextDrawable.Destroy
    name: Destroy
    nameWithType: TextDrawable.Destroy
    fullName: DotFeather.TextDrawable.Destroy
