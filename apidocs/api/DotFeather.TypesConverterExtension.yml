### YamlMime:ManagedReference
items:
  - uid: DotFeather.TypesConverterExtension
    commentId: T:DotFeather.TypesConverterExtension
    id: TypesConverterExtension
    parent: DotFeather
    children:
      - DotFeather.TypesConverterExtension.ToDF(Key)
      - DotFeather.TypesConverterExtension.ToTK(DotFeather.DFKeyCode)
    langs:
      - csharp
      - vb
    name: TypesConverterExtension
    nameWithType: TypesConverterExtension
    fullName: DotFeather.TypesConverterExtension
    type: Class
    source:
      remote:
        path: DotFeather/Extensions/TypesConverterExtension.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: TypesConverterExtension
      path: ../DotFeather/Extensions/TypesConverterExtension.cs
      startLine: 10
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n<xref href=\"DotFeather\" data-throw-if-not-resolved=\"false\"></xref> および <see cref=\"!:OpenTK\"></see> 間における類似した型の相互変換をする、拡張メソッドを追加します。\n"
    example: []
    syntax:
      content: public static class TypesConverterExtension
      content.vb: Public Module TypesConverterExtension
    inheritance:
      - System.Object
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - static
      - class
    modifiers.vb:
      - Public
      - Module
  - uid: DotFeather.TypesConverterExtension.ToDF(Key)
    commentId: M:DotFeather.TypesConverterExtension.ToDF(Key)
    id: ToDF(Key)
    isExtensionMethod: true
    parent: DotFeather.TypesConverterExtension
    langs:
      - csharp
      - vb
    name: ToDF(Key)
    nameWithType: TypesConverterExtension.ToDF(Key)
    fullName: DotFeather.TypesConverterExtension.ToDF(Key)
    type: Method
    source:
      remote:
        path: DotFeather/Extensions/TypesConverterExtension.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ToDF
      path: ../DotFeather/Extensions/TypesConverterExtension.cs
      startLine: 15
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n<xref href=\"DotFeather\" data-throw-if-not-resolved=\"false\"></xref> 版に変換します。\n"
    example: []
    syntax:
      content: public static DFKeyCode ToDF(this Key key)
      parameters:
        - id: key
          type: Key
      return:
        type: DotFeather.DFKeyCode
      content.vb: >-
        <ExtensionAttribute>

        Public Shared Function ToDF(key As Key) As DFKeyCode
    overload: DotFeather.TypesConverterExtension.ToDF*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
  - uid: DotFeather.TypesConverterExtension.ToTK(DotFeather.DFKeyCode)
    commentId: M:DotFeather.TypesConverterExtension.ToTK(DotFeather.DFKeyCode)
    id: ToTK(DotFeather.DFKeyCode)
    isExtensionMethod: true
    parent: DotFeather.TypesConverterExtension
    langs:
      - csharp
      - vb
    name: ToTK(DFKeyCode)
    nameWithType: TypesConverterExtension.ToTK(DFKeyCode)
    fullName: DotFeather.TypesConverterExtension.ToTK(DotFeather.DFKeyCode)
    type: Method
    source:
      remote:
        path: DotFeather/Extensions/TypesConverterExtension.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ToTK
      path: ../DotFeather/Extensions/TypesConverterExtension.cs
      startLine: 20
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n<see cref=\"!:OpenTK.Input\"></see> 版に変換します。\n"
    example: []
    syntax:
      content: public static Key ToTK(this DFKeyCode key)
      parameters:
        - id: key
          type: DotFeather.DFKeyCode
      return:
        type: Key
      content.vb: >-
        <ExtensionAttribute>

        Public Shared Function ToTK(key As DFKeyCode) As Key
    overload: DotFeather.TypesConverterExtension.ToTK*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.TypesConverterExtension.ToDF*
    commentId: Overload:DotFeather.TypesConverterExtension.ToDF
    name: ToDF
    nameWithType: TypesConverterExtension.ToDF
    fullName: DotFeather.TypesConverterExtension.ToDF
  - uid: Key
    isExternal: true
    name: Key
    nameWithType: Key
    fullName: Key
  - uid: DotFeather.DFKeyCode
    commentId: T:DotFeather.DFKeyCode
    parent: DotFeather
    name: DFKeyCode
    nameWithType: DFKeyCode
    fullName: DotFeather.DFKeyCode
  - uid: DotFeather.TypesConverterExtension.ToTK*
    commentId: Overload:DotFeather.TypesConverterExtension.ToTK
    name: ToTK
    nameWithType: TypesConverterExtension.ToTK
    fullName: DotFeather.TypesConverterExtension.ToTK
