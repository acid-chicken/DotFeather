### YamlMime:ManagedReference
items:
  - uid: DotFeather.GameBase
    commentId: T:DotFeather.GameBase
    id: GameBase
    parent: DotFeather
    children:
      - DotFeather.GameBase.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)
      - DotFeather.GameBase.ActualHeight
      - DotFeather.GameBase.ActualWidth
      - DotFeather.GameBase.BackgroundColor
      - DotFeather.GameBase.Cls
      - DotFeather.GameBase.ConsoleCursor
      - DotFeather.GameBase.ConsoleSize
      - DotFeather.GameBase.Dispose
      - DotFeather.GameBase.Dpi
      - DotFeather.GameBase.Exit(System.Int32)
      - DotFeather.GameBase.FileDrop
      - DotFeather.GameBase.FollowsDpi
      - DotFeather.GameBase.ForegroundColor
      - DotFeather.GameBase.Height
      - DotFeather.GameBase.IsCaptureMode
      - DotFeather.GameBase.IsFocused
      - DotFeather.GameBase.IsFullScreen
      - DotFeather.GameBase.KeyDown
      - DotFeather.GameBase.KeyPress
      - DotFeather.GameBase.KeyUp
      - DotFeather.GameBase.Load
      - DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
      - DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
      - DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
      - DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
      - DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
      - DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
      - DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
      - DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
      - DotFeather.GameBase.Print(System.Object)
      - DotFeather.GameBase.Random
      - DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
      - DotFeather.GameBase.RefreshRate
      - DotFeather.GameBase.Resize
      - DotFeather.GameBase.Root
      - DotFeather.GameBase.Run
      - DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
      - DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
      - DotFeather.GameBase.TakeScreenshot
      - DotFeather.GameBase.Title
      - DotFeather.GameBase.TotalFrame
      - DotFeather.GameBase.Unload
      - DotFeather.GameBase.Visible
      - DotFeather.GameBase.Width
      - DotFeather.GameBase.WindowMode
      - DotFeather.GameBase.X
      - DotFeather.GameBase.Y
    langs:
      - csharp
      - vb
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
    type: Class
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: GameBase
      path: ../DotFeather/GameBase.cs
      startLine: 21
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDotFeather のメインループおよび、各種メソッドを揃えている、ゲームエントリーポイントの基底クラスです。\n"
    example: []
    syntax:
      content: "public abstract class GameBase : IDisposable"
      content.vb: >-
        Public MustInherit Class GameBase
            Implements IDisposable
    inheritance:
      - System.Object
    derivedClasses:
      - DotFeather.RoutingGameBase`1
    implements:
      - System.IDisposable
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - abstract
      - class
    modifiers.vb:
      - Public
      - MustInherit
      - Class
  - uid: DotFeather.GameBase.X
    commentId: P:DotFeather.GameBase.X
    id: X
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: X
    nameWithType: GameBase.X
    fullName: DotFeather.GameBase.X
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: X
      path: ../DotFeather/GameBase.cs
      startLine: 26
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set X coordinate of this window.\n"
    example: []
    syntax:
      content: public int X { get; set; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public Property X As Integer
    overload: DotFeather.GameBase.X*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Y
    commentId: P:DotFeather.GameBase.Y
    id: Y
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Y
    nameWithType: GameBase.Y
    fullName: DotFeather.GameBase.Y
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Y
      path: ../DotFeather/GameBase.cs
      startLine: 35
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set Y coordinate of this window.\n"
    example: []
    syntax:
      content: public int Y { get; set; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public Property Y As Integer
    overload: DotFeather.GameBase.Y*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Visible
    commentId: P:DotFeather.GameBase.Visible
    id: Visible
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Visible
    nameWithType: GameBase.Visible
    fullName: DotFeather.GameBase.Visible
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Visible
      path: ../DotFeather/GameBase.cs
      startLine: 44
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether this window is visible.\n"
    example: []
    syntax:
      content: public bool Visible { get; set; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Property Visible As Boolean
    overload: DotFeather.GameBase.Visible*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Width
    commentId: P:DotFeather.GameBase.Width
    id: Width
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Width
    nameWithType: GameBase.Width
    fullName: DotFeather.GameBase.Width
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Width
      path: ../DotFeather/GameBase.cs
      startLine: 54
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set virtual width of this window.\n"
    example: []
    syntax:
      content: public int Width { get; set; }
      parameters: []
      return:
        type: System.Int32
        description: The width.
      content.vb: Public Property Width As Integer
    overload: DotFeather.GameBase.Width*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Height
    commentId: P:DotFeather.GameBase.Height
    id: Height
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Height
    nameWithType: GameBase.Height
    fullName: DotFeather.GameBase.Height
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Height
      path: ../DotFeather/GameBase.cs
      startLine: 64
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set virtual height of this window.\n"
    example: []
    syntax:
      content: public int Height { get; set; }
      parameters: []
      return:
        type: System.Int32
        description: The height.
      content.vb: Public Property Height As Integer
    overload: DotFeather.GameBase.Height*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.ActualWidth
    commentId: P:DotFeather.GameBase.ActualWidth
    id: ActualWidth
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: ActualWidth
    nameWithType: GameBase.ActualWidth
    fullName: DotFeather.GameBase.ActualWidth
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ActualWidth
      path: ../DotFeather/GameBase.cs
      startLine: 74
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set actual width of this window.\n"
    example: []
    syntax:
      content: public int ActualWidth { get; set; }
      parameters: []
      return:
        type: System.Int32
        description: The width.
      content.vb: Public Property ActualWidth As Integer
    overload: DotFeather.GameBase.ActualWidth*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.ActualHeight
    commentId: P:DotFeather.GameBase.ActualHeight
    id: ActualHeight
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: ActualHeight
    nameWithType: GameBase.ActualHeight
    fullName: DotFeather.GameBase.ActualHeight
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ActualHeight
      path: ../DotFeather/GameBase.cs
      startLine: 84
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set actual height of this window.\n"
    example: []
    syntax:
      content: public int ActualHeight { get; set; }
      parameters: []
      return:
        type: System.Int32
        description: The height.
      content.vb: Public Property ActualHeight As Integer
    overload: DotFeather.GameBase.ActualHeight*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.IsFocused
    commentId: P:DotFeather.GameBase.IsFocused
    id: IsFocused
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: IsFocused
    nameWithType: GameBase.IsFocused
    fullName: DotFeather.GameBase.IsFocused
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsFocused
      path: ../DotFeather/GameBase.cs
      startLine: 94
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet whether this window is focused.\n"
    example: []
    syntax:
      content: public bool IsFocused { get; }
      parameters: []
      return:
        type: System.Boolean
        description: The height.
      content.vb: Public ReadOnly Property IsFocused As Boolean
    overload: DotFeather.GameBase.IsFocused*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.GameBase.BackgroundColor
    commentId: P:DotFeather.GameBase.BackgroundColor
    id: BackgroundColor
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: BackgroundColor
    nameWithType: GameBase.BackgroundColor
    fullName: DotFeather.GameBase.BackgroundColor
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: BackgroundColor
      path: ../DotFeather/GameBase.cs
      startLine: 99
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set background color of this window.\n"
    example: []
    syntax:
      content: public Color BackgroundColor { get; set; }
      parameters: []
      return:
        type: System.Drawing.Color
      content.vb: Public Property BackgroundColor As Color
    overload: DotFeather.GameBase.BackgroundColor*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.RefreshRate
    commentId: P:DotFeather.GameBase.RefreshRate
    id: RefreshRate
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: RefreshRate
    nameWithType: GameBase.RefreshRate
    fullName: DotFeather.GameBase.RefreshRate
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: RefreshRate
      path: ../DotFeather/GameBase.cs
      startLine: 105
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set refresh rate of this window.\n"
    example: []
    syntax:
      content: public int RefreshRate { get; }
      parameters: []
      return:
        type: System.Int32
        description: The refresh rate.
      content.vb: Public ReadOnly Property RefreshRate As Integer
    overload: DotFeather.GameBase.RefreshRate*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.GameBase.Title
    commentId: P:DotFeather.GameBase.Title
    id: Title
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Title
    nameWithType: GameBase.Title
    fullName: DotFeather.GameBase.Title
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Title
      path: ../DotFeather/GameBase.cs
      startLine: 110
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set title of this window.\n"
    example: []
    syntax:
      content: public string Title { get; set; }
      parameters: []
      return:
        type: System.String
      content.vb: Public Property Title As String
    overload: DotFeather.GameBase.Title*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Root
    commentId: P:DotFeather.GameBase.Root
    id: Root
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Root
    nameWithType: GameBase.Root
    fullName: DotFeather.GameBase.Root
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Root
      path: ../DotFeather/GameBase.cs
      startLine: 119
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a top level <xref href=\"DotFeather.Container\" data-throw-if-not-resolved=\"false\"></xref>  of this window.\n"
    example: []
    syntax:
      content: public Container Root { get; }
      parameters: []
      return:
        type: DotFeather.Container
      content.vb: Public ReadOnly Property Root As Container
    overload: DotFeather.GameBase.Root*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.GameBase.Dpi
    commentId: P:DotFeather.GameBase.Dpi
    id: Dpi
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Dpi
    nameWithType: GameBase.Dpi
    fullName: DotFeather.GameBase.Dpi
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Dpi
      path: ../DotFeather/GameBase.cs
      startLine: 124
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet DPI of the current display.\n"
    example: []
    syntax:
      content: public float Dpi { get; }
      parameters: []
      return:
        type: System.Single
      content.vb: Public ReadOnly Property Dpi As Single
    overload: DotFeather.GameBase.Dpi*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.GameBase.FollowsDpi
    commentId: P:DotFeather.GameBase.FollowsDpi
    id: FollowsDpi
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: FollowsDpi
    nameWithType: GameBase.FollowsDpi
    fullName: DotFeather.GameBase.FollowsDpi
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: FollowsDpi
      path: ../DotFeather/GameBase.cs
      startLine: 131
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether the game follows your display&apos;s DPI.\nIf true, the window will be scaled according to your display&apos;s DPI.\nIf you are creating video, this setting won&apos;t suitable.\n"
    example: []
    syntax:
      content: public bool FollowsDpi { get; set; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Property FollowsDpi As Boolean
    overload: DotFeather.GameBase.FollowsDpi*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.TotalFrame
    commentId: P:DotFeather.GameBase.TotalFrame
    id: TotalFrame
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: TotalFrame
    nameWithType: GameBase.TotalFrame
    fullName: DotFeather.GameBase.TotalFrame
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: TotalFrame
      path: ../DotFeather/GameBase.cs
      startLine: 137
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet total number of frames since startup.\n"
    example: []
    syntax:
      content: public long TotalFrame { get; }
      parameters: []
      return:
        type: System.Int64
        description: ""
      content.vb: Public ReadOnly Property TotalFrame As Long
    overload: DotFeather.GameBase.TotalFrame*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.GameBase.IsCaptureMode
    commentId: P:DotFeather.GameBase.IsCaptureMode
    id: IsCaptureMode
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: IsCaptureMode
    nameWithType: GameBase.IsCaptureMode
    fullName: DotFeather.GameBase.IsCaptureMode
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsCaptureMode
      path: ../DotFeather/GameBase.cs
      startLine: 142
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet whether the game is in capture mode.\n"
    example: []
    syntax:
      content: public bool IsCaptureMode { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public ReadOnly Property IsCaptureMode As Boolean
    overload: DotFeather.GameBase.IsCaptureMode*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.GameBase.ForegroundColor
    commentId: P:DotFeather.GameBase.ForegroundColor
    id: ForegroundColor
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: ForegroundColor
    nameWithType: GameBase.ForegroundColor
    fullName: DotFeather.GameBase.ForegroundColor
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ForegroundColor
      path: ../DotFeather/GameBase.cs
      startLine: 148
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a text color of the console.\n"
    example: []
    syntax:
      content: public Color ForegroundColor { get; set; }
      parameters: []
      return:
        type: System.Drawing.Color
        description: ""
      content.vb: Public Property ForegroundColor As Color
    overload: DotFeather.GameBase.ForegroundColor*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.ConsoleCursor
    commentId: P:DotFeather.GameBase.ConsoleCursor
    id: ConsoleCursor
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: ConsoleCursor
    nameWithType: GameBase.ConsoleCursor
    fullName: DotFeather.GameBase.ConsoleCursor
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ConsoleCursor
      path: ../DotFeather/GameBase.cs
      startLine: 153
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a cursor of the console.\n"
    example: []
    syntax:
      content: public VectorInt ConsoleCursor { get; set; }
      parameters: []
      return:
        type: DotFeather.VectorInt
      content.vb: Public Property ConsoleCursor As VectorInt
    overload: DotFeather.GameBase.ConsoleCursor*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.ConsoleSize
    commentId: P:DotFeather.GameBase.ConsoleSize
    id: ConsoleSize
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: ConsoleSize
    nameWithType: GameBase.ConsoleSize
    fullName: DotFeather.GameBase.ConsoleSize
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ConsoleSize
      path: ../DotFeather/GameBase.cs
      startLine: 159
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a font size of the console.\n"
    example: []
    syntax:
      content: public int ConsoleSize { get; set; }
      parameters: []
      return:
        type: System.Int32
        description: ""
      content.vb: Public Property ConsoleSize As Integer
    overload: DotFeather.GameBase.ConsoleSize*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.WindowMode
    commentId: P:DotFeather.GameBase.WindowMode
    id: WindowMode
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: WindowMode
    nameWithType: GameBase.WindowMode
    fullName: DotFeather.GameBase.WindowMode
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: WindowMode
      path: ../DotFeather/GameBase.cs
      startLine: 164
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set current window mode.\n"
    example: []
    syntax:
      content: public WindowMode WindowMode { get; set; }
      parameters: []
      return:
        type: DotFeather.WindowMode
      content.vb: Public Property WindowMode As WindowMode
    overload: DotFeather.GameBase.WindowMode*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.IsFullScreen
    commentId: P:DotFeather.GameBase.IsFullScreen
    id: IsFullScreen
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: IsFullScreen
    nameWithType: GameBase.IsFullScreen
    fullName: DotFeather.GameBase.IsFullScreen
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsFullScreen
      path: ../DotFeather/GameBase.cs
      startLine: 193
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether the game is in fullscreen.\n"
    example: []
    syntax:
      content: public bool IsFullScreen { get; set; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Property IsFullScreen As Boolean
    overload: DotFeather.GameBase.IsFullScreen*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Print(System.Object)
    commentId: M:DotFeather.GameBase.Print(System.Object)
    id: Print(System.Object)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Print(Object)
    nameWithType: GameBase.Print(Object)
    fullName: DotFeather.GameBase.Print(System.Object)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Print
      path: ../DotFeather/GameBase.cs
      startLine: 199
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public void Print(object obj)
      parameters:
        - id: obj
          type: System.Object
      content.vb: Public Sub Print(obj As Object)
    overload: DotFeather.GameBase.Print*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Cls
    commentId: M:DotFeather.GameBase.Cls
    id: Cls
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Cls()
    nameWithType: GameBase.Cls()
    fullName: DotFeather.GameBase.Cls()
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Cls
      path: ../DotFeather/GameBase.cs
      startLine: 219
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public void Cls()
      content.vb: Public Sub Cls
    overload: DotFeather.GameBase.Cls*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)
    commentId: M:DotFeather.GameBase.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)
    id: "#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)"
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: GameBase(Int32, Int32, String, Int32, Boolean, Boolean)
    nameWithType: GameBase.GameBase(Int32, Int32, String, Int32, Boolean, Boolean)
    fullName: DotFeather.GameBase.GameBase(System.Int32, System.Int32, System.String, System.Int32, System.Boolean, System.Boolean)
    type: Constructor
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/GameBase.cs
      startLine: 239
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.GameBase\" data-throw-if-not-resolved=\"false\"></xref> class with specified parameters.\n"
    example: []
    syntax:
      content: protected GameBase(int width, int height, string title = "", int refreshRate = 60, bool isCaptureMode = false, bool followsDpi = false)
      parameters:
        - id: width
          type: System.Int32
          description: ""
        - id: height
          type: System.Int32
          description: ""
        - id: title
          type: System.String
          description: ""
        - id: refreshRate
          type: System.Int32
          description: ""
        - id: isCaptureMode
          type: System.Boolean
          description: Set <xref uid="langword_csharp_true" name="true" href=""></xref> to enable capture mode. When the capture mode is enabled, a captured folder is created in the current directory, and all frame sequential images are automatically created. Although the operation is very slow, it always behaves as if the refresh rate and FPS match. Please use it for the production of video works.にするとキャプチャーモードになります。キャプチャーモードにした場合、カレントディレクトリにcapturedフォルダが生成され、自動的に全フレームの連番画像が生成されます。非常に動作が遅くなりますが、常にリフレッシュレートとFPSが一致している状態として振る舞います。映像作品の制作に用いてください。
        - id: followsDpi
          type: System.Boolean
          description: "\nWhether the game follows your display&apos;s DPI.\nIf true, the window will be scaled according to your display&apos;s DPI.\nIf you are creating video, this setting won&apos;t suitable.\n"
      content.vb: Protected Sub New(width As Integer, height As Integer, title As String = "", refreshRate As Integer = 60, isCaptureMode As Boolean = False, followsDpi As Boolean = False)
    overload: DotFeather.GameBase.#ctor*
    modifiers.csharp:
      - protected
    modifiers.vb:
      - Protected
  - uid: DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
    commentId: M:DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
    id: Randomize(System.Nullable{System.Int32})
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Randomize(Nullable<Int32>)
    nameWithType: GameBase.Randomize(Nullable<Int32>)
    fullName: DotFeather.GameBase.Randomize(System.Nullable<System.Int32>)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Randomize
      path: ../DotFeather/GameBase.cs
      startLine: 323
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitializes a random number with the specified seed value.\n"
    example: []
    syntax:
      content: public void Randomize(int? seed = default(int? ))
      parameters:
        - id: seed
          type: System.Nullable{System.Int32}
          description: Seed value. If <code>null</code>, the default constructor of <xref href="System.Random" data-throw-if-not-resolved="false"></xref> will be called.
      content.vb: Public Sub Randomize(seed As Integer? = Nothing)
    overload: DotFeather.GameBase.Randomize*
    nameWithType.vb: GameBase.Randomize(Nullable(Of Int32))
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.GameBase.Randomize(System.Nullable(Of System.Int32))
    name.vb: Randomize(Nullable(Of Int32))
  - uid: DotFeather.GameBase.Run
    commentId: M:DotFeather.GameBase.Run
    id: Run
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Run()
    nameWithType: GameBase.Run()
    fullName: DotFeather.GameBase.Run()
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Run
      path: ../DotFeather/GameBase.cs
      startLine: 332
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nRun the game.\n"
    example: []
    syntax:
      content: public int Run()
      return:
        type: System.Int32
        description: Status code.
      content.vb: Public Function Run As Integer
    overload: DotFeather.GameBase.Run*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Exit(System.Int32)
    commentId: M:DotFeather.GameBase.Exit(System.Int32)
    id: Exit(System.Int32)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Exit(Int32)
    nameWithType: GameBase.Exit(Int32)
    fullName: DotFeather.GameBase.Exit(System.Int32)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Exit
      path: ../DotFeather/GameBase.cs
      startLine: 342
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nEnd the game.\n"
    example: []
    syntax:
      content: public void Exit(int status = 0)
      parameters:
        - id: status
          type: System.Int32
          description: Status code.
      content.vb: Public Sub Exit(status As Integer = 0)
    overload: DotFeather.GameBase.Exit*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Dispose
    commentId: M:DotFeather.GameBase.Dispose
    id: Dispose
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Dispose()
    nameWithType: GameBase.Dispose()
    fullName: DotFeather.GameBase.Dispose()
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Dispose
      path: ../DotFeather/GameBase.cs
      startLine: 355
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nReleases all resource used by the <xref href=\"DotFeather.GameBase\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
    remarks: >-
      Call <xref href="DotFeather.GameBase.Dispose" data-throw-if-not-resolved="false"></xref> when you are finished using the <xref href="DotFeather.GameBase" data-throw-if-not-resolved="false"></xref>. The

      <xref href="DotFeather.GameBase.Dispose" data-throw-if-not-resolved="false"></xref> method leaves the <xref href="DotFeather.GameBase" data-throw-if-not-resolved="false"></xref> in an unusable state. After calling

      <xref href="DotFeather.GameBase.Dispose" data-throw-if-not-resolved="false"></xref>, you must release all references to the <xref href="DotFeather.GameBase" data-throw-if-not-resolved="false"></xref> so the garbage

      collector can reclaim the memory that the <xref href="DotFeather.GameBase" data-throw-if-not-resolved="false"></xref> was occupying.
    example: []
    syntax:
      content: public void Dispose()
      content.vb: Public Sub Dispose
    overload: DotFeather.GameBase.Dispose*
    implements:
      - System.IDisposable.Dispose
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.TakeScreenshot
    commentId: M:DotFeather.GameBase.TakeScreenshot
    id: TakeScreenshot
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: TakeScreenshot()
    nameWithType: GameBase.TakeScreenshot()
    fullName: DotFeather.GameBase.TakeScreenshot()
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: TakeScreenshot
      path: ../DotFeather/GameBase.cs
      startLine: 363
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nTake a screenshot of the current screen.\n"
    example: []
    syntax:
      content: public Image TakeScreenshot()
      return:
        type: Image
      content.vb: Public Function TakeScreenshot As Image
    overload: DotFeather.GameBase.TakeScreenshot*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
    commentId: M:DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
    id: StartCoroutine(System.Collections.IEnumerator)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: StartCoroutine(IEnumerator)
    nameWithType: GameBase.StartCoroutine(IEnumerator)
    fullName: DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: StartCoroutine
      path: ../DotFeather/GameBase.cs
      startLine: 382
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nStart the coroutine.\n"
    example: []
    syntax:
      content: public Coroutine StartCoroutine(IEnumerator coroutine)
      parameters:
        - id: coroutine
          type: System.Collections.IEnumerator
      return:
        type: DotFeather.Coroutine
      content.vb: Public Function StartCoroutine(coroutine As IEnumerator) As Coroutine
    overload: DotFeather.GameBase.StartCoroutine*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
    commentId: M:DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
    id: StopCoroutine(DotFeather.Coroutine)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: StopCoroutine(Coroutine)
    nameWithType: GameBase.StopCoroutine(Coroutine)
    fullName: DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: StopCoroutine
      path: ../DotFeather/GameBase.cs
      startLine: 387
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nStop the coroutine.\n"
    example: []
    syntax:
      content: public void StopCoroutine(Coroutine coroutine)
      parameters:
        - id: coroutine
          type: DotFeather.Coroutine
      content.vb: Public Sub StopCoroutine(coroutine As Coroutine)
    overload: DotFeather.GameBase.StopCoroutine*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
    commentId: M:DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
    id: OnUpdate(System.Object,DotFeather.DFEventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnUpdate(Object, DFEventArgs)
    nameWithType: GameBase.OnUpdate(Object, DFEventArgs)
    fullName: DotFeather.GameBase.OnUpdate(System.Object, DotFeather.DFEventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnUpdate
      path: ../DotFeather/GameBase.cs
      startLine: 392
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled when the game frame is updated. Override this method to write the main loop of the game.\n"
    example: []
    syntax:
      content: protected virtual void OnUpdate(object sender, DFEventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: DotFeather.DFEventArgs
      content.vb: Protected Overridable Sub OnUpdate(sender As Object, e As DFEventArgs)
    overload: DotFeather.GameBase.OnUpdate*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
    commentId: M:DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
    id: OnLoad(System.Object,System.EventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnLoad(Object, EventArgs)
    nameWithType: GameBase.OnLoad(Object, EventArgs)
    fullName: DotFeather.GameBase.OnLoad(System.Object, System.EventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnLoad
      path: ../DotFeather/GameBase.cs
      startLine: 397
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled once when the window is opened.\n"
    example: []
    syntax:
      content: protected virtual void OnLoad(object sender, EventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: System.EventArgs
      content.vb: Protected Overridable Sub OnLoad(sender As Object, e As EventArgs)
    overload: DotFeather.GameBase.OnLoad*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
    commentId: M:DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
    id: OnUnload(System.Object,System.EventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnUnload(Object, EventArgs)
    nameWithType: GameBase.OnUnload(Object, EventArgs)
    fullName: DotFeather.GameBase.OnUnload(System.Object, System.EventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnUnload
      path: ../DotFeather/GameBase.cs
      startLine: 402
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled once when the window is closed.\n"
    example: []
    syntax:
      content: protected virtual void OnUnload(object sender, EventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: System.EventArgs
      content.vb: Protected Overridable Sub OnUnload(sender As Object, e As EventArgs)
    overload: DotFeather.GameBase.OnUnload*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
    commentId: M:DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
    id: OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnFileDrop(Object, DFFileDroppedEventArgs)
    nameWithType: GameBase.OnFileDrop(Object, DFFileDroppedEventArgs)
    fullName: DotFeather.GameBase.OnFileDrop(System.Object, DotFeather.DFFileDroppedEventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnFileDrop
      path: ../DotFeather/GameBase.cs
      startLine: 407
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled once when the window is closed.\n"
    example: []
    syntax:
      content: protected virtual void OnFileDrop(object sender, DFFileDroppedEventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: DotFeather.DFFileDroppedEventArgs
      content.vb: Protected Overridable Sub OnFileDrop(sender As Object, e As DFFileDroppedEventArgs)
    overload: DotFeather.GameBase.OnFileDrop*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
    commentId: M:DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
    id: OnResize(System.Object,System.EventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnResize(Object, EventArgs)
    nameWithType: GameBase.OnResize(Object, EventArgs)
    fullName: DotFeather.GameBase.OnResize(System.Object, System.EventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnResize
      path: ../DotFeather/GameBase.cs
      startLine: 412
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled when the window is resized.\n"
    example: []
    syntax:
      content: protected virtual void OnResize(object sender, EventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: System.EventArgs
      content.vb: Protected Overridable Sub OnResize(sender As Object, e As EventArgs)
    overload: DotFeather.GameBase.OnResize*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
    commentId: M:DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
    id: OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnKeyPress(Object, DFKeyPressEventArgs)
    nameWithType: GameBase.OnKeyPress(Object, DFKeyPressEventArgs)
    fullName: DotFeather.GameBase.OnKeyPress(System.Object, DotFeather.DFKeyPressEventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnKeyPress
      path: ../DotFeather/GameBase.cs
      startLine: 417
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled when the key pressed.\n"
    example: []
    syntax:
      content: protected virtual void OnKeyPress(object sender, DFKeyPressEventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: DotFeather.DFKeyPressEventArgs
      content.vb: Protected Overridable Sub OnKeyPress(sender As Object, e As DFKeyPressEventArgs)
    overload: DotFeather.GameBase.OnKeyPress*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
    commentId: M:DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
    id: OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnKeyDown(Object, DFKeyEventArgs)
    nameWithType: GameBase.OnKeyDown(Object, DFKeyEventArgs)
    fullName: DotFeather.GameBase.OnKeyDown(System.Object, DotFeather.DFKeyEventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnKeyDown
      path: ../DotFeather/GameBase.cs
      startLine: 422
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled when the key pressed.\n"
    example: []
    syntax:
      content: protected virtual void OnKeyDown(object sender, DFKeyEventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: DotFeather.DFKeyEventArgs
      content.vb: Protected Overridable Sub OnKeyDown(sender As Object, e As DFKeyEventArgs)
    overload: DotFeather.GameBase.OnKeyDown*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
    commentId: M:DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
    id: OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: OnKeyUp(Object, DFKeyEventArgs)
    nameWithType: GameBase.OnKeyUp(Object, DFKeyEventArgs)
    fullName: DotFeather.GameBase.OnKeyUp(System.Object, DotFeather.DFKeyEventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnKeyUp
      path: ../DotFeather/GameBase.cs
      startLine: 427
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nCalled when the key released.\n"
    example: []
    syntax:
      content: protected virtual void OnKeyUp(object sender, DFKeyEventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: DotFeather.DFKeyEventArgs
      content.vb: Protected Overridable Sub OnKeyUp(sender As Object, e As DFKeyEventArgs)
    overload: DotFeather.GameBase.OnKeyUp*
    modifiers.csharp:
      - protected
      - virtual
    modifiers.vb:
      - Protected
      - Overridable
  - uid: DotFeather.GameBase.Random
    commentId: P:DotFeather.GameBase.Random
    id: Random
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Random
    nameWithType: GameBase.Random
    fullName: DotFeather.GameBase.Random
    type: Property
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Random
      path: ../DotFeather/GameBase.cs
      startLine: 432
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a random generator.\n"
    example: []
    syntax:
      content: protected Random Random { get; }
      parameters: []
      return:
        type: System.Random
      content.vb: Protected ReadOnly Property Random As Random
    overload: DotFeather.GameBase.Random*
    modifiers.csharp:
      - protected
      - get
    modifiers.vb:
      - Protected
      - ReadOnly
  - uid: DotFeather.GameBase.Load
    commentId: E:DotFeather.GameBase.Load
    id: Load
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Load
    nameWithType: GameBase.Load
    fullName: DotFeather.GameBase.Load
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Load
      path: ../DotFeather/GameBase.cs
      startLine: 508
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<EventArgs> Load
      return:
        type: System.EventHandler{System.EventArgs}
      content.vb: Public Event Load As EventHandler(Of EventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Unload
    commentId: E:DotFeather.GameBase.Unload
    id: Unload
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Unload
    nameWithType: GameBase.Unload
    fullName: DotFeather.GameBase.Unload
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Unload
      path: ../DotFeather/GameBase.cs
      startLine: 509
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<EventArgs> Unload
      return:
        type: System.EventHandler{System.EventArgs}
      content.vb: Public Event Unload As EventHandler(Of EventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.FileDrop
    commentId: E:DotFeather.GameBase.FileDrop
    id: FileDrop
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: FileDrop
    nameWithType: GameBase.FileDrop
    fullName: DotFeather.GameBase.FileDrop
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: FileDrop
      path: ../DotFeather/GameBase.cs
      startLine: 510
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<DFFileDroppedEventArgs> FileDrop
      return:
        type: System.EventHandler{DotFeather.DFFileDroppedEventArgs}
      content.vb: Public Event FileDrop As EventHandler(Of DFFileDroppedEventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.Resize
    commentId: E:DotFeather.GameBase.Resize
    id: Resize
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: Resize
    nameWithType: GameBase.Resize
    fullName: DotFeather.GameBase.Resize
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Resize
      path: ../DotFeather/GameBase.cs
      startLine: 511
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<EventArgs> Resize
      return:
        type: System.EventHandler{System.EventArgs}
      content.vb: Public Event Resize As EventHandler(Of EventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.KeyDown
    commentId: E:DotFeather.GameBase.KeyDown
    id: KeyDown
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: KeyDown
    nameWithType: GameBase.KeyDown
    fullName: DotFeather.GameBase.KeyDown
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: KeyDown
      path: ../DotFeather/GameBase.cs
      startLine: 512
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<DFKeyEventArgs> KeyDown
      return:
        type: System.EventHandler{DotFeather.DFKeyEventArgs}
      content.vb: Public Event KeyDown As EventHandler(Of DFKeyEventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.KeyPress
    commentId: E:DotFeather.GameBase.KeyPress
    id: KeyPress
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: KeyPress
    nameWithType: GameBase.KeyPress
    fullName: DotFeather.GameBase.KeyPress
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: KeyPress
      path: ../DotFeather/GameBase.cs
      startLine: 513
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<DFKeyPressEventArgs> KeyPress
      return:
        type: System.EventHandler{DotFeather.DFKeyPressEventArgs}
      content.vb: Public Event KeyPress As EventHandler(Of DFKeyPressEventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GameBase.KeyUp
    commentId: E:DotFeather.GameBase.KeyUp
    id: KeyUp
    parent: DotFeather.GameBase
    langs:
      - csharp
      - vb
    name: KeyUp
    nameWithType: GameBase.KeyUp
    fullName: DotFeather.GameBase.KeyUp
    type: Event
    source:
      remote:
        path: DotFeather/GameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: KeyUp
      path: ../DotFeather/GameBase.cs
      startLine: 514
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<DFKeyEventArgs> KeyUp
      return:
        type: System.EventHandler{DotFeather.DFKeyEventArgs}
      content.vb: Public Event KeyUp As EventHandler(Of DFKeyEventArgs)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.IDisposable
    commentId: T:System.IDisposable
    parent: System
    isExternal: true
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.GameBase.X*
    commentId: Overload:DotFeather.GameBase.X
    name: X
    nameWithType: GameBase.X
    fullName: DotFeather.GameBase.X
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: DotFeather.GameBase.Y*
    commentId: Overload:DotFeather.GameBase.Y
    name: Y
    nameWithType: GameBase.Y
    fullName: DotFeather.GameBase.Y
  - uid: DotFeather.GameBase.Visible*
    commentId: Overload:DotFeather.GameBase.Visible
    name: Visible
    nameWithType: GameBase.Visible
    fullName: DotFeather.GameBase.Visible
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: DotFeather.GameBase.Width*
    commentId: Overload:DotFeather.GameBase.Width
    name: Width
    nameWithType: GameBase.Width
    fullName: DotFeather.GameBase.Width
  - uid: DotFeather.GameBase.Height*
    commentId: Overload:DotFeather.GameBase.Height
    name: Height
    nameWithType: GameBase.Height
    fullName: DotFeather.GameBase.Height
  - uid: DotFeather.GameBase.ActualWidth*
    commentId: Overload:DotFeather.GameBase.ActualWidth
    name: ActualWidth
    nameWithType: GameBase.ActualWidth
    fullName: DotFeather.GameBase.ActualWidth
  - uid: DotFeather.GameBase.ActualHeight*
    commentId: Overload:DotFeather.GameBase.ActualHeight
    name: ActualHeight
    nameWithType: GameBase.ActualHeight
    fullName: DotFeather.GameBase.ActualHeight
  - uid: DotFeather.GameBase.IsFocused*
    commentId: Overload:DotFeather.GameBase.IsFocused
    name: IsFocused
    nameWithType: GameBase.IsFocused
    fullName: DotFeather.GameBase.IsFocused
  - uid: DotFeather.GameBase.BackgroundColor*
    commentId: Overload:DotFeather.GameBase.BackgroundColor
    name: BackgroundColor
    nameWithType: GameBase.BackgroundColor
    fullName: DotFeather.GameBase.BackgroundColor
  - uid: System.Drawing.Color
    commentId: T:System.Drawing.Color
    parent: System.Drawing
    isExternal: true
    name: Color
    nameWithType: Color
    fullName: System.Drawing.Color
  - uid: System.Drawing
    commentId: N:System.Drawing
    isExternal: true
    name: System.Drawing
    nameWithType: System.Drawing
    fullName: System.Drawing
  - uid: DotFeather.GameBase.RefreshRate*
    commentId: Overload:DotFeather.GameBase.RefreshRate
    name: RefreshRate
    nameWithType: GameBase.RefreshRate
    fullName: DotFeather.GameBase.RefreshRate
  - uid: DotFeather.GameBase.Title*
    commentId: Overload:DotFeather.GameBase.Title
    name: Title
    nameWithType: GameBase.Title
    fullName: DotFeather.GameBase.Title
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: DotFeather.Container
    commentId: T:DotFeather.Container
    parent: DotFeather
    name: Container
    nameWithType: Container
    fullName: DotFeather.Container
  - uid: DotFeather.GameBase.Root*
    commentId: Overload:DotFeather.GameBase.Root
    name: Root
    nameWithType: GameBase.Root
    fullName: DotFeather.GameBase.Root
  - uid: DotFeather.GameBase.Dpi*
    commentId: Overload:DotFeather.GameBase.Dpi
    name: Dpi
    nameWithType: GameBase.Dpi
    fullName: DotFeather.GameBase.Dpi
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.GameBase.FollowsDpi*
    commentId: Overload:DotFeather.GameBase.FollowsDpi
    name: FollowsDpi
    nameWithType: GameBase.FollowsDpi
    fullName: DotFeather.GameBase.FollowsDpi
  - uid: DotFeather.GameBase.TotalFrame*
    commentId: Overload:DotFeather.GameBase.TotalFrame
    name: TotalFrame
    nameWithType: GameBase.TotalFrame
    fullName: DotFeather.GameBase.TotalFrame
  - uid: System.Int64
    commentId: T:System.Int64
    parent: System
    isExternal: true
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - uid: DotFeather.GameBase.IsCaptureMode*
    commentId: Overload:DotFeather.GameBase.IsCaptureMode
    name: IsCaptureMode
    nameWithType: GameBase.IsCaptureMode
    fullName: DotFeather.GameBase.IsCaptureMode
  - uid: DotFeather.GameBase.ForegroundColor*
    commentId: Overload:DotFeather.GameBase.ForegroundColor
    name: ForegroundColor
    nameWithType: GameBase.ForegroundColor
    fullName: DotFeather.GameBase.ForegroundColor
  - uid: DotFeather.GameBase.ConsoleCursor*
    commentId: Overload:DotFeather.GameBase.ConsoleCursor
    name: ConsoleCursor
    nameWithType: GameBase.ConsoleCursor
    fullName: DotFeather.GameBase.ConsoleCursor
  - uid: DotFeather.VectorInt
    commentId: T:DotFeather.VectorInt
    parent: DotFeather
    name: VectorInt
    nameWithType: VectorInt
    fullName: DotFeather.VectorInt
  - uid: DotFeather.GameBase.ConsoleSize*
    commentId: Overload:DotFeather.GameBase.ConsoleSize
    name: ConsoleSize
    nameWithType: GameBase.ConsoleSize
    fullName: DotFeather.GameBase.ConsoleSize
  - uid: DotFeather.GameBase.WindowMode*
    commentId: Overload:DotFeather.GameBase.WindowMode
    name: WindowMode
    nameWithType: GameBase.WindowMode
    fullName: DotFeather.GameBase.WindowMode
  - uid: DotFeather.WindowMode
    commentId: T:DotFeather.WindowMode
    parent: DotFeather
    name: WindowMode
    nameWithType: WindowMode
    fullName: DotFeather.WindowMode
  - uid: DotFeather.GameBase.IsFullScreen*
    commentId: Overload:DotFeather.GameBase.IsFullScreen
    name: IsFullScreen
    nameWithType: GameBase.IsFullScreen
    fullName: DotFeather.GameBase.IsFullScreen
  - uid: DotFeather.GameBase.Print*
    commentId: Overload:DotFeather.GameBase.Print
    name: Print
    nameWithType: GameBase.Print
    fullName: DotFeather.GameBase.Print
  - uid: DotFeather.GameBase.Cls*
    commentId: Overload:DotFeather.GameBase.Cls
    name: Cls
    nameWithType: GameBase.Cls
    fullName: DotFeather.GameBase.Cls
  - uid: DotFeather.GameBase
    commentId: T:DotFeather.GameBase
    parent: DotFeather
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - uid: DotFeather.GameBase.#ctor*
    commentId: Overload:DotFeather.GameBase.#ctor
    name: GameBase
    nameWithType: GameBase.GameBase
    fullName: DotFeather.GameBase.GameBase
  - uid: System.Random
    commentId: T:System.Random
    parent: System
    isExternal: true
    name: Random
    nameWithType: Random
    fullName: System.Random
  - uid: DotFeather.GameBase.Randomize*
    commentId: Overload:DotFeather.GameBase.Randomize
    name: Randomize
    nameWithType: GameBase.Randomize
    fullName: DotFeather.GameBase.Randomize
  - uid: System.Nullable{System.Int32}
    commentId: T:System.Nullable{System.Int32}
    parent: System
    definition: System.Nullable`1
    name: Nullable<Int32>
    nameWithType: Nullable<Int32>
    fullName: System.Nullable<System.Int32>
    nameWithType.vb: Nullable(Of Int32)
    fullName.vb: System.Nullable(Of System.Int32)
    name.vb: Nullable(Of Int32)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Nullable`1
    commentId: T:System.Nullable`1
    isExternal: true
    name: Nullable<T>
    nameWithType: Nullable<T>
    fullName: System.Nullable<T>
    nameWithType.vb: Nullable(Of T)
    fullName.vb: System.Nullable(Of T)
    name.vb: Nullable(Of T)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Run*
    commentId: Overload:DotFeather.GameBase.Run
    name: Run
    nameWithType: GameBase.Run
    fullName: DotFeather.GameBase.Run
  - uid: DotFeather.GameBase.Exit*
    commentId: Overload:DotFeather.GameBase.Exit
    name: Exit
    nameWithType: GameBase.Exit
    fullName: DotFeather.GameBase.Exit
  - uid: DotFeather.GameBase.Dispose
    commentId: M:DotFeather.GameBase.Dispose
    parent: DotFeather.GameBase
    name: Dispose()
    nameWithType: GameBase.Dispose()
    fullName: DotFeather.GameBase.Dispose()
    spec.csharp:
      - uid: DotFeather.GameBase.Dispose
        name: Dispose
        nameWithType: GameBase.Dispose
        fullName: DotFeather.GameBase.Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Dispose
        name: Dispose
        nameWithType: GameBase.Dispose
        fullName: DotFeather.GameBase.Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Dispose*
    commentId: Overload:DotFeather.GameBase.Dispose
    name: Dispose
    nameWithType: GameBase.Dispose
    fullName: DotFeather.GameBase.Dispose
  - uid: System.IDisposable.Dispose
    commentId: M:System.IDisposable.Dispose
    parent: System.IDisposable
    isExternal: true
    name: Dispose()
    nameWithType: IDisposable.Dispose()
    fullName: System.IDisposable.Dispose()
    spec.csharp:
      - uid: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        fullName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        fullName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.TakeScreenshot*
    commentId: Overload:DotFeather.GameBase.TakeScreenshot
    name: TakeScreenshot
    nameWithType: GameBase.TakeScreenshot
    fullName: DotFeather.GameBase.TakeScreenshot
  - uid: Image
    isExternal: true
    name: Image
    nameWithType: Image
    fullName: Image
  - uid: DotFeather.GameBase.StartCoroutine*
    commentId: Overload:DotFeather.GameBase.StartCoroutine
    name: StartCoroutine
    nameWithType: GameBase.StartCoroutine
    fullName: DotFeather.GameBase.StartCoroutine
  - uid: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
    parent: System.Collections
    isExternal: true
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
  - uid: DotFeather.Coroutine
    commentId: T:DotFeather.Coroutine
    parent: DotFeather
    name: Coroutine
    nameWithType: Coroutine
    fullName: DotFeather.Coroutine
  - uid: System.Collections
    commentId: N:System.Collections
    isExternal: true
    name: System.Collections
    nameWithType: System.Collections
    fullName: System.Collections
  - uid: DotFeather.GameBase.StopCoroutine*
    commentId: Overload:DotFeather.GameBase.StopCoroutine
    name: StopCoroutine
    nameWithType: GameBase.StopCoroutine
    fullName: DotFeather.GameBase.StopCoroutine
  - uid: DotFeather.GameBase.OnUpdate*
    commentId: Overload:DotFeather.GameBase.OnUpdate
    name: OnUpdate
    nameWithType: GameBase.OnUpdate
    fullName: DotFeather.GameBase.OnUpdate
  - uid: DotFeather.DFEventArgs
    commentId: T:DotFeather.DFEventArgs
    parent: DotFeather
    name: DFEventArgs
    nameWithType: DFEventArgs
    fullName: DotFeather.DFEventArgs
  - uid: DotFeather.GameBase.OnLoad*
    commentId: Overload:DotFeather.GameBase.OnLoad
    name: OnLoad
    nameWithType: GameBase.OnLoad
    fullName: DotFeather.GameBase.OnLoad
  - uid: System.EventArgs
    commentId: T:System.EventArgs
    parent: System
    isExternal: true
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
  - uid: DotFeather.GameBase.OnUnload*
    commentId: Overload:DotFeather.GameBase.OnUnload
    name: OnUnload
    nameWithType: GameBase.OnUnload
    fullName: DotFeather.GameBase.OnUnload
  - uid: DotFeather.GameBase.OnFileDrop*
    commentId: Overload:DotFeather.GameBase.OnFileDrop
    name: OnFileDrop
    nameWithType: GameBase.OnFileDrop
    fullName: DotFeather.GameBase.OnFileDrop
  - uid: DotFeather.DFFileDroppedEventArgs
    commentId: T:DotFeather.DFFileDroppedEventArgs
    parent: DotFeather
    name: DFFileDroppedEventArgs
    nameWithType: DFFileDroppedEventArgs
    fullName: DotFeather.DFFileDroppedEventArgs
  - uid: DotFeather.GameBase.OnResize*
    commentId: Overload:DotFeather.GameBase.OnResize
    name: OnResize
    nameWithType: GameBase.OnResize
    fullName: DotFeather.GameBase.OnResize
  - uid: DotFeather.GameBase.OnKeyPress*
    commentId: Overload:DotFeather.GameBase.OnKeyPress
    name: OnKeyPress
    nameWithType: GameBase.OnKeyPress
    fullName: DotFeather.GameBase.OnKeyPress
  - uid: DotFeather.DFKeyPressEventArgs
    commentId: T:DotFeather.DFKeyPressEventArgs
    parent: DotFeather
    name: DFKeyPressEventArgs
    nameWithType: DFKeyPressEventArgs
    fullName: DotFeather.DFKeyPressEventArgs
  - uid: DotFeather.GameBase.OnKeyDown*
    commentId: Overload:DotFeather.GameBase.OnKeyDown
    name: OnKeyDown
    nameWithType: GameBase.OnKeyDown
    fullName: DotFeather.GameBase.OnKeyDown
  - uid: DotFeather.DFKeyEventArgs
    commentId: T:DotFeather.DFKeyEventArgs
    parent: DotFeather
    name: DFKeyEventArgs
    nameWithType: DFKeyEventArgs
    fullName: DotFeather.DFKeyEventArgs
  - uid: DotFeather.GameBase.OnKeyUp*
    commentId: Overload:DotFeather.GameBase.OnKeyUp
    name: OnKeyUp
    nameWithType: GameBase.OnKeyUp
    fullName: DotFeather.GameBase.OnKeyUp
  - uid: DotFeather.GameBase.Random*
    commentId: Overload:DotFeather.GameBase.Random
    name: Random
    nameWithType: GameBase.Random
    fullName: DotFeather.GameBase.Random
  - uid: System.EventHandler{System.EventArgs}
    commentId: T:System.EventHandler{System.EventArgs}
    parent: System
    definition: System.EventHandler`1
    name: EventHandler<EventArgs>
    nameWithType: EventHandler<EventArgs>
    fullName: System.EventHandler<System.EventArgs>
    nameWithType.vb: EventHandler(Of EventArgs)
    fullName.vb: System.EventHandler(Of System.EventArgs)
    name.vb: EventHandler(Of EventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.EventHandler`1
    commentId: T:System.EventHandler`1
    isExternal: true
    name: EventHandler<TEventArgs>
    nameWithType: EventHandler<TEventArgs>
    fullName: System.EventHandler<TEventArgs>
    nameWithType.vb: EventHandler(Of TEventArgs)
    fullName.vb: System.EventHandler(Of TEventArgs)
    name.vb: EventHandler(Of TEventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: TEventArgs
        nameWithType: TEventArgs
        fullName: TEventArgs
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: TEventArgs
        nameWithType: TEventArgs
        fullName: TEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.EventHandler{DotFeather.DFFileDroppedEventArgs}
    commentId: T:System.EventHandler{DotFeather.DFFileDroppedEventArgs}
    parent: System
    definition: System.EventHandler`1
    name: EventHandler<DFFileDroppedEventArgs>
    nameWithType: EventHandler<DFFileDroppedEventArgs>
    fullName: System.EventHandler<DotFeather.DFFileDroppedEventArgs>
    nameWithType.vb: EventHandler(Of DFFileDroppedEventArgs)
    fullName.vb: System.EventHandler(Of DotFeather.DFFileDroppedEventArgs)
    name.vb: EventHandler(Of DFFileDroppedEventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: DotFeather.DFFileDroppedEventArgs
        name: DFFileDroppedEventArgs
        nameWithType: DFFileDroppedEventArgs
        fullName: DotFeather.DFFileDroppedEventArgs
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: DotFeather.DFFileDroppedEventArgs
        name: DFFileDroppedEventArgs
        nameWithType: DFFileDroppedEventArgs
        fullName: DotFeather.DFFileDroppedEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.EventHandler{DotFeather.DFKeyEventArgs}
    commentId: T:System.EventHandler{DotFeather.DFKeyEventArgs}
    parent: System
    definition: System.EventHandler`1
    name: EventHandler<DFKeyEventArgs>
    nameWithType: EventHandler<DFKeyEventArgs>
    fullName: System.EventHandler<DotFeather.DFKeyEventArgs>
    nameWithType.vb: EventHandler(Of DFKeyEventArgs)
    fullName.vb: System.EventHandler(Of DotFeather.DFKeyEventArgs)
    name.vb: EventHandler(Of DFKeyEventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: DotFeather.DFKeyEventArgs
        name: DFKeyEventArgs
        nameWithType: DFKeyEventArgs
        fullName: DotFeather.DFKeyEventArgs
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: DotFeather.DFKeyEventArgs
        name: DFKeyEventArgs
        nameWithType: DFKeyEventArgs
        fullName: DotFeather.DFKeyEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.EventHandler{DotFeather.DFKeyPressEventArgs}
    commentId: T:System.EventHandler{DotFeather.DFKeyPressEventArgs}
    parent: System
    definition: System.EventHandler`1
    name: EventHandler<DFKeyPressEventArgs>
    nameWithType: EventHandler<DFKeyPressEventArgs>
    fullName: System.EventHandler<DotFeather.DFKeyPressEventArgs>
    nameWithType.vb: EventHandler(Of DFKeyPressEventArgs)
    fullName.vb: System.EventHandler(Of DotFeather.DFKeyPressEventArgs)
    name.vb: EventHandler(Of DFKeyPressEventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: DotFeather.DFKeyPressEventArgs
        name: DFKeyPressEventArgs
        nameWithType: DFKeyPressEventArgs
        fullName: DotFeather.DFKeyPressEventArgs
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: DotFeather.DFKeyPressEventArgs
        name: DFKeyPressEventArgs
        nameWithType: DFKeyPressEventArgs
        fullName: DotFeather.DFKeyPressEventArgs
      - name: )
        nameWithType: )
        fullName: )
