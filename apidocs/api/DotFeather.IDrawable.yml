### YamlMime:ManagedReference
items:
  - uid: DotFeather.IDrawable
    commentId: T:DotFeather.IDrawable
    id: IDrawable
    parent: DotFeather
    children:
      - DotFeather.IDrawable.Angle
      - DotFeather.IDrawable.Destroy
      - DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
      - DotFeather.IDrawable.Location
      - DotFeather.IDrawable.Name
      - DotFeather.IDrawable.Scale
      - DotFeather.IDrawable.ZOrder
    langs:
      - csharp
      - vb
    name: IDrawable
    nameWithType: IDrawable
    fullName: DotFeather.IDrawable
    type: Interface
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IDrawable
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 5
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nAll classes that drawing something implement this interface.\n"
    example: []
    syntax:
      content: public interface IDrawable
      content.vb: Public Interface IDrawable
    modifiers.csharp:
      - public
      - interface
    modifiers.vb:
      - Public
      - Interface
  - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    commentId: M:DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    id: Draw(DotFeather.GameBase,DotFeather.Vector)
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: Draw(GameBase, Vector)
    nameWithType: IDrawable.Draw(GameBase, Vector)
    fullName: DotFeather.IDrawable.Draw(DotFeather.GameBase, DotFeather.Vector)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Draw
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 12
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nStart drawing on the screen.\n"
    example: []
    syntax:
      content: void Draw(GameBase game, Vector location)
      parameters:
        - id: game
          type: DotFeather.GameBase
          description: Game.
        - id: location
          type: DotFeather.Vector
          description: ""
      content.vb: Sub Draw(game As GameBase, location As Vector)
    overload: DotFeather.IDrawable.Draw*
  - uid: DotFeather.IDrawable.ZOrder
    commentId: P:DotFeather.IDrawable.ZOrder
    id: ZOrder
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: ZOrder
    nameWithType: IDrawable.ZOrder
    fullName: DotFeather.IDrawable.ZOrder
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ZOrder
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 17
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set z order of this <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref>. The higher the value, the object will be drawn in the foreground.\n"
    example: []
    syntax:
      content: int ZOrder { get; set; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Property ZOrder As Integer
    overload: DotFeather.IDrawable.ZOrder*
    modifiers.csharp:
      - get
      - set
  - uid: DotFeather.IDrawable.Name
    commentId: P:DotFeather.IDrawable.Name
    id: Name
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: Name
    nameWithType: IDrawable.Name
    fullName: DotFeather.IDrawable.Name
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Name
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 22
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set name of this <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: string Name { get; set; }
      parameters: []
      return:
        type: System.String
      content.vb: Property Name As String
    overload: DotFeather.IDrawable.Name*
    modifiers.csharp:
      - get
      - set
  - uid: DotFeather.IDrawable.Location
    commentId: P:DotFeather.IDrawable.Location
    id: Location
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: Location
    nameWithType: IDrawable.Location
    fullName: DotFeather.IDrawable.Location
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Location
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 27
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set location of this <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: Vector Location { get; set; }
      parameters: []
      return:
        type: DotFeather.Vector
      content.vb: Property Location As Vector
    overload: DotFeather.IDrawable.Location*
    modifiers.csharp:
      - get
      - set
  - uid: DotFeather.IDrawable.Angle
    commentId: P:DotFeather.IDrawable.Angle
    id: Angle
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: Angle
    nameWithType: IDrawable.Angle
    fullName: DotFeather.IDrawable.Angle
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Angle
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 32
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set angle of this <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: float Angle { get; set; }
      parameters: []
      return:
        type: System.Single
      content.vb: Property Angle As Single
    overload: DotFeather.IDrawable.Angle*
    modifiers.csharp:
      - get
      - set
  - uid: DotFeather.IDrawable.Scale
    commentId: P:DotFeather.IDrawable.Scale
    id: Scale
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: Scale
    nameWithType: IDrawable.Scale
    fullName: DotFeather.IDrawable.Scale
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Scale
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 37
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set scaling amount of this <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: Vector Scale { get; set; }
      parameters: []
      return:
        type: DotFeather.Vector
      content.vb: Property Scale As Vector
    overload: DotFeather.IDrawable.Scale*
    modifiers.csharp:
      - get
      - set
  - uid: DotFeather.IDrawable.Destroy
    commentId: M:DotFeather.IDrawable.Destroy
    id: Destroy
    parent: DotFeather.IDrawable
    langs:
      - csharp
      - vb
    name: Destroy()
    nameWithType: IDrawable.Destroy()
    fullName: DotFeather.IDrawable.Destroy()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IDrawable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Destroy
      path: ../DotFeather/Graphics/Interfaces/IDrawable.cs
      startLine: 42
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDestroy this <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: void Destroy()
      content.vb: Sub Destroy
    overload: DotFeather.IDrawable.Destroy*
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: DotFeather.IDrawable.Draw*
    commentId: Overload:DotFeather.IDrawable.Draw
    name: Draw
    nameWithType: IDrawable.Draw
    fullName: DotFeather.IDrawable.Draw
  - uid: DotFeather.GameBase
    commentId: T:DotFeather.GameBase
    parent: DotFeather
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - uid: DotFeather.Vector
    commentId: T:DotFeather.Vector
    parent: DotFeather
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - uid: DotFeather.IDrawable
    commentId: T:DotFeather.IDrawable
    parent: DotFeather
    name: IDrawable
    nameWithType: IDrawable
    fullName: DotFeather.IDrawable
  - uid: DotFeather.IDrawable.ZOrder*
    commentId: Overload:DotFeather.IDrawable.ZOrder
    name: ZOrder
    nameWithType: IDrawable.ZOrder
    fullName: DotFeather.IDrawable.ZOrder
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.IDrawable.Name*
    commentId: Overload:DotFeather.IDrawable.Name
    name: Name
    nameWithType: IDrawable.Name
    fullName: DotFeather.IDrawable.Name
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: DotFeather.IDrawable.Location*
    commentId: Overload:DotFeather.IDrawable.Location
    name: Location
    nameWithType: IDrawable.Location
    fullName: DotFeather.IDrawable.Location
  - uid: DotFeather.IDrawable.Angle*
    commentId: Overload:DotFeather.IDrawable.Angle
    name: Angle
    nameWithType: IDrawable.Angle
    fullName: DotFeather.IDrawable.Angle
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.IDrawable.Scale*
    commentId: Overload:DotFeather.IDrawable.Scale
    name: Scale
    nameWithType: IDrawable.Scale
    fullName: DotFeather.IDrawable.Scale
  - uid: DotFeather.IDrawable.Destroy*
    commentId: Overload:DotFeather.IDrawable.Destroy
    name: Destroy
    nameWithType: IDrawable.Destroy
    fullName: DotFeather.IDrawable.Destroy
