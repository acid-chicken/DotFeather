### YamlMime:ManagedReference
items:
  - uid: DotFeather.WaitUntil
    commentId: T:DotFeather.WaitUntil
    id: WaitUntil
    parent: DotFeather
    children:
      - DotFeather.WaitUntil.#ctor(System.Func{System.Boolean})
      - DotFeather.WaitUntil.KeepWaiting
    langs:
      - csharp
      - vb
    name: WaitUntil
    nameWithType: WaitUntil
    fullName: DotFeather.WaitUntil
    type: Class
    source:
      remote:
        path: DotFeather/Coroutines/YieldInstructions/WaitUntil.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: WaitUntil
      path: ../DotFeather/Coroutines/YieldInstructions/WaitUntil.cs
      startLine: 7
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nA yield instruction that keeps waiting until the specified condition is met.\n"
    example: []
    syntax:
      content: "public class WaitUntil : YieldInstruction"
      content.vb: >-
        Public Class WaitUntil
            Inherits YieldInstruction
    inheritance:
      - System.Object
      - DotFeather.YieldInstruction
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.WaitUntil.KeepWaiting
    commentId: P:DotFeather.WaitUntil.KeepWaiting
    id: KeepWaiting
    parent: DotFeather.WaitUntil
    langs:
      - csharp
      - vb
    name: KeepWaiting
    nameWithType: WaitUntil.KeepWaiting
    fullName: DotFeather.WaitUntil.KeepWaiting
    type: Property
    source:
      remote:
        path: DotFeather/Coroutines/YieldInstructions/WaitUntil.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: KeepWaiting
      path: ../DotFeather/Coroutines/YieldInstructions/WaitUntil.cs
      startLine: 9
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public override bool KeepWaiting { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Overrides ReadOnly Property KeepWaiting As Boolean
    overridden: DotFeather.YieldInstruction.KeepWaiting
    overload: DotFeather.WaitUntil.KeepWaiting*
    modifiers.csharp:
      - public
      - override
      - get
    modifiers.vb:
      - Public
      - Overrides
      - ReadOnly
  - uid: DotFeather.WaitUntil.#ctor(System.Func{System.Boolean})
    commentId: M:DotFeather.WaitUntil.#ctor(System.Func{System.Boolean})
    id: "#ctor(System.Func{System.Boolean})"
    parent: DotFeather.WaitUntil
    langs:
      - csharp
      - vb
    name: WaitUntil(Func<Boolean>)
    nameWithType: WaitUntil.WaitUntil(Func<Boolean>)
    fullName: DotFeather.WaitUntil.WaitUntil(System.Func<System.Boolean>)
    type: Constructor
    source:
      remote:
        path: DotFeather/Coroutines/YieldInstructions/WaitUntil.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Coroutines/YieldInstructions/WaitUntil.cs
      startLine: 11
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public WaitUntil(Func<bool> condition)
      parameters:
        - id: condition
          type: System.Func{System.Boolean}
      content.vb: Public Sub New(condition As Func(Of Boolean))
    overload: DotFeather.WaitUntil.#ctor*
    nameWithType.vb: WaitUntil.WaitUntil(Func(Of Boolean))
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.WaitUntil.WaitUntil(System.Func(Of System.Boolean))
    name.vb: WaitUntil(Func(Of Boolean))
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.YieldInstruction
    commentId: T:DotFeather.YieldInstruction
    parent: DotFeather
    name: YieldInstruction
    nameWithType: YieldInstruction
    fullName: DotFeather.YieldInstruction
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.YieldInstruction.KeepWaiting
    commentId: P:DotFeather.YieldInstruction.KeepWaiting
    parent: DotFeather.YieldInstruction
    name: KeepWaiting
    nameWithType: YieldInstruction.KeepWaiting
    fullName: DotFeather.YieldInstruction.KeepWaiting
  - uid: DotFeather.WaitUntil.KeepWaiting*
    commentId: Overload:DotFeather.WaitUntil.KeepWaiting
    name: KeepWaiting
    nameWithType: WaitUntil.KeepWaiting
    fullName: DotFeather.WaitUntil.KeepWaiting
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: DotFeather.WaitUntil.#ctor*
    commentId: Overload:DotFeather.WaitUntil.#ctor
    name: WaitUntil
    nameWithType: WaitUntil.WaitUntil
    fullName: DotFeather.WaitUntil.WaitUntil
  - uid: System.Func{System.Boolean}
    commentId: T:System.Func{System.Boolean}
    parent: System
    definition: System.Func`1
    name: Func<Boolean>
    nameWithType: Func<Boolean>
    fullName: System.Func<System.Boolean>
    nameWithType.vb: Func(Of Boolean)
    fullName.vb: System.Func(Of System.Boolean)
    name.vb: Func(Of Boolean)
    spec.csharp:
      - uid: System.Func`1
        name: Func
        nameWithType: Func
        fullName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Boolean
        name: Boolean
        nameWithType: Boolean
        fullName: System.Boolean
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Func`1
        name: Func
        nameWithType: Func
        fullName: System.Func
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Boolean
        name: Boolean
        nameWithType: Boolean
        fullName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Func`1
    commentId: T:System.Func`1
    isExternal: true
    name: Func<TResult>
    nameWithType: Func<TResult>
    fullName: System.Func<TResult>
    nameWithType.vb: Func(Of TResult)
    fullName.vb: System.Func(Of TResult)
    name.vb: Func(Of TResult)
    spec.csharp:
      - uid: System.Func`1
        name: Func
        nameWithType: Func
        fullName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: TResult
        nameWithType: TResult
        fullName: TResult
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Func`1
        name: Func
        nameWithType: Func
        fullName: System.Func
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: TResult
        nameWithType: TResult
        fullName: TResult
      - name: )
        nameWithType: )
        fullName: )
