### YamlMime:ManagedReference
items:
  - uid: DotFeather.GLContext
    commentId: T:DotFeather.GLContext
    id: GLContext
    parent: DotFeather
    children:
      - DotFeather.GLContext.#ctor(PrimitiveType)
      - DotFeather.GLContext.Dispose
    langs:
      - csharp
      - vb
    name: GLContext
    nameWithType: GLContext
    fullName: DotFeather.GLContext
    type: Class
    source:
      remote:
        path: DotFeather/Helpers/GLContext.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: GLContext
      path: ../DotFeather/Helpers/GLContext.cs
      startLine: 7
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n<see cref=\"!:GL.Begin(PrimitiveType)\"></see> および <see cref=\"!:GL.End()\"></see> を <code>using</code> 句で扱えるようにしたクラスです。このクラスは継承できません。\n"
    example: []
    syntax:
      content: "public sealed class GLContext : IDisposable"
      content.vb: >-
        Public NotInheritable Class GLContext
            Implements IDisposable
    inheritance:
      - System.Object
    implements:
      - System.IDisposable
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - sealed
      - class
    modifiers.vb:
      - Public
      - NotInheritable
      - Class
  - uid: DotFeather.GLContext.#ctor(PrimitiveType)
    commentId: M:DotFeather.GLContext.#ctor(PrimitiveType)
    id: "#ctor(PrimitiveType)"
    parent: DotFeather.GLContext
    langs:
      - csharp
      - vb
    name: GLContext(PrimitiveType)
    nameWithType: GLContext.GLContext(PrimitiveType)
    fullName: DotFeather.GLContext.GLContext(PrimitiveType)
    type: Constructor
    source:
      remote:
        path: DotFeather/Helpers/GLContext.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Helpers/GLContext.cs
      startLine: 13
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n<xref href=\"DotFeather.GLContext\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
    example: []
    syntax:
      content: public GLContext(PrimitiveType p)
      parameters:
        - id: p
          type: PrimitiveType
          description: ""
      content.vb: Public Sub New(p As PrimitiveType)
    overload: DotFeather.GLContext.#ctor*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.GLContext.Dispose
    commentId: M:DotFeather.GLContext.Dispose
    id: Dispose
    parent: DotFeather.GLContext
    langs:
      - csharp
      - vb
    name: Dispose()
    nameWithType: GLContext.Dispose()
    fullName: DotFeather.GLContext.Dispose()
    type: Method
    source:
      remote:
        path: DotFeather/Helpers/GLContext.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Dispose
      path: ../DotFeather/Helpers/GLContext.cs
      startLine: 21
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nコンテキストを解放します。\n"
    example: []
    syntax:
      content: public void Dispose()
      content.vb: Public Sub Dispose
    overload: DotFeather.GLContext.Dispose*
    implements:
      - System.IDisposable.Dispose
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.IDisposable
    commentId: T:System.IDisposable
    parent: System
    isExternal: true
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.GLContext
    commentId: T:DotFeather.GLContext
    name: GLContext
    nameWithType: GLContext
    fullName: DotFeather.GLContext
  - uid: DotFeather.GLContext.#ctor*
    commentId: Overload:DotFeather.GLContext.#ctor
    name: GLContext
    nameWithType: GLContext.GLContext
    fullName: DotFeather.GLContext.GLContext
  - uid: PrimitiveType
    commentId: "!:PrimitiveType"
    isExternal: true
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - uid: DotFeather.GLContext.Dispose*
    commentId: Overload:DotFeather.GLContext.Dispose
    name: Dispose
    nameWithType: GLContext.Dispose
    fullName: DotFeather.GLContext.Dispose
  - uid: System.IDisposable.Dispose
    commentId: M:System.IDisposable.Dispose
    parent: System.IDisposable
    isExternal: true
    name: Dispose()
    nameWithType: IDisposable.Dispose()
    fullName: System.IDisposable.Dispose()
    spec.csharp:
      - uid: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        fullName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        fullName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
