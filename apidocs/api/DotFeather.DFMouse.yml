### YamlMime:ManagedReference
items:
  - uid: DotFeather.DFMouse
    commentId: T:DotFeather.DFMouse
    id: DFMouse
    parent: DotFeather
    children:
      - DotFeather.DFMouse.IsLeft
      - DotFeather.DFMouse.IsLeftDown
      - DotFeather.DFMouse.IsLeftUp
      - DotFeather.DFMouse.IsMiddle
      - DotFeather.DFMouse.IsMiddleDown
      - DotFeather.DFMouse.IsMiddleUp
      - DotFeather.DFMouse.IsRight
      - DotFeather.DFMouse.IsRightDown
      - DotFeather.DFMouse.IsRightUp
      - DotFeather.DFMouse.Position
      - DotFeather.DFMouse.Scroll
    langs:
      - csharp
      - vb
    name: DFMouse
    nameWithType: DFMouse
    fullName: DotFeather.DFMouse
    type: Class
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DFMouse
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 8
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nThis class gets the mouse cursor position, mouse button status, etc. This class can not be inherited.\n"
    example: []
    syntax:
      content: public static class DFMouse
      content.vb: Public Module DFMouse
    inheritance:
      - System.Object
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - static
      - class
    modifiers.vb:
      - Public
      - Module
  - uid: DotFeather.DFMouse.Position
    commentId: P:DotFeather.DFMouse.Position
    id: Position
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: Position
    nameWithType: DFMouse.Position
    fullName: DotFeather.DFMouse.Position
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Position
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 14
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet mouse cursor coordinates.\n"
    example: []
    syntax:
      content: public static VectorInt Position { get; }
      parameters: []
      return:
        type: DotFeather.VectorInt
        description: The position.
      content.vb: Public Shared ReadOnly Property Position As VectorInt
    overload: DotFeather.DFMouse.Position*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsLeft
    commentId: P:DotFeather.DFMouse.IsLeft
    id: IsLeft
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsLeft
    nameWithType: DFMouse.IsLeft
    fullName: DotFeather.DFMouse.IsLeft
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsLeft
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 19
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether left button pressed.\n"
    example: []
    syntax:
      content: public static bool IsLeft { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsLeft As Boolean
    overload: DotFeather.DFMouse.IsLeft*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsRight
    commentId: P:DotFeather.DFMouse.IsRight
    id: IsRight
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsRight
    nameWithType: DFMouse.IsRight
    fullName: DotFeather.DFMouse.IsRight
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsRight
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 24
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether right button pressed.\n"
    example: []
    syntax:
      content: public static bool IsRight { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsRight As Boolean
    overload: DotFeather.DFMouse.IsRight*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsMiddle
    commentId: P:DotFeather.DFMouse.IsMiddle
    id: IsMiddle
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsMiddle
    nameWithType: DFMouse.IsMiddle
    fullName: DotFeather.DFMouse.IsMiddle
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsMiddle
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 29
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether middle button pressed.\n"
    example: []
    syntax:
      content: public static bool IsMiddle { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsMiddle As Boolean
    overload: DotFeather.DFMouse.IsMiddle*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsLeftDown
    commentId: P:DotFeather.DFMouse.IsLeftDown
    id: IsLeftDown
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsLeftDown
    nameWithType: DFMouse.IsLeftDown
    fullName: DotFeather.DFMouse.IsLeftDown
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsLeftDown
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 34
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether left button pressed down.\n"
    example: []
    syntax:
      content: public static bool IsLeftDown { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsLeftDown As Boolean
    overload: DotFeather.DFMouse.IsLeftDown*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsRightDown
    commentId: P:DotFeather.DFMouse.IsRightDown
    id: IsRightDown
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsRightDown
    nameWithType: DFMouse.IsRightDown
    fullName: DotFeather.DFMouse.IsRightDown
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsRightDown
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 39
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether right button pressed down.\n"
    example: []
    syntax:
      content: public static bool IsRightDown { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsRightDown As Boolean
    overload: DotFeather.DFMouse.IsRightDown*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsMiddleDown
    commentId: P:DotFeather.DFMouse.IsMiddleDown
    id: IsMiddleDown
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsMiddleDown
    nameWithType: DFMouse.IsMiddleDown
    fullName: DotFeather.DFMouse.IsMiddleDown
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsMiddleDown
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 44
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether middle button pressed down.\n"
    example: []
    syntax:
      content: public static bool IsMiddleDown { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsMiddleDown As Boolean
    overload: DotFeather.DFMouse.IsMiddleDown*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsLeftUp
    commentId: P:DotFeather.DFMouse.IsLeftUp
    id: IsLeftUp
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsLeftUp
    nameWithType: DFMouse.IsLeftUp
    fullName: DotFeather.DFMouse.IsLeftUp
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsLeftUp
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 49
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether left button released up.\n"
    example: []
    syntax:
      content: public static bool IsLeftUp { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsLeftUp As Boolean
    overload: DotFeather.DFMouse.IsLeftUp*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsRightUp
    commentId: P:DotFeather.DFMouse.IsRightUp
    id: IsRightUp
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsRightUp
    nameWithType: DFMouse.IsRightUp
    fullName: DotFeather.DFMouse.IsRightUp
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsRightUp
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 54
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether right button released up.\n"
    example: []
    syntax:
      content: public static bool IsRightUp { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsRightUp As Boolean
    overload: DotFeather.DFMouse.IsRightUp*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.IsMiddleUp
    commentId: P:DotFeather.DFMouse.IsMiddleUp
    id: IsMiddleUp
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: IsMiddleUp
    nameWithType: DFMouse.IsMiddleUp
    fullName: DotFeather.DFMouse.IsMiddleUp
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsMiddleUp
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 59
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set whether middle button released up.\n"
    example: []
    syntax:
      content: public static bool IsMiddleUp { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public Shared ReadOnly Property IsMiddleUp As Boolean
    overload: DotFeather.DFMouse.IsMiddleUp*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.DFMouse.Scroll
    commentId: P:DotFeather.DFMouse.Scroll
    id: Scroll
    parent: DotFeather.DFMouse
    langs:
      - csharp
      - vb
    name: Scroll
    nameWithType: DFMouse.Scroll
    fullName: DotFeather.DFMouse.Scroll
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFMouse.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Scroll
      path: ../DotFeather/InputSystems/DFMouse.cs
      startLine: 65
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet mouse wheel scroll amount.\n"
    example: []
    syntax:
      content: public static Vector Scroll { get; }
      parameters: []
      return:
        type: DotFeather.Vector
        description: ""
      content.vb: Public Shared ReadOnly Property Scroll As Vector
    overload: DotFeather.DFMouse.Scroll*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.DFMouse.Position*
    commentId: Overload:DotFeather.DFMouse.Position
    name: Position
    nameWithType: DFMouse.Position
    fullName: DotFeather.DFMouse.Position
  - uid: DotFeather.VectorInt
    commentId: T:DotFeather.VectorInt
    parent: DotFeather
    name: VectorInt
    nameWithType: VectorInt
    fullName: DotFeather.VectorInt
  - uid: DotFeather.DFMouse.IsLeft*
    commentId: Overload:DotFeather.DFMouse.IsLeft
    name: IsLeft
    nameWithType: DFMouse.IsLeft
    fullName: DotFeather.DFMouse.IsLeft
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: DotFeather.DFMouse.IsRight*
    commentId: Overload:DotFeather.DFMouse.IsRight
    name: IsRight
    nameWithType: DFMouse.IsRight
    fullName: DotFeather.DFMouse.IsRight
  - uid: DotFeather.DFMouse.IsMiddle*
    commentId: Overload:DotFeather.DFMouse.IsMiddle
    name: IsMiddle
    nameWithType: DFMouse.IsMiddle
    fullName: DotFeather.DFMouse.IsMiddle
  - uid: DotFeather.DFMouse.IsLeftDown*
    commentId: Overload:DotFeather.DFMouse.IsLeftDown
    name: IsLeftDown
    nameWithType: DFMouse.IsLeftDown
    fullName: DotFeather.DFMouse.IsLeftDown
  - uid: DotFeather.DFMouse.IsRightDown*
    commentId: Overload:DotFeather.DFMouse.IsRightDown
    name: IsRightDown
    nameWithType: DFMouse.IsRightDown
    fullName: DotFeather.DFMouse.IsRightDown
  - uid: DotFeather.DFMouse.IsMiddleDown*
    commentId: Overload:DotFeather.DFMouse.IsMiddleDown
    name: IsMiddleDown
    nameWithType: DFMouse.IsMiddleDown
    fullName: DotFeather.DFMouse.IsMiddleDown
  - uid: DotFeather.DFMouse.IsLeftUp*
    commentId: Overload:DotFeather.DFMouse.IsLeftUp
    name: IsLeftUp
    nameWithType: DFMouse.IsLeftUp
    fullName: DotFeather.DFMouse.IsLeftUp
  - uid: DotFeather.DFMouse.IsRightUp*
    commentId: Overload:DotFeather.DFMouse.IsRightUp
    name: IsRightUp
    nameWithType: DFMouse.IsRightUp
    fullName: DotFeather.DFMouse.IsRightUp
  - uid: DotFeather.DFMouse.IsMiddleUp*
    commentId: Overload:DotFeather.DFMouse.IsMiddleUp
    name: IsMiddleUp
    nameWithType: DFMouse.IsMiddleUp
    fullName: DotFeather.DFMouse.IsMiddleUp
  - uid: DotFeather.DFMouse.Scroll*
    commentId: Overload:DotFeather.DFMouse.Scroll
    name: Scroll
    nameWithType: DFMouse.Scroll
    fullName: DotFeather.DFMouse.Scroll
  - uid: DotFeather.Vector
    commentId: T:DotFeather.Vector
    parent: DotFeather
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
