### YamlMime:ManagedReference
items:
  - uid: DotFeather.ALSource
    commentId: T:DotFeather.ALSource
    id: ALSource
    parent: DotFeather
    children:
      - DotFeather.ALSource.DisposeHandle
      - DotFeather.ALSource.GenerateHandle
    langs:
      - csharp
      - vb
    name: ALSource
    nameWithType: ALSource
    fullName: DotFeather.ALSource
    type: Class
    source:
      remote:
        path: DotFeather/Helpers/ALSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ALSource
      path: ../DotFeather/Helpers/ALSource.cs
      startLine: 6
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nAL のソースハンドルを <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref> でラッピングします。\n"
    example: []
    syntax:
      content: "public class ALSource : OpenTKManagedHandleBase<int>, IDisposable"
      content.vb: >-
        Public Class ALSource
            Inherits OpenTKManagedHandleBase(Of Integer)
            Implements IDisposable
    inheritance:
      - System.Object
      - DotFeather.OpenTKManagedHandleBase{System.Int32}
    implements:
      - System.IDisposable
    inheritedMembers:
      - DotFeather.OpenTKManagedHandleBase{System.Int32}.Handle
      - DotFeather.OpenTKManagedHandleBase{System.Int32}.Dispose
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.ALSource.GenerateHandle
    commentId: M:DotFeather.ALSource.GenerateHandle
    id: GenerateHandle
    parent: DotFeather.ALSource
    langs:
      - csharp
      - vb
    name: GenerateHandle()
    nameWithType: ALSource.GenerateHandle()
    fullName: DotFeather.ALSource.GenerateHandle()
    type: Method
    source:
      remote:
        path: DotFeather/Helpers/ALSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: GenerateHandle
      path: ../DotFeather/Helpers/ALSource.cs
      startLine: 11
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nハンドルを生成します。\n"
    example: []
    syntax:
      content: public override int GenerateHandle()
      return:
        type: System.Int32
      content.vb: Public Overrides Function GenerateHandle As Integer
    overridden: DotFeather.OpenTKManagedHandleBase{System.Int32}.GenerateHandle
    overload: DotFeather.ALSource.GenerateHandle*
    modifiers.csharp:
      - public
      - override
    modifiers.vb:
      - Public
      - Overrides
  - uid: DotFeather.ALSource.DisposeHandle
    commentId: M:DotFeather.ALSource.DisposeHandle
    id: DisposeHandle
    parent: DotFeather.ALSource
    langs:
      - csharp
      - vb
    name: DisposeHandle()
    nameWithType: ALSource.DisposeHandle()
    fullName: DotFeather.ALSource.DisposeHandle()
    type: Method
    source:
      remote:
        path: DotFeather/Helpers/ALSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DisposeHandle
      path: ../DotFeather/Helpers/ALSource.cs
      startLine: 16
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nハンドルを削除します。\n"
    example: []
    syntax:
      content: public override void DisposeHandle()
      content.vb: Public Overrides Sub DisposeHandle
    overridden: DotFeather.OpenTKManagedHandleBase{System.Int32}.DisposeHandle
    overload: DotFeather.ALSource.DisposeHandle*
    modifiers.csharp:
      - public
      - override
    modifiers.vb:
      - Public
      - Overrides
references:
  - uid: System.IDisposable
    commentId: T:System.IDisposable
    parent: System
    isExternal: true
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.OpenTKManagedHandleBase{System.Int32}
    commentId: T:DotFeather.OpenTKManagedHandleBase{System.Int32}
    parent: DotFeather
    definition: DotFeather.OpenTKManagedHandleBase`1
    name: OpenTKManagedHandleBase<Int32>
    nameWithType: OpenTKManagedHandleBase<Int32>
    fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>
    nameWithType.vb: OpenTKManagedHandleBase(Of Int32)
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of System.Int32)
    name.vb: OpenTKManagedHandleBase(Of Int32)
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1
        name: OpenTKManagedHandleBase
        nameWithType: OpenTKManagedHandleBase
        fullName: DotFeather.OpenTKManagedHandleBase
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1
        name: OpenTKManagedHandleBase
        nameWithType: OpenTKManagedHandleBase
        fullName: DotFeather.OpenTKManagedHandleBase
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.OpenTKManagedHandleBase{System.Int32}.Handle
    commentId: P:DotFeather.OpenTKManagedHandleBase{System.Int32}.Handle
    parent: DotFeather.OpenTKManagedHandleBase{System.Int32}
    definition: DotFeather.OpenTKManagedHandleBase`1.Handle
    name: Handle
    nameWithType: OpenTKManagedHandleBase<Int32>.Handle
    fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.Handle
    nameWithType.vb: OpenTKManagedHandleBase(Of Int32).Handle
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of System.Int32).Handle
  - uid: DotFeather.OpenTKManagedHandleBase{System.Int32}.Dispose
    commentId: M:DotFeather.OpenTKManagedHandleBase{System.Int32}.Dispose
    parent: DotFeather.OpenTKManagedHandleBase{System.Int32}
    definition: DotFeather.OpenTKManagedHandleBase`1.Dispose
    name: Dispose()
    nameWithType: OpenTKManagedHandleBase<Int32>.Dispose()
    fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.Dispose()
    nameWithType.vb: OpenTKManagedHandleBase(Of Int32).Dispose()
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of System.Int32).Dispose()
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1.Dispose
        name: Dispose
        nameWithType: OpenTKManagedHandleBase<Int32>.Dispose
        fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1.Dispose
        name: Dispose
        nameWithType: OpenTKManagedHandleBase(Of Int32).Dispose
        fullName: DotFeather.OpenTKManagedHandleBase(Of System.Int32).Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.OpenTKManagedHandleBase`1
    commentId: T:DotFeather.OpenTKManagedHandleBase`1
    name: OpenTKManagedHandleBase<T>
    nameWithType: OpenTKManagedHandleBase<T>
    fullName: DotFeather.OpenTKManagedHandleBase<T>
    nameWithType.vb: OpenTKManagedHandleBase(Of T)
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of T)
    name.vb: OpenTKManagedHandleBase(Of T)
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1
        name: OpenTKManagedHandleBase
        nameWithType: OpenTKManagedHandleBase
        fullName: DotFeather.OpenTKManagedHandleBase
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1
        name: OpenTKManagedHandleBase
        nameWithType: OpenTKManagedHandleBase
        fullName: DotFeather.OpenTKManagedHandleBase
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.OpenTKManagedHandleBase`1.Handle
    commentId: P:DotFeather.OpenTKManagedHandleBase`1.Handle
    name: Handle
    nameWithType: OpenTKManagedHandleBase<T>.Handle
    fullName: DotFeather.OpenTKManagedHandleBase<T>.Handle
    nameWithType.vb: OpenTKManagedHandleBase(Of T).Handle
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of T).Handle
  - uid: DotFeather.OpenTKManagedHandleBase`1.Dispose
    commentId: M:DotFeather.OpenTKManagedHandleBase`1.Dispose
    name: Dispose()
    nameWithType: OpenTKManagedHandleBase<T>.Dispose()
    fullName: DotFeather.OpenTKManagedHandleBase<T>.Dispose()
    nameWithType.vb: OpenTKManagedHandleBase(Of T).Dispose()
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of T).Dispose()
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1.Dispose
        name: Dispose
        nameWithType: OpenTKManagedHandleBase<T>.Dispose
        fullName: DotFeather.OpenTKManagedHandleBase<T>.Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1.Dispose
        name: Dispose
        nameWithType: OpenTKManagedHandleBase(Of T).Dispose
        fullName: DotFeather.OpenTKManagedHandleBase(Of T).Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.OpenTKManagedHandleBase{System.Int32}.GenerateHandle
    commentId: M:DotFeather.OpenTKManagedHandleBase{System.Int32}.GenerateHandle
    parent: DotFeather.OpenTKManagedHandleBase{System.Int32}
    definition: DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
    name: GenerateHandle()
    nameWithType: OpenTKManagedHandleBase<Int32>.GenerateHandle()
    fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.GenerateHandle()
    nameWithType.vb: OpenTKManagedHandleBase(Of Int32).GenerateHandle()
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of System.Int32).GenerateHandle()
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
        name: GenerateHandle
        nameWithType: OpenTKManagedHandleBase<Int32>.GenerateHandle
        fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.GenerateHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
        name: GenerateHandle
        nameWithType: OpenTKManagedHandleBase(Of Int32).GenerateHandle
        fullName: DotFeather.OpenTKManagedHandleBase(Of System.Int32).GenerateHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.ALSource.GenerateHandle*
    commentId: Overload:DotFeather.ALSource.GenerateHandle
    name: GenerateHandle
    nameWithType: ALSource.GenerateHandle
    fullName: DotFeather.ALSource.GenerateHandle
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
    commentId: M:DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
    name: GenerateHandle()
    nameWithType: OpenTKManagedHandleBase<T>.GenerateHandle()
    fullName: DotFeather.OpenTKManagedHandleBase<T>.GenerateHandle()
    nameWithType.vb: OpenTKManagedHandleBase(Of T).GenerateHandle()
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of T).GenerateHandle()
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
        name: GenerateHandle
        nameWithType: OpenTKManagedHandleBase<T>.GenerateHandle
        fullName: DotFeather.OpenTKManagedHandleBase<T>.GenerateHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1.GenerateHandle
        name: GenerateHandle
        nameWithType: OpenTKManagedHandleBase(Of T).GenerateHandle
        fullName: DotFeather.OpenTKManagedHandleBase(Of T).GenerateHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.OpenTKManagedHandleBase{System.Int32}.DisposeHandle
    commentId: M:DotFeather.OpenTKManagedHandleBase{System.Int32}.DisposeHandle
    parent: DotFeather.OpenTKManagedHandleBase{System.Int32}
    definition: DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
    name: DisposeHandle()
    nameWithType: OpenTKManagedHandleBase<Int32>.DisposeHandle()
    fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.DisposeHandle()
    nameWithType.vb: OpenTKManagedHandleBase(Of Int32).DisposeHandle()
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of System.Int32).DisposeHandle()
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
        name: DisposeHandle
        nameWithType: OpenTKManagedHandleBase<Int32>.DisposeHandle
        fullName: DotFeather.OpenTKManagedHandleBase<System.Int32>.DisposeHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
        name: DisposeHandle
        nameWithType: OpenTKManagedHandleBase(Of Int32).DisposeHandle
        fullName: DotFeather.OpenTKManagedHandleBase(Of System.Int32).DisposeHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.ALSource.DisposeHandle*
    commentId: Overload:DotFeather.ALSource.DisposeHandle
    name: DisposeHandle
    nameWithType: ALSource.DisposeHandle
    fullName: DotFeather.ALSource.DisposeHandle
  - uid: DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
    commentId: M:DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
    name: DisposeHandle()
    nameWithType: OpenTKManagedHandleBase<T>.DisposeHandle()
    fullName: DotFeather.OpenTKManagedHandleBase<T>.DisposeHandle()
    nameWithType.vb: OpenTKManagedHandleBase(Of T).DisposeHandle()
    fullName.vb: DotFeather.OpenTKManagedHandleBase(Of T).DisposeHandle()
    spec.csharp:
      - uid: DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
        name: DisposeHandle
        nameWithType: OpenTKManagedHandleBase<T>.DisposeHandle
        fullName: DotFeather.OpenTKManagedHandleBase<T>.DisposeHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.OpenTKManagedHandleBase`1.DisposeHandle
        name: DisposeHandle
        nameWithType: OpenTKManagedHandleBase(Of T).DisposeHandle
        fullName: DotFeather.OpenTKManagedHandleBase(Of T).DisposeHandle
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
