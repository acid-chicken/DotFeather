### YamlMime:ManagedReference
items:
  - uid: DotFeather.Time
    commentId: T:DotFeather.Time
    id: Time
    parent: DotFeather
    children:
      - DotFeather.Time.DeltaTime
      - DotFeather.Time.Fps
      - DotFeather.Time.Now
    langs:
      - csharp
      - vb
    name: Time
    nameWithType: Time
    fullName: DotFeather.Time
    type: Class
    source:
      remote:
        path: DotFeather/Time.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Time
      path: ../DotFeather/Time.cs
      startLine: 6
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nProvides time related information.\n"
    example: []
    syntax:
      content: public static class Time
      content.vb: Public Module Time
    inheritance:
      - System.Object
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - static
      - class
    modifiers.vb:
      - Public
      - Module
  - uid: DotFeather.Time.Now
    commentId: P:DotFeather.Time.Now
    id: Now
    parent: DotFeather.Time
    langs:
      - csharp
      - vb
    name: Now
    nameWithType: Time.Now
    fullName: DotFeather.Time.Now
    type: Property
    source:
      remote:
        path: DotFeather/Time.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Now
      path: ../DotFeather/Time.cs
      startLine: 11
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet the time since the game started.\n"
    example: []
    syntax:
      content: public static float Now { get; }
      parameters: []
      return:
        type: System.Single
      content.vb: Public Shared ReadOnly Property Now As Single
    overload: DotFeather.Time.Now*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.Time.DeltaTime
    commentId: P:DotFeather.Time.DeltaTime
    id: DeltaTime
    parent: DotFeather.Time
    langs:
      - csharp
      - vb
    name: DeltaTime
    nameWithType: Time.DeltaTime
    fullName: DotFeather.Time.DeltaTime
    type: Property
    source:
      remote:
        path: DotFeather/Time.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DeltaTime
      path: ../DotFeather/Time.cs
      startLine: 15
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet the delta time from the previous frame.\n"
    example: []
    syntax:
      content: public static float DeltaTime { get; }
      parameters: []
      return:
        type: System.Single
      content.vb: Public Shared ReadOnly Property DeltaTime As Single
    overload: DotFeather.Time.DeltaTime*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
  - uid: DotFeather.Time.Fps
    commentId: P:DotFeather.Time.Fps
    id: Fps
    parent: DotFeather.Time
    langs:
      - csharp
      - vb
    name: Fps
    nameWithType: Time.Fps
    fullName: DotFeather.Time.Fps
    type: Property
    source:
      remote:
        path: DotFeather/Time.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Fps
      path: ../DotFeather/Time.cs
      startLine: 20
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet the current frame rate.\n"
    example: []
    syntax:
      content: public static int Fps { get; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public Shared ReadOnly Property Fps As Integer
    overload: DotFeather.Time.Fps*
    modifiers.csharp:
      - public
      - static
      - get
    modifiers.vb:
      - Public
      - Shared
      - ReadOnly
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.Time.Now*
    commentId: Overload:DotFeather.Time.Now
    name: Now
    nameWithType: Time.Now
    fullName: DotFeather.Time.Now
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.Time.DeltaTime*
    commentId: Overload:DotFeather.Time.DeltaTime
    name: DeltaTime
    nameWithType: Time.DeltaTime
    fullName: DotFeather.Time.DeltaTime
  - uid: DotFeather.Time.Fps*
    commentId: Overload:DotFeather.Time.Fps
    name: Fps
    nameWithType: Time.Fps
    fullName: DotFeather.Time.Fps
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
