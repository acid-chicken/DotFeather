### YamlMime:ManagedReference
items:
  - uid: DotFeather.DFKey
    commentId: T:DotFeather.DFKey
    id: DFKey
    parent: DotFeather
    children:
      - DotFeather.DFKey.ElapsedFrameCount
      - DotFeather.DFKey.ElapsedTime
      - DotFeather.DFKey.IsKeyDown
      - DotFeather.DFKey.IsKeyUp
      - DotFeather.DFKey.IsPressed
      - DotFeather.DFKey.op_Implicit(DotFeather.DFKey)~System.Boolean
    langs:
      - csharp
      - vb
    name: DFKey
    nameWithType: DFKey
    fullName: DotFeather.DFKey
    type: Class
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DFKey
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 7
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nRepresents a keyboard key.\n"
    example: []
    syntax:
      content: public class DFKey
      content.vb: Public Class DFKey
    inheritance:
      - System.Object
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.DFKey.IsPressed
    commentId: P:DotFeather.DFKey.IsPressed
    id: IsPressed
    parent: DotFeather.DFKey
    langs:
      - csharp
      - vb
    name: IsPressed
    nameWithType: DFKey.IsPressed
    fullName: DotFeather.DFKey.IsPressed
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsPressed
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 14
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGets a value that indicates whether the key is pressed.\n"
    example: []
    syntax:
      content: public bool IsPressed { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public ReadOnly Property IsPressed As Boolean
    overload: DotFeather.DFKey.IsPressed*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DFKey.ElapsedFrameCount
    commentId: P:DotFeather.DFKey.ElapsedFrameCount
    id: ElapsedFrameCount
    parent: DotFeather.DFKey
    langs:
      - csharp
      - vb
    name: ElapsedFrameCount
    nameWithType: DFKey.ElapsedFrameCount
    fullName: DotFeather.DFKey.ElapsedFrameCount
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ElapsedFrameCount
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 20
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGets the frame count elapsed since the key was pressed.\n"
    example: []
    syntax:
      content: public int ElapsedFrameCount { get; }
      parameters: []
      return:
        type: System.Int32
        description: ""
      content.vb: Public ReadOnly Property ElapsedFrameCount As Integer
    overload: DotFeather.DFKey.ElapsedFrameCount*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DFKey.ElapsedTime
    commentId: P:DotFeather.DFKey.ElapsedTime
    id: ElapsedTime
    parent: DotFeather.DFKey
    langs:
      - csharp
      - vb
    name: ElapsedTime
    nameWithType: DFKey.ElapsedTime
    fullName: DotFeather.DFKey.ElapsedTime
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ElapsedTime
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 26
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGets the time elapsed since the key was pressed.\n"
    example: []
    syntax:
      content: public float ElapsedTime { get; }
      parameters: []
      return:
        type: System.Single
        description: ""
      content.vb: Public ReadOnly Property ElapsedTime As Single
    overload: DotFeather.DFKey.ElapsedTime*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DFKey.IsKeyDown
    commentId: P:DotFeather.DFKey.IsKeyDown
    id: IsKeyDown
    parent: DotFeather.DFKey
    langs:
      - csharp
      - vb
    name: IsKeyDown
    nameWithType: DFKey.IsKeyDown
    fullName: DotFeather.DFKey.IsKeyDown
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsKeyDown
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 31
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGets whether the key was pressed at this frame.\n"
    example: []
    syntax:
      content: public bool IsKeyDown { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public ReadOnly Property IsKeyDown As Boolean
    overload: DotFeather.DFKey.IsKeyDown*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DFKey.IsKeyUp
    commentId: P:DotFeather.DFKey.IsKeyUp
    id: IsKeyUp
    parent: DotFeather.DFKey
    langs:
      - csharp
      - vb
    name: IsKeyUp
    nameWithType: DFKey.IsKeyUp
    fullName: DotFeather.DFKey.IsKeyUp
    type: Property
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IsKeyUp
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 36
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGets whether the key was released at this frame.\n"
    example: []
    syntax:
      content: public bool IsKeyUp { get; }
      parameters: []
      return:
        type: System.Boolean
      content.vb: Public ReadOnly Property IsKeyUp As Boolean
    overload: DotFeather.DFKey.IsKeyUp*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DFKey.op_Implicit(DotFeather.DFKey)~System.Boolean
    commentId: M:DotFeather.DFKey.op_Implicit(DotFeather.DFKey)~System.Boolean
    id: op_Implicit(DotFeather.DFKey)~System.Boolean
    parent: DotFeather.DFKey
    langs:
      - csharp
      - vb
    name: Implicit(DFKey to Boolean)
    nameWithType: DFKey.Implicit(DFKey to Boolean)
    fullName: DotFeather.DFKey.Implicit(DotFeather.DFKey to System.Boolean)
    type: Operator
    source:
      remote:
        path: DotFeather/InputSystems/DFKey.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: op_Implicit
      path: ../DotFeather/InputSystems/DFKey.cs
      startLine: 38
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public static implicit operator bool (DFKey key)
      parameters:
        - id: key
          type: DotFeather.DFKey
      return:
        type: System.Boolean
      content.vb: Public Shared Widening Operator CType(key As DFKey) As Boolean
    overload: DotFeather.DFKey.op_Implicit*
    nameWithType.vb: DFKey.Widening(DFKey to Boolean)
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
    fullName.vb: DotFeather.DFKey.Widening(DotFeather.DFKey to System.Boolean)
    name.vb: Widening(DFKey to Boolean)
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.DFKey.IsPressed*
    commentId: Overload:DotFeather.DFKey.IsPressed
    name: IsPressed
    nameWithType: DFKey.IsPressed
    fullName: DotFeather.DFKey.IsPressed
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: DotFeather.DFKey.ElapsedFrameCount*
    commentId: Overload:DotFeather.DFKey.ElapsedFrameCount
    name: ElapsedFrameCount
    nameWithType: DFKey.ElapsedFrameCount
    fullName: DotFeather.DFKey.ElapsedFrameCount
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: DotFeather.DFKey.ElapsedTime*
    commentId: Overload:DotFeather.DFKey.ElapsedTime
    name: ElapsedTime
    nameWithType: DFKey.ElapsedTime
    fullName: DotFeather.DFKey.ElapsedTime
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.DFKey.IsKeyDown*
    commentId: Overload:DotFeather.DFKey.IsKeyDown
    name: IsKeyDown
    nameWithType: DFKey.IsKeyDown
    fullName: DotFeather.DFKey.IsKeyDown
  - uid: DotFeather.DFKey.IsKeyUp*
    commentId: Overload:DotFeather.DFKey.IsKeyUp
    name: IsKeyUp
    nameWithType: DFKey.IsKeyUp
    fullName: DotFeather.DFKey.IsKeyUp
  - uid: DotFeather.DFKey.op_Implicit*
    commentId: Overload:DotFeather.DFKey.op_Implicit
    name: Implicit
    nameWithType: DFKey.Implicit
    fullName: DotFeather.DFKey.Implicit
    nameWithType.vb: DFKey.Widening
    fullName.vb: DotFeather.DFKey.Widening
    name.vb: Widening
  - uid: DotFeather.DFKey
    commentId: T:DotFeather.DFKey
    parent: DotFeather
    name: DFKey
    nameWithType: DFKey
    fullName: DotFeather.DFKey
