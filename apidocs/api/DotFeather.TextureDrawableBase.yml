### YamlMime:ManagedReference
items:
  - uid: DotFeather.TextureDrawableBase
    commentId: T:DotFeather.TextureDrawableBase
    id: TextureDrawableBase
    parent: DotFeather
    children:
      - DotFeather.TextureDrawableBase.AbsoluteLocation
      - DotFeather.TextureDrawableBase.Angle
      - DotFeather.TextureDrawableBase.Color
      - DotFeather.TextureDrawableBase.Destroy
      - DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
      - DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
      - DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
      - DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
      - DotFeather.TextureDrawableBase.Height
      - DotFeather.TextureDrawableBase.Location
      - DotFeather.TextureDrawableBase.Name
      - DotFeather.TextureDrawableBase.Parent
      - DotFeather.TextureDrawableBase.Scale
      - DotFeather.TextureDrawableBase.Texture
      - DotFeather.TextureDrawableBase.Width
      - DotFeather.TextureDrawableBase.ZOrder
    langs:
      - csharp
      - vb
    name: TextureDrawableBase
    nameWithType: TextureDrawableBase
    fullName: DotFeather.TextureDrawableBase
    type: Class
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: TextureDrawableBase
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 7
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nAn abstract class for objects that draw a <xref href=\"DotFeather.Texture2D\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: "public abstract class TextureDrawableBase : IContainable, ISizedDrawable, IDrawable"
      content.vb: >-
        Public MustInherit Class TextureDrawableBase
            Implements IContainable, ISizedDrawable, IDrawable
    inheritance:
      - System.Object
    derivedClasses:
      - DotFeather.Sprite
      - DotFeather.TextDrawable
    implements:
      - DotFeather.IContainable
      - DotFeather.ISizedDrawable
      - DotFeather.IDrawable
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - abstract
      - class
    modifiers.vb:
      - Public
      - MustInherit
      - Class
  - uid: DotFeather.TextureDrawableBase.ZOrder
    commentId: P:DotFeather.TextureDrawableBase.ZOrder
    id: ZOrder
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: ZOrder
    nameWithType: TextureDrawableBase.ZOrder
    fullName: DotFeather.TextureDrawableBase.ZOrder
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: ZOrder
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 9
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public virtual int ZOrder { get; set; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public Overridable Property ZOrder As Integer
    overload: DotFeather.TextureDrawableBase.ZOrder*
    implements:
      - DotFeather.IDrawable.ZOrder
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Name
    commentId: P:DotFeather.TextureDrawableBase.Name
    id: Name
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Name
    nameWithType: TextureDrawableBase.Name
    fullName: DotFeather.TextureDrawableBase.Name
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Name
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 11
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public virtual string Name { get; set; }
      parameters: []
      return:
        type: System.String
      content.vb: Public Overridable Property Name As String
    overload: DotFeather.TextureDrawableBase.Name*
    implements:
      - DotFeather.IDrawable.Name
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Location
    commentId: P:DotFeather.TextureDrawableBase.Location
    id: Location
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Location
    nameWithType: TextureDrawableBase.Location
    fullName: DotFeather.TextureDrawableBase.Location
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Location
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 13
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public virtual Vector Location { get; set; }
      parameters: []
      return:
        type: DotFeather.Vector
      content.vb: Public Overridable Property Location As Vector
    overload: DotFeather.TextureDrawableBase.Location*
    implements:
      - DotFeather.IDrawable.Location
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Angle
    commentId: P:DotFeather.TextureDrawableBase.Angle
    id: Angle
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Angle
    nameWithType: TextureDrawableBase.Angle
    fullName: DotFeather.TextureDrawableBase.Angle
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Angle
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 15
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public virtual float Angle { get; set; }
      parameters: []
      return:
        type: System.Single
      content.vb: Public Overridable Property Angle As Single
    overload: DotFeather.TextureDrawableBase.Angle*
    implements:
      - DotFeather.IDrawable.Angle
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Scale
    commentId: P:DotFeather.TextureDrawableBase.Scale
    id: Scale
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Scale
    nameWithType: TextureDrawableBase.Scale
    fullName: DotFeather.TextureDrawableBase.Scale
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Scale
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 17
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public virtual Vector Scale { get; set; }
      parameters: []
      return:
        type: DotFeather.Vector
      content.vb: Public Overridable Property Scale As Vector
    overload: DotFeather.TextureDrawableBase.Scale*
    implements:
      - DotFeather.IDrawable.Scale
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Width
    commentId: P:DotFeather.TextureDrawableBase.Width
    id: Width
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Width
    nameWithType: TextureDrawableBase.Width
    fullName: DotFeather.TextureDrawableBase.Width
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Width
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 22
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set width of this object.\n"
    example: []
    syntax:
      content: public virtual float Width { get; set; }
      parameters: []
      return:
        type: System.Single
      content.vb: Public Overridable Property Width As Single
    overload: DotFeather.TextureDrawableBase.Width*
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Height
    commentId: P:DotFeather.TextureDrawableBase.Height
    id: Height
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Height
    nameWithType: TextureDrawableBase.Height
    fullName: DotFeather.TextureDrawableBase.Height
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Height
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 28
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set height of this object.\n"
    example: []
    syntax:
      content: public virtual float Height { get; set; }
      parameters: []
      return:
        type: System.Single
        description: ""
      content.vb: Public Overridable Property Height As Single
    overload: DotFeather.TextureDrawableBase.Height*
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Color
    commentId: P:DotFeather.TextureDrawableBase.Color
    id: Color
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Color
    nameWithType: TextureDrawableBase.Color
    fullName: DotFeather.TextureDrawableBase.Color
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Color
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 34
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set color of this object.\n"
    example: []
    syntax:
      content: public virtual Color? Color { get; set; }
      parameters: []
      return:
        type: System.Nullable{System.Drawing.Color}
        description: ""
      content.vb: Public Overridable Property Color As Color?
    overload: DotFeather.TextureDrawableBase.Color*
    modifiers.csharp:
      - public
      - virtual
      - get
      - set
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Texture
    commentId: P:DotFeather.TextureDrawableBase.Texture
    id: Texture
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Texture
    nameWithType: TextureDrawableBase.Texture
    fullName: DotFeather.TextureDrawableBase.Texture
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Texture
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 39
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a texture of this object.\n"
    example: []
    syntax:
      content: public virtual Texture2D Texture { get; protected set; }
      parameters: []
      return:
        type: DotFeather.Texture2D
      content.vb: Public Overridable Property Texture As Texture2D
    overload: DotFeather.TextureDrawableBase.Texture*
    modifiers.csharp:
      - public
      - virtual
      - get
      - protected set
    modifiers.vb:
      - Public
      - Overridable
      - Get
      - Protected Set
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    id: DotFeather#ISizedDrawable#Width
    isEii: true
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: ISizedDrawable.Width
    nameWithType: TextureDrawableBase.ISizedDrawable.Width
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Width
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DotFeather.ISizedDrawable.Width
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 41
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: float ISizedDrawable.Width { get; set; }
      parameters: []
      return:
        type: System.Single
      content.vb: ReadOnly WriteOnly Property DotFeather.ISizedDrawable.Width As Single Implements ISizedDrawable.Width
    overload: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width*
    implements:
      - DotFeather.ISizedDrawable.Width
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Width
    modifiers.csharp:
      - get
      - set
    name.vb: DotFeather.ISizedDrawable.Width
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    id: DotFeather#ISizedDrawable#Height
    isEii: true
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: ISizedDrawable.Height
    nameWithType: TextureDrawableBase.ISizedDrawable.Height
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Height
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DotFeather.ISizedDrawable.Height
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 47
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: float ISizedDrawable.Height { get; set; }
      parameters: []
      return:
        type: System.Single
      content.vb: ReadOnly WriteOnly Property DotFeather.ISizedDrawable.Height As Single Implements ISizedDrawable.Height
    overload: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height*
    implements:
      - DotFeather.ISizedDrawable.Height
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Height
    modifiers.csharp:
      - get
      - set
    name.vb: DotFeather.ISizedDrawable.Height
  - uid: DotFeather.TextureDrawableBase.Parent
    commentId: P:DotFeather.TextureDrawableBase.Parent
    id: Parent
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Parent
    nameWithType: TextureDrawableBase.Parent
    fullName: DotFeather.TextureDrawableBase.Parent
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Parent
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 56
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a parent of this drawable.\n"
    example: []
    syntax:
      content: public IContainable Parent { get; }
      parameters: []
      return:
        type: DotFeather.IContainable
      content.vb: Public ReadOnly Property Parent As IContainable
    overload: DotFeather.TextureDrawableBase.Parent*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    id: DotFeather#IContainable#Parent
    isEii: true
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: IContainable.Parent
    nameWithType: TextureDrawableBase.IContainable.Parent
    fullName: DotFeather.TextureDrawableBase.DotFeather.IContainable.Parent
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DotFeather.IContainable.Parent
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 58
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: IContainable IContainable.Parent { get; set; }
      parameters: []
      return:
        type: DotFeather.IContainable
      content.vb: ReadOnly WriteOnly Property DotFeather.IContainable.Parent As IContainable Implements IContainable.Parent
    overload: DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent*
    implements:
      - DotFeather.IContainable.Parent
    nameWithType.vb: TextureDrawableBase.DotFeather.IContainable.Parent
    modifiers.csharp:
      - get
      - set
    name.vb: DotFeather.IContainable.Parent
  - uid: DotFeather.TextureDrawableBase.AbsoluteLocation
    commentId: P:DotFeather.TextureDrawableBase.AbsoluteLocation
    id: AbsoluteLocation
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: AbsoluteLocation
    nameWithType: TextureDrawableBase.AbsoluteLocation
    fullName: DotFeather.TextureDrawableBase.AbsoluteLocation
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: AbsoluteLocation
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 67
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet absolute location.\n"
    example: []
    syntax:
      content: public Vector AbsoluteLocation { get; }
      parameters: []
      return:
        type: DotFeather.Vector
      content.vb: Public ReadOnly Property AbsoluteLocation As Vector
    overload: DotFeather.TextureDrawableBase.AbsoluteLocation*
    implements:
      - DotFeather.IContainable.AbsoluteLocation
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.TextureDrawableBase.Destroy
    commentId: M:DotFeather.TextureDrawableBase.Destroy
    id: Destroy
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Destroy()
    nameWithType: TextureDrawableBase.Destroy()
    fullName: DotFeather.TextureDrawableBase.Destroy()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Destroy
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 72
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDispose this object.\n"
    example: []
    syntax:
      content: public virtual void Destroy()
      content.vb: Public Overridable Sub Destroy
    overload: DotFeather.TextureDrawableBase.Destroy*
    implements:
      - DotFeather.IDrawable.Destroy
    modifiers.csharp:
      - public
      - virtual
    modifiers.vb:
      - Public
      - Overridable
  - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    commentId: M:DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    id: Draw(DotFeather.GameBase,DotFeather.Vector)
    parent: DotFeather.TextureDrawableBase
    langs:
      - csharp
      - vb
    name: Draw(GameBase, Vector)
    nameWithType: TextureDrawableBase.Draw(GameBase, Vector)
    fullName: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase, DotFeather.Vector)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/TextureDrawableBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Draw
      path: ../DotFeather/Graphics/TextureDrawableBase.cs
      startLine: 79
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDraw the texture.\n"
    example: []
    syntax:
      content: public virtual void Draw(GameBase game, Vector location)
      parameters:
        - id: game
          type: DotFeather.GameBase
        - id: location
          type: DotFeather.Vector
      content.vb: Public Overridable Sub Draw(game As GameBase, location As Vector)
    overload: DotFeather.TextureDrawableBase.Draw*
    implements:
      - DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    modifiers.csharp:
      - public
      - virtual
    modifiers.vb:
      - Public
      - Overridable
references:
  - uid: DotFeather.Texture2D
    commentId: T:DotFeather.Texture2D
    parent: DotFeather
    name: Texture2D
    nameWithType: Texture2D
    fullName: DotFeather.Texture2D
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.IContainable
    commentId: T:DotFeather.IContainable
    parent: DotFeather
    name: IContainable
    nameWithType: IContainable
    fullName: DotFeather.IContainable
  - uid: DotFeather.ISizedDrawable
    commentId: T:DotFeather.ISizedDrawable
    parent: DotFeather
    name: ISizedDrawable
    nameWithType: ISizedDrawable
    fullName: DotFeather.ISizedDrawable
  - uid: DotFeather.IDrawable
    commentId: T:DotFeather.IDrawable
    parent: DotFeather
    name: IDrawable
    nameWithType: IDrawable
    fullName: DotFeather.IDrawable
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.TextureDrawableBase.ZOrder*
    commentId: Overload:DotFeather.TextureDrawableBase.ZOrder
    name: ZOrder
    nameWithType: TextureDrawableBase.ZOrder
    fullName: DotFeather.TextureDrawableBase.ZOrder
  - uid: DotFeather.IDrawable.ZOrder
    commentId: P:DotFeather.IDrawable.ZOrder
    parent: DotFeather.IDrawable
    name: ZOrder
    nameWithType: IDrawable.ZOrder
    fullName: DotFeather.IDrawable.ZOrder
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: DotFeather.TextureDrawableBase.Name*
    commentId: Overload:DotFeather.TextureDrawableBase.Name
    name: Name
    nameWithType: TextureDrawableBase.Name
    fullName: DotFeather.TextureDrawableBase.Name
  - uid: DotFeather.IDrawable.Name
    commentId: P:DotFeather.IDrawable.Name
    parent: DotFeather.IDrawable
    name: Name
    nameWithType: IDrawable.Name
    fullName: DotFeather.IDrawable.Name
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: DotFeather.TextureDrawableBase.Location*
    commentId: Overload:DotFeather.TextureDrawableBase.Location
    name: Location
    nameWithType: TextureDrawableBase.Location
    fullName: DotFeather.TextureDrawableBase.Location
  - uid: DotFeather.IDrawable.Location
    commentId: P:DotFeather.IDrawable.Location
    parent: DotFeather.IDrawable
    name: Location
    nameWithType: IDrawable.Location
    fullName: DotFeather.IDrawable.Location
  - uid: DotFeather.Vector
    commentId: T:DotFeather.Vector
    parent: DotFeather
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - uid: DotFeather.TextureDrawableBase.Angle*
    commentId: Overload:DotFeather.TextureDrawableBase.Angle
    name: Angle
    nameWithType: TextureDrawableBase.Angle
    fullName: DotFeather.TextureDrawableBase.Angle
  - uid: DotFeather.IDrawable.Angle
    commentId: P:DotFeather.IDrawable.Angle
    parent: DotFeather.IDrawable
    name: Angle
    nameWithType: IDrawable.Angle
    fullName: DotFeather.IDrawable.Angle
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.TextureDrawableBase.Scale*
    commentId: Overload:DotFeather.TextureDrawableBase.Scale
    name: Scale
    nameWithType: TextureDrawableBase.Scale
    fullName: DotFeather.TextureDrawableBase.Scale
  - uid: DotFeather.IDrawable.Scale
    commentId: P:DotFeather.IDrawable.Scale
    parent: DotFeather.IDrawable
    name: Scale
    nameWithType: IDrawable.Scale
    fullName: DotFeather.IDrawable.Scale
  - uid: DotFeather.TextureDrawableBase.Width*
    commentId: Overload:DotFeather.TextureDrawableBase.Width
    name: Width
    nameWithType: TextureDrawableBase.Width
    fullName: DotFeather.TextureDrawableBase.Width
  - uid: DotFeather.TextureDrawableBase.Height*
    commentId: Overload:DotFeather.TextureDrawableBase.Height
    name: Height
    nameWithType: TextureDrawableBase.Height
    fullName: DotFeather.TextureDrawableBase.Height
  - uid: DotFeather.TextureDrawableBase.Color*
    commentId: Overload:DotFeather.TextureDrawableBase.Color
    name: Color
    nameWithType: TextureDrawableBase.Color
    fullName: DotFeather.TextureDrawableBase.Color
  - uid: System.Nullable{System.Drawing.Color}
    commentId: T:System.Nullable{System.Drawing.Color}
    parent: System
    definition: System.Nullable`1
    name: Nullable<Color>
    nameWithType: Nullable<Color>
    fullName: System.Nullable<System.Drawing.Color>
    nameWithType.vb: Nullable(Of Color)
    fullName.vb: System.Nullable(Of System.Drawing.Color)
    name.vb: Nullable(Of Color)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Nullable`1
    commentId: T:System.Nullable`1
    isExternal: true
    name: Nullable<T>
    nameWithType: Nullable<T>
    fullName: System.Nullable<T>
    nameWithType.vb: Nullable(Of T)
    fullName.vb: System.Nullable(Of T)
    name.vb: Nullable(Of T)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.TextureDrawableBase.Texture*
    commentId: Overload:DotFeather.TextureDrawableBase.Texture
    name: Texture
    nameWithType: TextureDrawableBase.Texture
    fullName: DotFeather.TextureDrawableBase.Texture
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width*
    commentId: Overload:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    name: ISizedDrawable.Width
    nameWithType: TextureDrawableBase.ISizedDrawable.Width
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Width
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Width
    name.vb: DotFeather.ISizedDrawable.Width
  - uid: DotFeather.ISizedDrawable.Width
    commentId: P:DotFeather.ISizedDrawable.Width
    parent: DotFeather.ISizedDrawable
    name: Width
    nameWithType: ISizedDrawable.Width
    fullName: DotFeather.ISizedDrawable.Width
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height*
    commentId: Overload:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    name: ISizedDrawable.Height
    nameWithType: TextureDrawableBase.ISizedDrawable.Height
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Height
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Height
    name.vb: DotFeather.ISizedDrawable.Height
  - uid: DotFeather.ISizedDrawable.Height
    commentId: P:DotFeather.ISizedDrawable.Height
    parent: DotFeather.ISizedDrawable
    name: Height
    nameWithType: ISizedDrawable.Height
    fullName: DotFeather.ISizedDrawable.Height
  - uid: DotFeather.TextureDrawableBase.Parent*
    commentId: Overload:DotFeather.TextureDrawableBase.Parent
    name: Parent
    nameWithType: TextureDrawableBase.Parent
    fullName: DotFeather.TextureDrawableBase.Parent
  - uid: DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent*
    commentId: Overload:DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    name: IContainable.Parent
    nameWithType: TextureDrawableBase.IContainable.Parent
    fullName: DotFeather.TextureDrawableBase.DotFeather.IContainable.Parent
    nameWithType.vb: TextureDrawableBase.DotFeather.IContainable.Parent
    name.vb: DotFeather.IContainable.Parent
  - uid: DotFeather.IContainable.Parent
    commentId: P:DotFeather.IContainable.Parent
    parent: DotFeather.IContainable
    name: Parent
    nameWithType: IContainable.Parent
    fullName: DotFeather.IContainable.Parent
  - uid: DotFeather.TextureDrawableBase.AbsoluteLocation*
    commentId: Overload:DotFeather.TextureDrawableBase.AbsoluteLocation
    name: AbsoluteLocation
    nameWithType: TextureDrawableBase.AbsoluteLocation
    fullName: DotFeather.TextureDrawableBase.AbsoluteLocation
  - uid: DotFeather.IContainable.AbsoluteLocation
    commentId: P:DotFeather.IContainable.AbsoluteLocation
    parent: DotFeather.IContainable
    name: AbsoluteLocation
    nameWithType: IContainable.AbsoluteLocation
    fullName: DotFeather.IContainable.AbsoluteLocation
  - uid: DotFeather.TextureDrawableBase.Destroy*
    commentId: Overload:DotFeather.TextureDrawableBase.Destroy
    name: Destroy
    nameWithType: TextureDrawableBase.Destroy
    fullName: DotFeather.TextureDrawableBase.Destroy
  - uid: DotFeather.IDrawable.Destroy
    commentId: M:DotFeather.IDrawable.Destroy
    parent: DotFeather.IDrawable
    name: Destroy()
    nameWithType: IDrawable.Destroy()
    fullName: DotFeather.IDrawable.Destroy()
    spec.csharp:
      - uid: DotFeather.IDrawable.Destroy
        name: Destroy
        nameWithType: IDrawable.Destroy
        fullName: DotFeather.IDrawable.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.IDrawable.Destroy
        name: Destroy
        nameWithType: IDrawable.Destroy
        fullName: DotFeather.IDrawable.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.TextureDrawableBase.Draw*
    commentId: Overload:DotFeather.TextureDrawableBase.Draw
    name: Draw
    nameWithType: TextureDrawableBase.Draw
    fullName: DotFeather.TextureDrawableBase.Draw
  - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    commentId: M:DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    parent: DotFeather.IDrawable
    name: Draw(GameBase, Vector)
    nameWithType: IDrawable.Draw(GameBase, Vector)
    fullName: DotFeather.IDrawable.Draw(DotFeather.GameBase, DotFeather.Vector)
    spec.csharp:
      - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: IDrawable.Draw
        fullName: DotFeather.IDrawable.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: IDrawable.Draw
        fullName: DotFeather.IDrawable.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase
    commentId: T:DotFeather.GameBase
    parent: DotFeather
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
