### YamlMime:ManagedReference
items:
  - uid: DotFeather.IContainable
    commentId: T:DotFeather.IContainable
    id: IContainable
    parent: DotFeather
    children:
      - DotFeather.IContainable.AbsoluteLocation
      - DotFeather.IContainable.Parent
    langs:
      - csharp
      - vb
    name: IContainable
    nameWithType: IContainable
    fullName: DotFeather.IContainable
    type: Interface
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IContainable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: IContainable
      path: ../DotFeather/Graphics/Interfaces/IContainable.cs
      startLine: 2
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: "public interface IContainable : IDrawable"
      content.vb: >-
        Public Interface IContainable
            Inherits IDrawable
    inheritedMembers:
      - DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
      - DotFeather.IDrawable.ZOrder
      - DotFeather.IDrawable.Name
      - DotFeather.IDrawable.Location
      - DotFeather.IDrawable.Angle
      - DotFeather.IDrawable.Scale
      - DotFeather.IDrawable.Destroy
    modifiers.csharp:
      - public
      - interface
    modifiers.vb:
      - Public
      - Interface
  - uid: DotFeather.IContainable.Parent
    commentId: P:DotFeather.IContainable.Parent
    id: Parent
    parent: DotFeather.IContainable
    langs:
      - csharp
      - vb
    name: Parent
    nameWithType: IContainable.Parent
    fullName: DotFeather.IContainable.Parent
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IContainable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Parent
      path: ../DotFeather/Graphics/Interfaces/IContainable.cs
      startLine: 4
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: IContainable Parent { get; }
      parameters: []
      return:
        type: DotFeather.IContainable
      content.vb: ReadOnly Property Parent As IContainable
    overload: DotFeather.IContainable.Parent*
    modifiers.csharp:
      - get
    modifiers.vb:
      - ReadOnly
  - uid: DotFeather.IContainable.AbsoluteLocation
    commentId: P:DotFeather.IContainable.AbsoluteLocation
    id: AbsoluteLocation
    parent: DotFeather.IContainable
    langs:
      - csharp
      - vb
    name: AbsoluteLocation
    nameWithType: IContainable.AbsoluteLocation
    fullName: DotFeather.IContainable.AbsoluteLocation
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Interfaces/IContainable.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: AbsoluteLocation
      path: ../DotFeather/Graphics/Interfaces/IContainable.cs
      startLine: 5
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: virtual Vector AbsoluteLocation { get; }
      parameters: []
      return:
        type: DotFeather.Vector
      content.vb: Overridable ReadOnly Property AbsoluteLocation As Vector
    overload: DotFeather.IContainable.AbsoluteLocation*
    modifiers.csharp:
      - get
    modifiers.vb:
      - ReadOnly
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    commentId: M:DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    parent: DotFeather.IDrawable
    name: Draw(GameBase, Vector)
    nameWithType: IDrawable.Draw(GameBase, Vector)
    fullName: DotFeather.IDrawable.Draw(DotFeather.GameBase, DotFeather.Vector)
    spec.csharp:
      - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: IDrawable.Draw
        fullName: DotFeather.IDrawable.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: IDrawable.Draw
        fullName: DotFeather.IDrawable.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.IDrawable.ZOrder
    commentId: P:DotFeather.IDrawable.ZOrder
    parent: DotFeather.IDrawable
    name: ZOrder
    nameWithType: IDrawable.ZOrder
    fullName: DotFeather.IDrawable.ZOrder
  - uid: DotFeather.IDrawable.Name
    commentId: P:DotFeather.IDrawable.Name
    parent: DotFeather.IDrawable
    name: Name
    nameWithType: IDrawable.Name
    fullName: DotFeather.IDrawable.Name
  - uid: DotFeather.IDrawable.Location
    commentId: P:DotFeather.IDrawable.Location
    parent: DotFeather.IDrawable
    name: Location
    nameWithType: IDrawable.Location
    fullName: DotFeather.IDrawable.Location
  - uid: DotFeather.IDrawable.Angle
    commentId: P:DotFeather.IDrawable.Angle
    parent: DotFeather.IDrawable
    name: Angle
    nameWithType: IDrawable.Angle
    fullName: DotFeather.IDrawable.Angle
  - uid: DotFeather.IDrawable.Scale
    commentId: P:DotFeather.IDrawable.Scale
    parent: DotFeather.IDrawable
    name: Scale
    nameWithType: IDrawable.Scale
    fullName: DotFeather.IDrawable.Scale
  - uid: DotFeather.IDrawable.Destroy
    commentId: M:DotFeather.IDrawable.Destroy
    parent: DotFeather.IDrawable
    name: Destroy()
    nameWithType: IDrawable.Destroy()
    fullName: DotFeather.IDrawable.Destroy()
    spec.csharp:
      - uid: DotFeather.IDrawable.Destroy
        name: Destroy
        nameWithType: IDrawable.Destroy
        fullName: DotFeather.IDrawable.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.IDrawable.Destroy
        name: Destroy
        nameWithType: IDrawable.Destroy
        fullName: DotFeather.IDrawable.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.IDrawable
    commentId: T:DotFeather.IDrawable
    parent: DotFeather
    name: IDrawable
    nameWithType: IDrawable
    fullName: DotFeather.IDrawable
  - uid: DotFeather.IContainable.Parent*
    commentId: Overload:DotFeather.IContainable.Parent
    name: Parent
    nameWithType: IContainable.Parent
    fullName: DotFeather.IContainable.Parent
  - uid: DotFeather.IContainable
    commentId: T:DotFeather.IContainable
    parent: DotFeather
    name: IContainable
    nameWithType: IContainable
    fullName: DotFeather.IContainable
  - uid: DotFeather.IContainable.AbsoluteLocation*
    commentId: Overload:DotFeather.IContainable.AbsoluteLocation
    name: AbsoluteLocation
    nameWithType: IContainable.AbsoluteLocation
    fullName: DotFeather.IContainable.AbsoluteLocation
  - uid: DotFeather.Vector
    commentId: T:DotFeather.Vector
    parent: DotFeather
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
