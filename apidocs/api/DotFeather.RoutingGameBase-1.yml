### YamlMime:ManagedReference
items:
  - uid: DotFeather.RoutingGameBase`1
    commentId: T:DotFeather.RoutingGameBase`1
    id: RoutingGameBase`1
    parent: DotFeather
    children:
      - DotFeather.RoutingGameBase`1.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)
      - DotFeather.RoutingGameBase`1.OnLoad(System.Object,System.EventArgs)
      - DotFeather.RoutingGameBase`1.OnUpdate(System.Object,DotFeather.DFEventArgs)
      - DotFeather.RoutingGameBase`1.Update
    langs:
      - csharp
      - vb
    name: RoutingGameBase<T>
    nameWithType: RoutingGameBase<T>
    fullName: DotFeather.RoutingGameBase<T>
    type: Class
    source:
      remote:
        path: DotFeather/Router/RoutingGameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: RoutingGameBase
      path: ../DotFeather/Router/RoutingGameBase.cs
      startLine: 4
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: "public class RoutingGameBase<T> : GameBase, IDisposable where T : Scene"
      typeParameters:
        - id: T
      content.vb: >-
        Public Class RoutingGameBase(Of T As Scene)
            Inherits GameBase
            Implements IDisposable
    inheritance:
      - System.Object
      - DotFeather.GameBase
    implements:
      - System.IDisposable
    inheritedMembers:
      - DotFeather.GameBase.X
      - DotFeather.GameBase.Y
      - DotFeather.GameBase.Visible
      - DotFeather.GameBase.Width
      - DotFeather.GameBase.Height
      - DotFeather.GameBase.ActualWidth
      - DotFeather.GameBase.ActualHeight
      - DotFeather.GameBase.IsFocused
      - DotFeather.GameBase.BackgroundColor
      - DotFeather.GameBase.RefreshRate
      - DotFeather.GameBase.Title
      - DotFeather.GameBase.Root
      - DotFeather.GameBase.Dpi
      - DotFeather.GameBase.FollowsDpi
      - DotFeather.GameBase.TotalFrame
      - DotFeather.GameBase.IsCaptureMode
      - DotFeather.GameBase.ForegroundColor
      - DotFeather.GameBase.ConsoleCursor
      - DotFeather.GameBase.ConsoleSize
      - DotFeather.GameBase.WindowMode
      - DotFeather.GameBase.IsFullScreen
      - DotFeather.GameBase.Print(System.Object)
      - DotFeather.GameBase.Cls
      - DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
      - DotFeather.GameBase.Run
      - DotFeather.GameBase.Exit(System.Int32)
      - DotFeather.GameBase.Dispose
      - DotFeather.GameBase.TakeScreenshot
      - DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
      - DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
      - DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
      - DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
      - DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
      - DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
      - DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
      - DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
      - DotFeather.GameBase.Random
      - DotFeather.GameBase.Load
      - DotFeather.GameBase.Unload
      - DotFeather.GameBase.FileDrop
      - DotFeather.GameBase.Resize
      - DotFeather.GameBase.KeyDown
      - DotFeather.GameBase.KeyPress
      - DotFeather.GameBase.KeyUp
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    nameWithType.vb: RoutingGameBase(Of T)
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
    fullName.vb: DotFeather.RoutingGameBase(Of T)
    name.vb: RoutingGameBase(Of T)
  - uid: DotFeather.RoutingGameBase`1.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)
    commentId: M:DotFeather.RoutingGameBase`1.#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)
    id: "#ctor(System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)"
    parent: DotFeather.RoutingGameBase`1
    langs:
      - csharp
      - vb
    name: RoutingGameBase(Int32, Int32, String, Int32, Boolean, Boolean)
    nameWithType: RoutingGameBase<T>.RoutingGameBase(Int32, Int32, String, Int32, Boolean, Boolean)
    fullName: DotFeather.RoutingGameBase<T>.RoutingGameBase(System.Int32, System.Int32, System.String, System.Int32, System.Boolean, System.Boolean)
    type: Constructor
    source:
      remote:
        path: DotFeather/Router/RoutingGameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Router/RoutingGameBase.cs
      startLine: 6
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public RoutingGameBase(int width, int height, string title = "", int refreshRate = 60, bool isCaptureMode = false, bool followsDpi = false)
      parameters:
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        - id: title
          type: System.String
        - id: refreshRate
          type: System.Int32
        - id: isCaptureMode
          type: System.Boolean
        - id: followsDpi
          type: System.Boolean
      content.vb: Public Sub New(width As Integer, height As Integer, title As String = "", refreshRate As Integer = 60, isCaptureMode As Boolean = False, followsDpi As Boolean = False)
    overload: DotFeather.RoutingGameBase`1.#ctor*
    nameWithType.vb: RoutingGameBase(Of T).RoutingGameBase(Int32, Int32, String, Int32, Boolean, Boolean)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.RoutingGameBase(Of T).RoutingGameBase(System.Int32, System.Int32, System.String, System.Int32, System.Boolean, System.Boolean)
  - uid: DotFeather.RoutingGameBase`1.OnLoad(System.Object,System.EventArgs)
    commentId: M:DotFeather.RoutingGameBase`1.OnLoad(System.Object,System.EventArgs)
    id: OnLoad(System.Object,System.EventArgs)
    parent: DotFeather.RoutingGameBase`1
    langs:
      - csharp
      - vb
    name: OnLoad(Object, EventArgs)
    nameWithType: RoutingGameBase<T>.OnLoad(Object, EventArgs)
    fullName: DotFeather.RoutingGameBase<T>.OnLoad(System.Object, System.EventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/Router/RoutingGameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnLoad
      path: ../DotFeather/Router/RoutingGameBase.cs
      startLine: 11
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: protected override void OnLoad(object sender, EventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: System.EventArgs
      content.vb: Protected Overrides Sub OnLoad(sender As Object, e As EventArgs)
    overridden: DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
    overload: DotFeather.RoutingGameBase`1.OnLoad*
    nameWithType.vb: RoutingGameBase(Of T).OnLoad(Object, EventArgs)
    modifiers.csharp:
      - protected
      - override
    modifiers.vb:
      - Protected
      - Overrides
    fullName.vb: DotFeather.RoutingGameBase(Of T).OnLoad(System.Object, System.EventArgs)
  - uid: DotFeather.RoutingGameBase`1.OnUpdate(System.Object,DotFeather.DFEventArgs)
    commentId: M:DotFeather.RoutingGameBase`1.OnUpdate(System.Object,DotFeather.DFEventArgs)
    id: OnUpdate(System.Object,DotFeather.DFEventArgs)
    parent: DotFeather.RoutingGameBase`1
    langs:
      - csharp
      - vb
    name: OnUpdate(Object, DFEventArgs)
    nameWithType: RoutingGameBase<T>.OnUpdate(Object, DFEventArgs)
    fullName: DotFeather.RoutingGameBase<T>.OnUpdate(System.Object, DotFeather.DFEventArgs)
    type: Method
    source:
      remote:
        path: DotFeather/Router/RoutingGameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: OnUpdate
      path: ../DotFeather/Router/RoutingGameBase.cs
      startLine: 17
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: protected override void OnUpdate(object sender, DFEventArgs e)
      parameters:
        - id: sender
          type: System.Object
        - id: e
          type: DotFeather.DFEventArgs
      content.vb: Protected Overrides Sub OnUpdate(sender As Object, e As DFEventArgs)
    overridden: DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
    overload: DotFeather.RoutingGameBase`1.OnUpdate*
    nameWithType.vb: RoutingGameBase(Of T).OnUpdate(Object, DFEventArgs)
    modifiers.csharp:
      - protected
      - override
    modifiers.vb:
      - Protected
      - Overrides
    fullName.vb: DotFeather.RoutingGameBase(Of T).OnUpdate(System.Object, DotFeather.DFEventArgs)
  - uid: DotFeather.RoutingGameBase`1.Update
    commentId: E:DotFeather.RoutingGameBase`1.Update
    id: Update
    parent: DotFeather.RoutingGameBase`1
    langs:
      - csharp
      - vb
    name: Update
    nameWithType: RoutingGameBase<T>.Update
    fullName: DotFeather.RoutingGameBase<T>.Update
    type: Event
    source:
      remote:
        path: DotFeather/Router/RoutingGameBase.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Update
      path: ../DotFeather/Router/RoutingGameBase.cs
      startLine: 24
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public event EventHandler<DFEventArgs> Update
      return:
        type: System.EventHandler{DotFeather.DFEventArgs}
      content.vb: Public Event Update As EventHandler(Of DFEventArgs)
    nameWithType.vb: RoutingGameBase(Of T).Update
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.RoutingGameBase(Of T).Update
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.GameBase
    commentId: T:DotFeather.GameBase
    parent: DotFeather
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - uid: System.IDisposable
    commentId: T:System.IDisposable
    parent: System
    isExternal: true
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
  - uid: DotFeather.GameBase.X
    commentId: P:DotFeather.GameBase.X
    parent: DotFeather.GameBase
    name: X
    nameWithType: GameBase.X
    fullName: DotFeather.GameBase.X
  - uid: DotFeather.GameBase.Y
    commentId: P:DotFeather.GameBase.Y
    parent: DotFeather.GameBase
    name: Y
    nameWithType: GameBase.Y
    fullName: DotFeather.GameBase.Y
  - uid: DotFeather.GameBase.Visible
    commentId: P:DotFeather.GameBase.Visible
    parent: DotFeather.GameBase
    name: Visible
    nameWithType: GameBase.Visible
    fullName: DotFeather.GameBase.Visible
  - uid: DotFeather.GameBase.Width
    commentId: P:DotFeather.GameBase.Width
    parent: DotFeather.GameBase
    name: Width
    nameWithType: GameBase.Width
    fullName: DotFeather.GameBase.Width
  - uid: DotFeather.GameBase.Height
    commentId: P:DotFeather.GameBase.Height
    parent: DotFeather.GameBase
    name: Height
    nameWithType: GameBase.Height
    fullName: DotFeather.GameBase.Height
  - uid: DotFeather.GameBase.ActualWidth
    commentId: P:DotFeather.GameBase.ActualWidth
    parent: DotFeather.GameBase
    name: ActualWidth
    nameWithType: GameBase.ActualWidth
    fullName: DotFeather.GameBase.ActualWidth
  - uid: DotFeather.GameBase.ActualHeight
    commentId: P:DotFeather.GameBase.ActualHeight
    parent: DotFeather.GameBase
    name: ActualHeight
    nameWithType: GameBase.ActualHeight
    fullName: DotFeather.GameBase.ActualHeight
  - uid: DotFeather.GameBase.IsFocused
    commentId: P:DotFeather.GameBase.IsFocused
    parent: DotFeather.GameBase
    name: IsFocused
    nameWithType: GameBase.IsFocused
    fullName: DotFeather.GameBase.IsFocused
  - uid: DotFeather.GameBase.BackgroundColor
    commentId: P:DotFeather.GameBase.BackgroundColor
    parent: DotFeather.GameBase
    name: BackgroundColor
    nameWithType: GameBase.BackgroundColor
    fullName: DotFeather.GameBase.BackgroundColor
  - uid: DotFeather.GameBase.RefreshRate
    commentId: P:DotFeather.GameBase.RefreshRate
    parent: DotFeather.GameBase
    name: RefreshRate
    nameWithType: GameBase.RefreshRate
    fullName: DotFeather.GameBase.RefreshRate
  - uid: DotFeather.GameBase.Title
    commentId: P:DotFeather.GameBase.Title
    parent: DotFeather.GameBase
    name: Title
    nameWithType: GameBase.Title
    fullName: DotFeather.GameBase.Title
  - uid: DotFeather.GameBase.Root
    commentId: P:DotFeather.GameBase.Root
    parent: DotFeather.GameBase
    name: Root
    nameWithType: GameBase.Root
    fullName: DotFeather.GameBase.Root
  - uid: DotFeather.GameBase.Dpi
    commentId: P:DotFeather.GameBase.Dpi
    parent: DotFeather.GameBase
    name: Dpi
    nameWithType: GameBase.Dpi
    fullName: DotFeather.GameBase.Dpi
  - uid: DotFeather.GameBase.FollowsDpi
    commentId: P:DotFeather.GameBase.FollowsDpi
    parent: DotFeather.GameBase
    name: FollowsDpi
    nameWithType: GameBase.FollowsDpi
    fullName: DotFeather.GameBase.FollowsDpi
  - uid: DotFeather.GameBase.TotalFrame
    commentId: P:DotFeather.GameBase.TotalFrame
    parent: DotFeather.GameBase
    name: TotalFrame
    nameWithType: GameBase.TotalFrame
    fullName: DotFeather.GameBase.TotalFrame
  - uid: DotFeather.GameBase.IsCaptureMode
    commentId: P:DotFeather.GameBase.IsCaptureMode
    parent: DotFeather.GameBase
    name: IsCaptureMode
    nameWithType: GameBase.IsCaptureMode
    fullName: DotFeather.GameBase.IsCaptureMode
  - uid: DotFeather.GameBase.ForegroundColor
    commentId: P:DotFeather.GameBase.ForegroundColor
    parent: DotFeather.GameBase
    name: ForegroundColor
    nameWithType: GameBase.ForegroundColor
    fullName: DotFeather.GameBase.ForegroundColor
  - uid: DotFeather.GameBase.ConsoleCursor
    commentId: P:DotFeather.GameBase.ConsoleCursor
    parent: DotFeather.GameBase
    name: ConsoleCursor
    nameWithType: GameBase.ConsoleCursor
    fullName: DotFeather.GameBase.ConsoleCursor
  - uid: DotFeather.GameBase.ConsoleSize
    commentId: P:DotFeather.GameBase.ConsoleSize
    parent: DotFeather.GameBase
    name: ConsoleSize
    nameWithType: GameBase.ConsoleSize
    fullName: DotFeather.GameBase.ConsoleSize
  - uid: DotFeather.GameBase.WindowMode
    commentId: P:DotFeather.GameBase.WindowMode
    parent: DotFeather.GameBase
    name: WindowMode
    nameWithType: GameBase.WindowMode
    fullName: DotFeather.GameBase.WindowMode
  - uid: DotFeather.GameBase.IsFullScreen
    commentId: P:DotFeather.GameBase.IsFullScreen
    parent: DotFeather.GameBase
    name: IsFullScreen
    nameWithType: GameBase.IsFullScreen
    fullName: DotFeather.GameBase.IsFullScreen
  - uid: DotFeather.GameBase.Print(System.Object)
    commentId: M:DotFeather.GameBase.Print(System.Object)
    parent: DotFeather.GameBase
    isExternal: true
    name: Print(Object)
    nameWithType: GameBase.Print(Object)
    fullName: DotFeather.GameBase.Print(System.Object)
    spec.csharp:
      - uid: DotFeather.GameBase.Print(System.Object)
        name: Print
        nameWithType: GameBase.Print
        fullName: DotFeather.GameBase.Print
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Print(System.Object)
        name: Print
        nameWithType: GameBase.Print
        fullName: DotFeather.GameBase.Print
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Cls
    commentId: M:DotFeather.GameBase.Cls
    parent: DotFeather.GameBase
    name: Cls()
    nameWithType: GameBase.Cls()
    fullName: DotFeather.GameBase.Cls()
    spec.csharp:
      - uid: DotFeather.GameBase.Cls
        name: Cls
        nameWithType: GameBase.Cls
        fullName: DotFeather.GameBase.Cls
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Cls
        name: Cls
        nameWithType: GameBase.Cls
        fullName: DotFeather.GameBase.Cls
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
    commentId: M:DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
    parent: DotFeather.GameBase
    isExternal: true
    name: Randomize(Nullable<Int32>)
    nameWithType: GameBase.Randomize(Nullable<Int32>)
    fullName: DotFeather.GameBase.Randomize(System.Nullable<System.Int32>)
    nameWithType.vb: GameBase.Randomize(Nullable(Of Int32))
    fullName.vb: DotFeather.GameBase.Randomize(System.Nullable(Of System.Int32))
    name.vb: Randomize(Nullable(Of Int32))
    spec.csharp:
      - uid: DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
        name: Randomize
        nameWithType: GameBase.Randomize
        fullName: DotFeather.GameBase.Randomize
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Randomize(System.Nullable{System.Int32})
        name: Randomize
        nameWithType: GameBase.Randomize
        fullName: DotFeather.GameBase.Randomize
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Run
    commentId: M:DotFeather.GameBase.Run
    parent: DotFeather.GameBase
    name: Run()
    nameWithType: GameBase.Run()
    fullName: DotFeather.GameBase.Run()
    spec.csharp:
      - uid: DotFeather.GameBase.Run
        name: Run
        nameWithType: GameBase.Run
        fullName: DotFeather.GameBase.Run
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Run
        name: Run
        nameWithType: GameBase.Run
        fullName: DotFeather.GameBase.Run
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Exit(System.Int32)
    commentId: M:DotFeather.GameBase.Exit(System.Int32)
    parent: DotFeather.GameBase
    isExternal: true
    name: Exit(Int32)
    nameWithType: GameBase.Exit(Int32)
    fullName: DotFeather.GameBase.Exit(System.Int32)
    spec.csharp:
      - uid: DotFeather.GameBase.Exit(System.Int32)
        name: Exit
        nameWithType: GameBase.Exit
        fullName: DotFeather.GameBase.Exit
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Exit(System.Int32)
        name: Exit
        nameWithType: GameBase.Exit
        fullName: DotFeather.GameBase.Exit
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Dispose
    commentId: M:DotFeather.GameBase.Dispose
    parent: DotFeather.GameBase
    name: Dispose()
    nameWithType: GameBase.Dispose()
    fullName: DotFeather.GameBase.Dispose()
    spec.csharp:
      - uid: DotFeather.GameBase.Dispose
        name: Dispose
        nameWithType: GameBase.Dispose
        fullName: DotFeather.GameBase.Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.Dispose
        name: Dispose
        nameWithType: GameBase.Dispose
        fullName: DotFeather.GameBase.Dispose
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.TakeScreenshot
    commentId: M:DotFeather.GameBase.TakeScreenshot
    parent: DotFeather.GameBase
    name: TakeScreenshot()
    nameWithType: GameBase.TakeScreenshot()
    fullName: DotFeather.GameBase.TakeScreenshot()
    spec.csharp:
      - uid: DotFeather.GameBase.TakeScreenshot
        name: TakeScreenshot
        nameWithType: GameBase.TakeScreenshot
        fullName: DotFeather.GameBase.TakeScreenshot
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.TakeScreenshot
        name: TakeScreenshot
        nameWithType: GameBase.TakeScreenshot
        fullName: DotFeather.GameBase.TakeScreenshot
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
    commentId: M:DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
    parent: DotFeather.GameBase
    isExternal: true
    name: StartCoroutine(IEnumerator)
    nameWithType: GameBase.StartCoroutine(IEnumerator)
    fullName: DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
    spec.csharp:
      - uid: DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
        name: StartCoroutine
        nameWithType: GameBase.StartCoroutine
        fullName: DotFeather.GameBase.StartCoroutine
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        fullName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.StartCoroutine(System.Collections.IEnumerator)
        name: StartCoroutine
        nameWithType: GameBase.StartCoroutine
        fullName: DotFeather.GameBase.StartCoroutine
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        fullName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
    commentId: M:DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
    parent: DotFeather.GameBase
    name: StopCoroutine(Coroutine)
    nameWithType: GameBase.StopCoroutine(Coroutine)
    fullName: DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
    spec.csharp:
      - uid: DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
        name: StopCoroutine
        nameWithType: GameBase.StopCoroutine
        fullName: DotFeather.GameBase.StopCoroutine
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        fullName: DotFeather.Coroutine
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.StopCoroutine(DotFeather.Coroutine)
        name: StopCoroutine
        nameWithType: GameBase.StopCoroutine
        fullName: DotFeather.GameBase.StopCoroutine
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        fullName: DotFeather.Coroutine
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
    commentId: M:DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnUnload(Object, EventArgs)
    nameWithType: GameBase.OnUnload(Object, EventArgs)
    fullName: DotFeather.GameBase.OnUnload(System.Object, System.EventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
        name: OnUnload
        nameWithType: GameBase.OnUnload
        fullName: DotFeather.GameBase.OnUnload
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnUnload(System.Object,System.EventArgs)
        name: OnUnload
        nameWithType: GameBase.OnUnload
        fullName: DotFeather.GameBase.OnUnload
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
    commentId: M:DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnFileDrop(Object, DFFileDroppedEventArgs)
    nameWithType: GameBase.OnFileDrop(Object, DFFileDroppedEventArgs)
    fullName: DotFeather.GameBase.OnFileDrop(System.Object, DotFeather.DFFileDroppedEventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
        name: OnFileDrop
        nameWithType: GameBase.OnFileDrop
        fullName: DotFeather.GameBase.OnFileDrop
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFFileDroppedEventArgs
        name: DFFileDroppedEventArgs
        nameWithType: DFFileDroppedEventArgs
        fullName: DotFeather.DFFileDroppedEventArgs
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnFileDrop(System.Object,DotFeather.DFFileDroppedEventArgs)
        name: OnFileDrop
        nameWithType: GameBase.OnFileDrop
        fullName: DotFeather.GameBase.OnFileDrop
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFFileDroppedEventArgs
        name: DFFileDroppedEventArgs
        nameWithType: DFFileDroppedEventArgs
        fullName: DotFeather.DFFileDroppedEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
    commentId: M:DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnResize(Object, EventArgs)
    nameWithType: GameBase.OnResize(Object, EventArgs)
    fullName: DotFeather.GameBase.OnResize(System.Object, System.EventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
        name: OnResize
        nameWithType: GameBase.OnResize
        fullName: DotFeather.GameBase.OnResize
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnResize(System.Object,System.EventArgs)
        name: OnResize
        nameWithType: GameBase.OnResize
        fullName: DotFeather.GameBase.OnResize
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
    commentId: M:DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnKeyPress(Object, DFKeyPressEventArgs)
    nameWithType: GameBase.OnKeyPress(Object, DFKeyPressEventArgs)
    fullName: DotFeather.GameBase.OnKeyPress(System.Object, DotFeather.DFKeyPressEventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
        name: OnKeyPress
        nameWithType: GameBase.OnKeyPress
        fullName: DotFeather.GameBase.OnKeyPress
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFKeyPressEventArgs
        name: DFKeyPressEventArgs
        nameWithType: DFKeyPressEventArgs
        fullName: DotFeather.DFKeyPressEventArgs
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnKeyPress(System.Object,DotFeather.DFKeyPressEventArgs)
        name: OnKeyPress
        nameWithType: GameBase.OnKeyPress
        fullName: DotFeather.GameBase.OnKeyPress
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFKeyPressEventArgs
        name: DFKeyPressEventArgs
        nameWithType: DFKeyPressEventArgs
        fullName: DotFeather.DFKeyPressEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
    commentId: M:DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnKeyDown(Object, DFKeyEventArgs)
    nameWithType: GameBase.OnKeyDown(Object, DFKeyEventArgs)
    fullName: DotFeather.GameBase.OnKeyDown(System.Object, DotFeather.DFKeyEventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
        name: OnKeyDown
        nameWithType: GameBase.OnKeyDown
        fullName: DotFeather.GameBase.OnKeyDown
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFKeyEventArgs
        name: DFKeyEventArgs
        nameWithType: DFKeyEventArgs
        fullName: DotFeather.DFKeyEventArgs
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnKeyDown(System.Object,DotFeather.DFKeyEventArgs)
        name: OnKeyDown
        nameWithType: GameBase.OnKeyDown
        fullName: DotFeather.GameBase.OnKeyDown
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFKeyEventArgs
        name: DFKeyEventArgs
        nameWithType: DFKeyEventArgs
        fullName: DotFeather.DFKeyEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
    commentId: M:DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnKeyUp(Object, DFKeyEventArgs)
    nameWithType: GameBase.OnKeyUp(Object, DFKeyEventArgs)
    fullName: DotFeather.GameBase.OnKeyUp(System.Object, DotFeather.DFKeyEventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
        name: OnKeyUp
        nameWithType: GameBase.OnKeyUp
        fullName: DotFeather.GameBase.OnKeyUp
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFKeyEventArgs
        name: DFKeyEventArgs
        nameWithType: DFKeyEventArgs
        fullName: DotFeather.DFKeyEventArgs
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnKeyUp(System.Object,DotFeather.DFKeyEventArgs)
        name: OnKeyUp
        nameWithType: GameBase.OnKeyUp
        fullName: DotFeather.GameBase.OnKeyUp
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFKeyEventArgs
        name: DFKeyEventArgs
        nameWithType: DFKeyEventArgs
        fullName: DotFeather.DFKeyEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase.Random
    commentId: P:DotFeather.GameBase.Random
    parent: DotFeather.GameBase
    name: Random
    nameWithType: GameBase.Random
    fullName: DotFeather.GameBase.Random
  - uid: DotFeather.GameBase.Load
    commentId: E:DotFeather.GameBase.Load
    parent: DotFeather.GameBase
    name: Load
    nameWithType: GameBase.Load
    fullName: DotFeather.GameBase.Load
  - uid: DotFeather.GameBase.Unload
    commentId: E:DotFeather.GameBase.Unload
    parent: DotFeather.GameBase
    name: Unload
    nameWithType: GameBase.Unload
    fullName: DotFeather.GameBase.Unload
  - uid: DotFeather.GameBase.FileDrop
    commentId: E:DotFeather.GameBase.FileDrop
    parent: DotFeather.GameBase
    name: FileDrop
    nameWithType: GameBase.FileDrop
    fullName: DotFeather.GameBase.FileDrop
  - uid: DotFeather.GameBase.Resize
    commentId: E:DotFeather.GameBase.Resize
    parent: DotFeather.GameBase
    name: Resize
    nameWithType: GameBase.Resize
    fullName: DotFeather.GameBase.Resize
  - uid: DotFeather.GameBase.KeyDown
    commentId: E:DotFeather.GameBase.KeyDown
    parent: DotFeather.GameBase
    name: KeyDown
    nameWithType: GameBase.KeyDown
    fullName: DotFeather.GameBase.KeyDown
  - uid: DotFeather.GameBase.KeyPress
    commentId: E:DotFeather.GameBase.KeyPress
    parent: DotFeather.GameBase
    name: KeyPress
    nameWithType: GameBase.KeyPress
    fullName: DotFeather.GameBase.KeyPress
  - uid: DotFeather.GameBase.KeyUp
    commentId: E:DotFeather.GameBase.KeyUp
    parent: DotFeather.GameBase
    name: KeyUp
    nameWithType: GameBase.KeyUp
    fullName: DotFeather.GameBase.KeyUp
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.RoutingGameBase`1.#ctor*
    commentId: Overload:DotFeather.RoutingGameBase`1.#ctor
    name: RoutingGameBase
    nameWithType: RoutingGameBase<T>.RoutingGameBase
    fullName: DotFeather.RoutingGameBase<T>.RoutingGameBase
    nameWithType.vb: RoutingGameBase(Of T).RoutingGameBase
    fullName.vb: DotFeather.RoutingGameBase(Of T).RoutingGameBase
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
    commentId: M:DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnLoad(Object, EventArgs)
    nameWithType: GameBase.OnLoad(Object, EventArgs)
    fullName: DotFeather.GameBase.OnLoad(System.Object, System.EventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
        name: OnLoad
        nameWithType: GameBase.OnLoad
        fullName: DotFeather.GameBase.OnLoad
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnLoad(System.Object,System.EventArgs)
        name: OnLoad
        nameWithType: GameBase.OnLoad
        fullName: DotFeather.GameBase.OnLoad
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        fullName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.RoutingGameBase`1.OnLoad*
    commentId: Overload:DotFeather.RoutingGameBase`1.OnLoad
    name: OnLoad
    nameWithType: RoutingGameBase<T>.OnLoad
    fullName: DotFeather.RoutingGameBase<T>.OnLoad
    nameWithType.vb: RoutingGameBase(Of T).OnLoad
    fullName.vb: DotFeather.RoutingGameBase(Of T).OnLoad
  - uid: System.EventArgs
    commentId: T:System.EventArgs
    parent: System
    isExternal: true
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
  - uid: DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
    commentId: M:DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
    parent: DotFeather.GameBase
    isExternal: true
    name: OnUpdate(Object, DFEventArgs)
    nameWithType: GameBase.OnUpdate(Object, DFEventArgs)
    fullName: DotFeather.GameBase.OnUpdate(System.Object, DotFeather.DFEventArgs)
    spec.csharp:
      - uid: DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
        name: OnUpdate
        nameWithType: GameBase.OnUpdate
        fullName: DotFeather.GameBase.OnUpdate
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFEventArgs
        name: DFEventArgs
        nameWithType: DFEventArgs
        fullName: DotFeather.DFEventArgs
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.GameBase.OnUpdate(System.Object,DotFeather.DFEventArgs)
        name: OnUpdate
        nameWithType: GameBase.OnUpdate
        fullName: DotFeather.GameBase.OnUpdate
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.DFEventArgs
        name: DFEventArgs
        nameWithType: DFEventArgs
        fullName: DotFeather.DFEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.RoutingGameBase`1.OnUpdate*
    commentId: Overload:DotFeather.RoutingGameBase`1.OnUpdate
    name: OnUpdate
    nameWithType: RoutingGameBase<T>.OnUpdate
    fullName: DotFeather.RoutingGameBase<T>.OnUpdate
    nameWithType.vb: RoutingGameBase(Of T).OnUpdate
    fullName.vb: DotFeather.RoutingGameBase(Of T).OnUpdate
  - uid: DotFeather.DFEventArgs
    commentId: T:DotFeather.DFEventArgs
    parent: DotFeather
    name: DFEventArgs
    nameWithType: DFEventArgs
    fullName: DotFeather.DFEventArgs
  - uid: System.EventHandler{DotFeather.DFEventArgs}
    commentId: T:System.EventHandler{DotFeather.DFEventArgs}
    parent: System
    definition: System.EventHandler`1
    name: EventHandler<DFEventArgs>
    nameWithType: EventHandler<DFEventArgs>
    fullName: System.EventHandler<DotFeather.DFEventArgs>
    nameWithType.vb: EventHandler(Of DFEventArgs)
    fullName.vb: System.EventHandler(Of DotFeather.DFEventArgs)
    name.vb: EventHandler(Of DFEventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: DotFeather.DFEventArgs
        name: DFEventArgs
        nameWithType: DFEventArgs
        fullName: DotFeather.DFEventArgs
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: DotFeather.DFEventArgs
        name: DFEventArgs
        nameWithType: DFEventArgs
        fullName: DotFeather.DFEventArgs
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.EventHandler`1
    commentId: T:System.EventHandler`1
    isExternal: true
    name: EventHandler<TEventArgs>
    nameWithType: EventHandler<TEventArgs>
    fullName: System.EventHandler<TEventArgs>
    nameWithType.vb: EventHandler(Of TEventArgs)
    fullName.vb: System.EventHandler(Of TEventArgs)
    name.vb: EventHandler(Of TEventArgs)
    spec.csharp:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: TEventArgs
        nameWithType: TEventArgs
        fullName: TEventArgs
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.EventHandler`1
        name: EventHandler
        nameWithType: EventHandler
        fullName: System.EventHandler
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: TEventArgs
        nameWithType: TEventArgs
        fullName: TEventArgs
      - name: )
        nameWithType: )
        fullName: )
