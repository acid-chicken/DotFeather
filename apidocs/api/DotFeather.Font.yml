### YamlMime:ManagedReference
items:
  - uid: DotFeather.Font
    commentId: T:DotFeather.Font
    id: Font
    parent: DotFeather
    children:
      - DotFeather.Font.#ctor(System.IO.Stream,System.String,System.Single,DotFeather.FontStyle)
      - DotFeather.Font.#ctor(System.String,System.Single,DotFeather.FontStyle)
      - DotFeather.Font.Equals(System.Object)
      - DotFeather.Font.FontStyle
      - DotFeather.Font.GetDefault(System.Single,DotFeather.FontStyle)
      - DotFeather.Font.GetHashCode
      - DotFeather.Font.Id
      - DotFeather.Font.Path
      - DotFeather.Font.Size
      - DotFeather.Font.Stream
    langs:
      - csharp
      - vb
    name: Font
    nameWithType: Font
    fullName: DotFeather.Font
    type: Class
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Font
      path: ../DotFeather/Graphics/Font.cs
      startLine: 9
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDepresents font-family, size, and font style.\n"
    example: []
    syntax:
      content: public class Font
      content.vb: Public Class Font
    inheritance:
      - System.Object
    inheritedMembers:
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.Font.Path
    commentId: P:DotFeather.Font.Path
    id: Path
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Path
    nameWithType: Font.Path
    fullName: DotFeather.Font.Path
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Path
      path: ../DotFeather/Graphics/Font.cs
      startLine: 14
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a path to this font, or font-family name.\n"
    example: []
    syntax:
      content: public string Path { get; }
      parameters: []
      return:
        type: System.String
      content.vb: Public ReadOnly Property Path As String
    overload: DotFeather.Font.Path*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Font.Id
    commentId: P:DotFeather.Font.Id
    id: Id
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Id
    nameWithType: Font.Id
    fullName: DotFeather.Font.Id
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Id
      path: ../DotFeather/Graphics/Font.cs
      startLine: 19
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a font identifier.\n"
    example: []
    syntax:
      content: public string Id { get; }
      parameters: []
      return:
        type: System.String
      content.vb: Public ReadOnly Property Id As String
    overload: DotFeather.Font.Id*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Font.Stream
    commentId: P:DotFeather.Font.Stream
    id: Stream
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Stream
    nameWithType: Font.Stream
    fullName: DotFeather.Font.Stream
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Stream
      path: ../DotFeather/Graphics/Font.cs
      startLine: 24
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a path to this font, or font-family name.\n"
    example: []
    syntax:
      content: public Stream Stream { get; }
      parameters: []
      return:
        type: System.IO.Stream
      content.vb: Public ReadOnly Property Stream As Stream
    overload: DotFeather.Font.Stream*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Font.Size
    commentId: P:DotFeather.Font.Size
    id: Size
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Size
    nameWithType: Font.Size
    fullName: DotFeather.Font.Size
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Size
      path: ../DotFeather/Graphics/Font.cs
      startLine: 29
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a size of this font.\n"
    example: []
    syntax:
      content: public float Size { get; }
      parameters: []
      return:
        type: System.Single
      content.vb: Public ReadOnly Property Size As Single
    overload: DotFeather.Font.Size*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Font.FontStyle
    commentId: P:DotFeather.Font.FontStyle
    id: FontStyle
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: FontStyle
    nameWithType: Font.FontStyle
    fullName: DotFeather.Font.FontStyle
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: FontStyle
      path: ../DotFeather/Graphics/Font.cs
      startLine: 34
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a style of this font.\n"
    example: []
    syntax:
      content: public FontStyle FontStyle { get; }
      parameters: []
      return:
        type: DotFeather.FontStyle
      content.vb: Public ReadOnly Property FontStyle As FontStyle
    overload: DotFeather.Font.FontStyle*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Font.GetDefault(System.Single,DotFeather.FontStyle)
    commentId: M:DotFeather.Font.GetDefault(System.Single,DotFeather.FontStyle)
    id: GetDefault(System.Single,DotFeather.FontStyle)
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: GetDefault(Single, FontStyle)
    nameWithType: Font.GetDefault(Single, FontStyle)
    fullName: DotFeather.Font.GetDefault(System.Single, DotFeather.FontStyle)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: GetDefault
      path: ../DotFeather/Graphics/Font.cs
      startLine: 42
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet a default font.\n"
    example: []
    syntax:
      content: public static Font GetDefault(float size = 16F, FontStyle style = FontStyle.Normal)
      parameters:
        - id: size
          type: System.Single
          description: Font size.
        - id: style
          type: DotFeather.FontStyle
          description: Font style.
      return:
        type: DotFeather.Font
        description: Generated defualt font.
      content.vb: Public Shared Function GetDefault(size As Single = 16F, style As FontStyle = FontStyle.Normal) As Font
    overload: DotFeather.Font.GetDefault*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
  - uid: DotFeather.Font.#ctor(System.String,System.Single,DotFeather.FontStyle)
    commentId: M:DotFeather.Font.#ctor(System.String,System.Single,DotFeather.FontStyle)
    id: "#ctor(System.String,System.Single,DotFeather.FontStyle)"
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Font(String, Single, FontStyle)
    nameWithType: Font.Font(String, Single, FontStyle)
    fullName: DotFeather.Font.Font(System.String, System.Single, DotFeather.FontStyle)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/Font.cs
      startLine: 53
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.Font\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
    example: []
    syntax:
      content: public Font(string path, float size = 16F, FontStyle style = FontStyle.Normal)
      parameters:
        - id: path
          type: System.String
          description: relative path to the font, or font-family name of system fonts.
        - id: size
          type: System.Single
          description: font size by pixel unit.
        - id: style
          type: DotFeather.FontStyle
          description: font style.
      content.vb: Public Sub New(path As String, size As Single = 16F, style As FontStyle = FontStyle.Normal)
    overload: DotFeather.Font.#ctor*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.Font.#ctor(System.IO.Stream,System.String,System.Single,DotFeather.FontStyle)
    commentId: M:DotFeather.Font.#ctor(System.IO.Stream,System.String,System.Single,DotFeather.FontStyle)
    id: "#ctor(System.IO.Stream,System.String,System.Single,DotFeather.FontStyle)"
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Font(Stream, String, Single, FontStyle)
    nameWithType: Font.Font(Stream, String, Single, FontStyle)
    fullName: DotFeather.Font.Font(System.IO.Stream, System.String, System.Single, DotFeather.FontStyle)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/Font.cs
      startLine: 68
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.Font\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
    example: []
    syntax:
      content: public Font(Stream stream, string id, float size = 16F, FontStyle style = FontStyle.Normal)
      parameters:
        - id: stream
          type: System.IO.Stream
          description: Stream of the font.
        - id: id
          type: System.String
          description: An ID to cache this font data.
        - id: size
          type: System.Single
          description: font size by pixel unit.
        - id: style
          type: DotFeather.FontStyle
          description: font style.
      content.vb: Public Sub New(stream As Stream, id As String, size As Single = 16F, style As FontStyle = FontStyle.Normal)
    overload: DotFeather.Font.#ctor*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.Font.Equals(System.Object)
    commentId: M:DotFeather.Font.Equals(System.Object)
    id: Equals(System.Object)
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: Equals(Object)
    nameWithType: Font.Equals(Object)
    fullName: DotFeather.Font.Equals(System.Object)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Equals
      path: ../DotFeather/Graphics/Font.cs
      startLine: 76
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public override bool Equals(object obj)
      parameters:
        - id: obj
          type: System.Object
      return:
        type: System.Boolean
      content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    overridden: System.Object.Equals(System.Object)
    overload: DotFeather.Font.Equals*
    modifiers.csharp:
      - public
      - override
    modifiers.vb:
      - Public
      - Overrides
  - uid: DotFeather.Font.GetHashCode
    commentId: M:DotFeather.Font.GetHashCode
    id: GetHashCode
    parent: DotFeather.Font
    langs:
      - csharp
      - vb
    name: GetHashCode()
    nameWithType: Font.GetHashCode()
    fullName: DotFeather.Font.GetHashCode()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Font.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: GetHashCode
      path: ../DotFeather/Graphics/Font.cs
      startLine: 85
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public override int GetHashCode()
      return:
        type: System.Int32
      content.vb: Public Overrides Function GetHashCode As Integer
    overridden: System.Object.GetHashCode
    overload: DotFeather.Font.GetHashCode*
    modifiers.csharp:
      - public
      - override
    modifiers.vb:
      - Public
      - Overrides
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.Font.Path*
    commentId: Overload:DotFeather.Font.Path
    name: Path
    nameWithType: Font.Path
    fullName: DotFeather.Font.Path
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: DotFeather.Font.Id*
    commentId: Overload:DotFeather.Font.Id
    name: Id
    nameWithType: Font.Id
    fullName: DotFeather.Font.Id
  - uid: DotFeather.Font.Stream*
    commentId: Overload:DotFeather.Font.Stream
    name: Stream
    nameWithType: Font.Stream
    fullName: DotFeather.Font.Stream
  - uid: System.IO.Stream
    commentId: T:System.IO.Stream
    parent: System.IO
    isExternal: true
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
  - uid: System.IO
    commentId: N:System.IO
    isExternal: true
    name: System.IO
    nameWithType: System.IO
    fullName: System.IO
  - uid: DotFeather.Font.Size*
    commentId: Overload:DotFeather.Font.Size
    name: Size
    nameWithType: Font.Size
    fullName: DotFeather.Font.Size
  - uid: System.Single
    commentId: T:System.Single
    parent: System
    isExternal: true
    name: Single
    nameWithType: Single
    fullName: System.Single
  - uid: DotFeather.Font.FontStyle*
    commentId: Overload:DotFeather.Font.FontStyle
    name: FontStyle
    nameWithType: Font.FontStyle
    fullName: DotFeather.Font.FontStyle
  - uid: DotFeather.FontStyle
    commentId: T:DotFeather.FontStyle
    parent: DotFeather
    name: FontStyle
    nameWithType: FontStyle
    fullName: DotFeather.FontStyle
  - uid: DotFeather.Font.GetDefault*
    commentId: Overload:DotFeather.Font.GetDefault
    name: GetDefault
    nameWithType: Font.GetDefault
    fullName: DotFeather.Font.GetDefault
  - uid: DotFeather.Font
    commentId: T:DotFeather.Font
    parent: DotFeather
    name: Font
    nameWithType: Font
    fullName: DotFeather.Font
  - uid: DotFeather.Font.#ctor*
    commentId: Overload:DotFeather.Font.#ctor
    name: Font
    nameWithType: Font.Font
    fullName: DotFeather.Font.Font
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.Font.Equals*
    commentId: Overload:DotFeather.Font.Equals
    name: Equals
    nameWithType: Font.Equals
    fullName: DotFeather.Font.Equals
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.Font.GetHashCode*
    commentId: Overload:DotFeather.Font.GetHashCode
    name: GetHashCode
    nameWithType: Font.GetHashCode
    fullName: DotFeather.Font.GetHashCode
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
