### YamlMime:ManagedReference
items:
  - uid: DotFeather.Tile
    commentId: T:DotFeather.Tile
    id: Tile
    parent: DotFeather
    children:
      - DotFeather.Tile.#ctor(DotFeather.Texture2D)
      - DotFeather.Tile.#ctor(DotFeather.Texture2D,System.Boolean)
      - DotFeather.Tile.#ctor(DotFeather.Texture2D[],System.Double)
      - DotFeather.Tile.Animations
      - DotFeather.Tile.Destroy
      - DotFeather.Tile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
      - DotFeather.Tile.Interval
      - DotFeather.Tile.LoadFrom(System.IO.Stream)
      - DotFeather.Tile.LoadFrom(System.String)
      - DotFeather.Tile.Texture
    langs:
      - csharp
      - vb
    name: Tile
    nameWithType: Tile
    fullName: DotFeather.Tile
    type: Class
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Tile
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 9
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n画像ファイルを表示するタイルです。\n"
    example: []
    syntax:
      content: "public class Tile : ITile"
      content.vb: >-
        Public Class Tile
            Implements ITile
    inheritance:
      - System.Object
    implements:
      - DotFeather.ITile
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.Tile.Texture
    commentId: P:DotFeather.Tile.Texture
    id: Texture
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Texture
    nameWithType: Tile.Texture
    fullName: DotFeather.Tile.Texture
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Texture
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 14
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n描画されるテクスチャを取得します。\n"
    example: []
    syntax:
      content: public Texture2D Texture { get; }
      parameters: []
      return:
        type: DotFeather.Texture2D
      content.vb: Public ReadOnly Property Texture As Texture2D
    overload: DotFeather.Tile.Texture*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Tile.Animations
    commentId: P:DotFeather.Tile.Animations
    id: Animations
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Animations
    nameWithType: Tile.Animations
    fullName: DotFeather.Tile.Animations
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Animations
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 19
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nアニメーションに使われるテクスチャの配列を取得します。\n"
    example: []
    syntax:
      content: public Texture2D[] Animations { get; }
      parameters: []
      return:
        type: DotFeather.Texture2D[]
      content.vb: Public ReadOnly Property Animations As Texture2D()
    overload: DotFeather.Tile.Animations*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Tile.Interval
    commentId: P:DotFeather.Tile.Interval
    id: Interval
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Interval
    nameWithType: Tile.Interval
    fullName: DotFeather.Tile.Interval
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Interval
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 24
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nアニメーションにおけるテクスチャ1枚あたりの描画時間を取得します。\n"
    example: []
    syntax:
      content: public double Interval { get; }
      parameters: []
      return:
        type: System.Double
      content.vb: Public ReadOnly Property Interval As Double
    overload: DotFeather.Tile.Interval*
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.Tile.#ctor(DotFeather.Texture2D)
    commentId: M:DotFeather.Tile.#ctor(DotFeather.Texture2D)
    id: "#ctor(DotFeather.Texture2D)"
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Tile(Texture2D)
    nameWithType: Tile.Tile(Texture2D)
    fullName: DotFeather.Tile.Tile(DotFeather.Texture2D)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 32
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nテクスチャを指定して、<xref href=\"DotFeather.Tile\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
    example: []
    syntax:
      content: public Tile(Texture2D texture)
      parameters:
        - id: texture
          type: DotFeather.Texture2D
          description: タイルとして描画されるテクスチャ。
      content.vb: Public Sub New(texture As Texture2D)
    overload: DotFeather.Tile.#ctor*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.Tile.#ctor(DotFeather.Texture2D,System.Boolean)
    commentId: M:DotFeather.Tile.#ctor(DotFeather.Texture2D,System.Boolean)
    id: "#ctor(DotFeather.Texture2D,System.Boolean)"
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Tile(Texture2D, Boolean)
    nameWithType: Tile.Tile(Texture2D, Boolean)
    fullName: DotFeather.Tile.Tile(DotFeather.Texture2D, System.Boolean)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 38
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n<xref href=\"DotFeather.Tile\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
    example: []
    syntax:
      content: protected Tile(Texture2D texture, bool b1)
      parameters:
        - id: texture
          type: DotFeather.Texture2D
        - id: b1
          type: System.Boolean
      content.vb: Protected Sub New(texture As Texture2D, b1 As Boolean)
    overload: DotFeather.Tile.#ctor*
    modifiers.csharp:
      - protected
    modifiers.vb:
      - Protected
  - uid: DotFeather.Tile.#ctor(DotFeather.Texture2D[],System.Double)
    commentId: M:DotFeather.Tile.#ctor(DotFeather.Texture2D[],System.Double)
    id: "#ctor(DotFeather.Texture2D[],System.Double)"
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Tile(Texture2D[], Double)
    nameWithType: Tile.Tile(Texture2D[], Double)
    fullName: DotFeather.Tile.Tile(DotFeather.Texture2D[], System.Double)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 51
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nテクスチャの配列とアニメーション時間を指定して、<xref href=\"DotFeather.Tile\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
    example: []
    syntax:
      content: public Tile(Texture2D[] animations, double interval)
      parameters:
        - id: animations
          type: DotFeather.Texture2D[]
          description: アニメーション描画されるテクスチャの配列。
        - id: interval
          type: System.Double
          description: アニメーションの時間。
      content.vb: Public Sub New(animations As Texture2D(), interval As Double)
    overload: DotFeather.Tile.#ctor*
    exceptions:
      - type: System.ArgumentNullException
        commentId: T:System.ArgumentNullException
        description: animations が <code>null</code> です。
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: animations の長さが <code>0</code> です。
    nameWithType.vb: Tile.Tile(Texture2D(), Double)
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.Tile.Tile(DotFeather.Texture2D(), System.Double)
    name.vb: Tile(Texture2D(), Double)
  - uid: DotFeather.Tile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
    commentId: M:DotFeather.Tile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
    id: Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Draw(GameBase, Tilemap, Vector, Nullable<Color>)
    nameWithType: Tile.Draw(GameBase, Tilemap, Vector, Nullable<Color>)
    fullName: DotFeather.Tile.Draw(DotFeather.GameBase, DotFeather.Tilemap, DotFeather.Vector, System.Nullable<System.Drawing.Color>)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Draw
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 63
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n\n"
    example: []
    syntax:
      content: public void Draw(GameBase game, Tilemap map, Vector location, Color? color)
      parameters:
        - id: game
          type: DotFeather.GameBase
        - id: map
          type: DotFeather.Tilemap
        - id: location
          type: DotFeather.Vector
        - id: color
          type: System.Nullable{System.Drawing.Color}
      content.vb: Public Sub Draw(game As GameBase, map As Tilemap, location As Vector, color As Color?)
    overload: DotFeather.Tile.Draw*
    implements:
      - DotFeather.ITile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
    nameWithType.vb: Tile.Draw(GameBase, Tilemap, Vector, Nullable(Of Color))
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.Tile.Draw(DotFeather.GameBase, DotFeather.Tilemap, DotFeather.Vector, System.Nullable(Of System.Drawing.Color))
    name.vb: Draw(GameBase, Tilemap, Vector, Nullable(Of Color))
  - uid: DotFeather.Tile.LoadFrom(System.String)
    commentId: M:DotFeather.Tile.LoadFrom(System.String)
    id: LoadFrom(System.String)
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: LoadFrom(String)
    nameWithType: Tile.LoadFrom(String)
    fullName: DotFeather.Tile.LoadFrom(System.String)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: LoadFrom
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 87
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n画像ファイルを指定して、タイルを生成します。\n"
    example: []
    syntax:
      content: public static Tile LoadFrom(string path)
      parameters:
        - id: path
          type: System.String
          description: ファイルパス。
      return:
        type: DotFeather.Tile
        description: 生成されたタイル。
      content.vb: Public Shared Function LoadFrom(path As String) As Tile
    overload: DotFeather.Tile.LoadFrom*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
  - uid: DotFeather.Tile.LoadFrom(System.IO.Stream)
    commentId: M:DotFeather.Tile.LoadFrom(System.IO.Stream)
    id: LoadFrom(System.IO.Stream)
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: LoadFrom(Stream)
    nameWithType: Tile.LoadFrom(Stream)
    fullName: DotFeather.Tile.LoadFrom(System.IO.Stream)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: LoadFrom
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 94
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\n画像ファイルを指定して、タイルを生成します。\n"
    example: []
    syntax:
      content: public static Tile LoadFrom(Stream stream)
      parameters:
        - id: stream
          type: System.IO.Stream
          description: ファイルを示すストリーム。
      return:
        type: DotFeather.Tile
        description: 生成されたタイル。
      content.vb: Public Shared Function LoadFrom(stream As Stream) As Tile
    overload: DotFeather.Tile.LoadFrom*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
  - uid: DotFeather.Tile.Destroy
    commentId: M:DotFeather.Tile.Destroy
    id: Destroy
    parent: DotFeather.Tile
    langs:
      - csharp
      - vb
    name: Destroy()
    nameWithType: Tile.Destroy()
    fullName: DotFeather.Tile.Destroy()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Tiles/Tile.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Destroy
      path: ../DotFeather/Graphics/Tiles/Tile.cs
      startLine: 99
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nこの <xref href=\"DotFeather.Tile\" data-throw-if-not-resolved=\"false\"></xref> を削除します。\n"
    example: []
    syntax:
      content: public void Destroy()
      content.vb: Public Sub Destroy
    overload: DotFeather.Tile.Destroy*
    implements:
      - DotFeather.ITile.Destroy
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.ITile
    commentId: T:DotFeather.ITile
    parent: DotFeather
    name: ITile
    nameWithType: ITile
    fullName: DotFeather.ITile
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.Tile.Texture*
    commentId: Overload:DotFeather.Tile.Texture
    name: Texture
    nameWithType: Tile.Texture
    fullName: DotFeather.Tile.Texture
  - uid: DotFeather.Texture2D
    commentId: T:DotFeather.Texture2D
    parent: DotFeather
    name: Texture2D
    nameWithType: Texture2D
    fullName: DotFeather.Texture2D
  - uid: DotFeather.Tile.Animations*
    commentId: Overload:DotFeather.Tile.Animations
    name: Animations
    nameWithType: Tile.Animations
    fullName: DotFeather.Tile.Animations
  - uid: DotFeather.Texture2D[]
    isExternal: true
    name: Texture2D[]
    nameWithType: Texture2D[]
    fullName: DotFeather.Texture2D[]
    nameWithType.vb: Texture2D()
    fullName.vb: DotFeather.Texture2D()
    name.vb: Texture2D()
    spec.csharp:
      - uid: DotFeather.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        fullName: DotFeather.Texture2D
      - name: "[]"
        nameWithType: "[]"
        fullName: "[]"
    spec.vb:
      - uid: DotFeather.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        fullName: DotFeather.Texture2D
      - name: ()
        nameWithType: ()
        fullName: ()
  - uid: DotFeather.Tile.Interval*
    commentId: Overload:DotFeather.Tile.Interval
    name: Interval
    nameWithType: Tile.Interval
    fullName: DotFeather.Tile.Interval
  - uid: System.Double
    commentId: T:System.Double
    parent: System
    isExternal: true
    name: Double
    nameWithType: Double
    fullName: System.Double
  - uid: DotFeather.Tile
    commentId: T:DotFeather.Tile
    parent: DotFeather
    name: Tile
    nameWithType: Tile
    fullName: DotFeather.Tile
  - uid: DotFeather.Tile.#ctor*
    commentId: Overload:DotFeather.Tile.#ctor
    name: Tile
    nameWithType: Tile.Tile
    fullName: DotFeather.Tile.Tile
  - uid: System.Boolean
    commentId: T:System.Boolean
    parent: System
    isExternal: true
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - uid: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    isExternal: true
  - uid: System.ArgumentException
    commentId: T:System.ArgumentException
    isExternal: true
  - uid: DotFeather.Tile.Draw*
    commentId: Overload:DotFeather.Tile.Draw
    name: Draw
    nameWithType: Tile.Draw
    fullName: DotFeather.Tile.Draw
  - uid: DotFeather.ITile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
    commentId: M:DotFeather.ITile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
    parent: DotFeather.ITile
    isExternal: true
    name: Draw(GameBase, Tilemap, Vector, Nullable<Color>)
    nameWithType: ITile.Draw(GameBase, Tilemap, Vector, Nullable<Color>)
    fullName: DotFeather.ITile.Draw(DotFeather.GameBase, DotFeather.Tilemap, DotFeather.Vector, System.Nullable<System.Drawing.Color>)
    nameWithType.vb: ITile.Draw(GameBase, Tilemap, Vector, Nullable(Of Color))
    fullName.vb: DotFeather.ITile.Draw(DotFeather.GameBase, DotFeather.Tilemap, DotFeather.Vector, System.Nullable(Of System.Drawing.Color))
    name.vb: Draw(GameBase, Tilemap, Vector, Nullable(Of Color))
    spec.csharp:
      - uid: DotFeather.ITile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
        name: Draw
        nameWithType: ITile.Draw
        fullName: DotFeather.ITile.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Tilemap
        name: Tilemap
        nameWithType: Tilemap
        fullName: DotFeather.Tilemap
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.ITile.Draw(DotFeather.GameBase,DotFeather.Tilemap,DotFeather.Vector,System.Nullable{System.Drawing.Color})
        name: Draw
        nameWithType: ITile.Draw
        fullName: DotFeather.ITile.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Tilemap
        name: Tilemap
        nameWithType: Tilemap
        fullName: DotFeather.Tilemap
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.GameBase
    commentId: T:DotFeather.GameBase
    parent: DotFeather
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - uid: DotFeather.Tilemap
    commentId: T:DotFeather.Tilemap
    parent: DotFeather
    name: Tilemap
    nameWithType: Tilemap
    fullName: DotFeather.Tilemap
  - uid: DotFeather.Vector
    commentId: T:DotFeather.Vector
    parent: DotFeather
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - uid: System.Nullable{System.Drawing.Color}
    commentId: T:System.Nullable{System.Drawing.Color}
    parent: System
    definition: System.Nullable`1
    name: Nullable<Color>
    nameWithType: Nullable<Color>
    fullName: System.Nullable<System.Drawing.Color>
    nameWithType.vb: Nullable(Of Color)
    fullName.vb: System.Nullable(Of System.Drawing.Color)
    name.vb: Nullable(Of Color)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Drawing.Color
        name: Color
        nameWithType: Color
        fullName: System.Drawing.Color
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Nullable`1
    commentId: T:System.Nullable`1
    isExternal: true
    name: Nullable<T>
    nameWithType: Nullable<T>
    fullName: System.Nullable<T>
    nameWithType.vb: Nullable(Of T)
    fullName.vb: System.Nullable(Of T)
    name.vb: Nullable(Of T)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.Tile.LoadFrom*
    commentId: Overload:DotFeather.Tile.LoadFrom
    name: LoadFrom
    nameWithType: Tile.LoadFrom
    fullName: DotFeather.Tile.LoadFrom
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: System.IO.Stream
    commentId: T:System.IO.Stream
    parent: System.IO
    isExternal: true
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
  - uid: System.IO
    commentId: N:System.IO
    isExternal: true
    name: System.IO
    nameWithType: System.IO
    fullName: System.IO
  - uid: DotFeather.Tile.Destroy*
    commentId: Overload:DotFeather.Tile.Destroy
    name: Destroy
    nameWithType: Tile.Destroy
    fullName: DotFeather.Tile.Destroy
  - uid: DotFeather.ITile.Destroy
    commentId: M:DotFeather.ITile.Destroy
    parent: DotFeather.ITile
    name: Destroy()
    nameWithType: ITile.Destroy()
    fullName: DotFeather.ITile.Destroy()
    spec.csharp:
      - uid: DotFeather.ITile.Destroy
        name: Destroy
        nameWithType: ITile.Destroy
        fullName: DotFeather.ITile.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.ITile.Destroy
        name: Destroy
        nameWithType: ITile.Destroy
        fullName: DotFeather.ITile.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
