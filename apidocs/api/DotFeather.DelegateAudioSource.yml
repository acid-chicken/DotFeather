### YamlMime:ManagedReference
items:
  - uid: DotFeather.DelegateAudioSource
    commentId: T:DotFeather.DelegateAudioSource
    id: DelegateAudioSource
    parent: DotFeather
    children:
      - DotFeather.DelegateAudioSource.#ctor(DotFeather.AudioGeneratorDelegate)
      - DotFeather.DelegateAudioSource.Bits
      - DotFeather.DelegateAudioSource.Channels
      - DotFeather.DelegateAudioSource.EnumerateSamples(System.Nullable{System.Int32})
      - DotFeather.DelegateAudioSource.SampleRate
      - DotFeather.DelegateAudioSource.Samples
    langs:
      - csharp
      - vb
    name: DelegateAudioSource
    nameWithType: DelegateAudioSource
    fullName: DotFeather.DelegateAudioSource
    type: Class
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: DelegateAudioSource
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 7
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nAn audio source to generate waveform with delegate.\n"
    example: []
    syntax:
      content: "public class DelegateAudioSource : IAudioSource"
      content.vb: >-
        Public Class DelegateAudioSource
            Implements IAudioSource
    inheritance:
      - System.Object
    implements:
      - DotFeather.IAudioSource
    inheritedMembers:
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.DelegateAudioSource.Samples
    commentId: P:DotFeather.DelegateAudioSource.Samples
    id: Samples
    parent: DotFeather.DelegateAudioSource
    langs:
      - csharp
      - vb
    name: Samples
    nameWithType: DelegateAudioSource.Samples
    fullName: DotFeather.DelegateAudioSource.Samples
    type: Property
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Samples
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 13
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet the total number of samples.\n"
    example: []
    syntax:
      content: public int? Samples { get; }
      parameters: []
      return:
        type: System.Nullable{System.Int32}
        description: ""
      content.vb: Public ReadOnly Property Samples As Integer?
    overload: DotFeather.DelegateAudioSource.Samples*
    implements:
      - DotFeather.IAudioSource.Samples
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DelegateAudioSource.Channels
    commentId: P:DotFeather.DelegateAudioSource.Channels
    id: Channels
    parent: DotFeather.DelegateAudioSource
    langs:
      - csharp
      - vb
    name: Channels
    nameWithType: DelegateAudioSource.Channels
    fullName: DotFeather.DelegateAudioSource.Channels
    type: Property
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Channels
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 18
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet channels.\n"
    example: []
    syntax:
      content: public int Channels { get; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public ReadOnly Property Channels As Integer
    overload: DotFeather.DelegateAudioSource.Channels*
    implements:
      - DotFeather.IAudioSource.Channels
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DelegateAudioSource.Bits
    commentId: P:DotFeather.DelegateAudioSource.Bits
    id: Bits
    parent: DotFeather.DelegateAudioSource
    langs:
      - csharp
      - vb
    name: Bits
    nameWithType: DelegateAudioSource.Bits
    fullName: DotFeather.DelegateAudioSource.Bits
    type: Property
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Bits
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 23
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet sample bits.\n"
    example: []
    syntax:
      content: public int Bits { get; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public ReadOnly Property Bits As Integer
    overload: DotFeather.DelegateAudioSource.Bits*
    implements:
      - DotFeather.IAudioSource.Bits
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DelegateAudioSource.SampleRate
    commentId: P:DotFeather.DelegateAudioSource.SampleRate
    id: SampleRate
    parent: DotFeather.DelegateAudioSource
    langs:
      - csharp
      - vb
    name: SampleRate
    nameWithType: DelegateAudioSource.SampleRate
    fullName: DotFeather.DelegateAudioSource.SampleRate
    type: Property
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: SampleRate
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 28
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet sample rate.\n"
    example: []
    syntax:
      content: public int SampleRate { get; }
      parameters: []
      return:
        type: System.Int32
      content.vb: Public ReadOnly Property SampleRate As Integer
    overload: DotFeather.DelegateAudioSource.SampleRate*
    implements:
      - DotFeather.IAudioSource.SampleRate
    modifiers.csharp:
      - public
      - get
    modifiers.vb:
      - Public
      - ReadOnly
  - uid: DotFeather.DelegateAudioSource.#ctor(DotFeather.AudioGeneratorDelegate)
    commentId: M:DotFeather.DelegateAudioSource.#ctor(DotFeather.AudioGeneratorDelegate)
    id: "#ctor(DotFeather.AudioGeneratorDelegate)"
    parent: DotFeather.DelegateAudioSource
    langs:
      - csharp
      - vb
    name: DelegateAudioSource(AudioGeneratorDelegate)
    nameWithType: DelegateAudioSource.DelegateAudioSource(AudioGeneratorDelegate)
    fullName: DotFeather.DelegateAudioSource.DelegateAudioSource(DotFeather.AudioGeneratorDelegate)
    type: Constructor
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 33
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.DelegateAudioSource\" data-throw-if-not-resolved=\"false\"></xref> class with specified file path.\n"
    example: []
    syntax:
      content: public DelegateAudioSource(AudioGeneratorDelegate d)
      parameters:
        - id: d
          type: DotFeather.AudioGeneratorDelegate
      content.vb: Public Sub New(d As AudioGeneratorDelegate)
    overload: DotFeather.DelegateAudioSource.#ctor*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.DelegateAudioSource.EnumerateSamples(System.Nullable{System.Int32})
    commentId: M:DotFeather.DelegateAudioSource.EnumerateSamples(System.Nullable{System.Int32})
    id: EnumerateSamples(System.Nullable{System.Int32})
    parent: DotFeather.DelegateAudioSource
    langs:
      - csharp
      - vb
    name: EnumerateSamples(Nullable<Int32>)
    nameWithType: DelegateAudioSource.EnumerateSamples(Nullable<Int32>)
    fullName: DotFeather.DelegateAudioSource.EnumerateSamples(System.Nullable<System.Int32>)
    type: Method
    source:
      remote:
        path: DotFeather/Audio/DelegateAudioSource.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: EnumerateSamples
      path: ../DotFeather/Audio/DelegateAudioSource.cs
      startLine: 38
    assemblies:
      - DotFeather
    namespace: DotFeather
    syntax:
      content: public IEnumerable<(short left, short right)> EnumerateSamples(int? loopStart)
      parameters:
        - id: loopStart
          type: System.Nullable{System.Int32}
      return:
        type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int16,System.Int16}}
      content.vb: Public Function EnumerateSamples(loopStart As Integer?) As IEnumerable(Of(left As Short, right As Short))
    overload: DotFeather.DelegateAudioSource.EnumerateSamples*
    implements:
      - DotFeather.IAudioSource.EnumerateSamples(System.Nullable{System.Int32})
    nameWithType.vb: DelegateAudioSource.EnumerateSamples(Nullable(Of Int32))
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
    fullName.vb: DotFeather.DelegateAudioSource.EnumerateSamples(System.Nullable(Of System.Int32))
    name.vb: EnumerateSamples(Nullable(Of Int32))
references:
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.IAudioSource
    commentId: T:DotFeather.IAudioSource
    parent: DotFeather
    name: IAudioSource
    nameWithType: IAudioSource
    fullName: DotFeather.IAudioSource
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.DelegateAudioSource.Samples*
    commentId: Overload:DotFeather.DelegateAudioSource.Samples
    name: Samples
    nameWithType: DelegateAudioSource.Samples
    fullName: DotFeather.DelegateAudioSource.Samples
  - uid: DotFeather.IAudioSource.Samples
    commentId: P:DotFeather.IAudioSource.Samples
    parent: DotFeather.IAudioSource
    name: Samples
    nameWithType: IAudioSource.Samples
    fullName: DotFeather.IAudioSource.Samples
  - uid: System.Nullable{System.Int32}
    commentId: T:System.Nullable{System.Int32}
    parent: System
    definition: System.Nullable`1
    name: Nullable<Int32>
    nameWithType: Nullable<Int32>
    fullName: System.Nullable<System.Int32>
    nameWithType.vb: Nullable(Of Int32)
    fullName.vb: System.Nullable(Of System.Int32)
    name.vb: Nullable(Of Int32)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Nullable`1
    commentId: T:System.Nullable`1
    isExternal: true
    name: Nullable<T>
    nameWithType: Nullable<T>
    fullName: System.Nullable<T>
    nameWithType.vb: Nullable(Of T)
    fullName.vb: System.Nullable(Of T)
    name.vb: Nullable(Of T)
    spec.csharp:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.DelegateAudioSource.Channels*
    commentId: Overload:DotFeather.DelegateAudioSource.Channels
    name: Channels
    nameWithType: DelegateAudioSource.Channels
    fullName: DotFeather.DelegateAudioSource.Channels
  - uid: DotFeather.IAudioSource.Channels
    commentId: P:DotFeather.IAudioSource.Channels
    parent: DotFeather.IAudioSource
    name: Channels
    nameWithType: IAudioSource.Channels
    fullName: DotFeather.IAudioSource.Channels
  - uid: System.Int32
    commentId: T:System.Int32
    parent: System
    isExternal: true
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - uid: DotFeather.DelegateAudioSource.Bits*
    commentId: Overload:DotFeather.DelegateAudioSource.Bits
    name: Bits
    nameWithType: DelegateAudioSource.Bits
    fullName: DotFeather.DelegateAudioSource.Bits
  - uid: DotFeather.IAudioSource.Bits
    commentId: P:DotFeather.IAudioSource.Bits
    parent: DotFeather.IAudioSource
    name: Bits
    nameWithType: IAudioSource.Bits
    fullName: DotFeather.IAudioSource.Bits
  - uid: DotFeather.DelegateAudioSource.SampleRate*
    commentId: Overload:DotFeather.DelegateAudioSource.SampleRate
    name: SampleRate
    nameWithType: DelegateAudioSource.SampleRate
    fullName: DotFeather.DelegateAudioSource.SampleRate
  - uid: DotFeather.IAudioSource.SampleRate
    commentId: P:DotFeather.IAudioSource.SampleRate
    parent: DotFeather.IAudioSource
    name: SampleRate
    nameWithType: IAudioSource.SampleRate
    fullName: DotFeather.IAudioSource.SampleRate
  - uid: DotFeather.DelegateAudioSource
    commentId: T:DotFeather.DelegateAudioSource
    name: DelegateAudioSource
    nameWithType: DelegateAudioSource
    fullName: DotFeather.DelegateAudioSource
  - uid: DotFeather.DelegateAudioSource.#ctor*
    commentId: Overload:DotFeather.DelegateAudioSource.#ctor
    name: DelegateAudioSource
    nameWithType: DelegateAudioSource.DelegateAudioSource
    fullName: DotFeather.DelegateAudioSource.DelegateAudioSource
  - uid: DotFeather.AudioGeneratorDelegate
    commentId: T:DotFeather.AudioGeneratorDelegate
    parent: DotFeather
    name: AudioGeneratorDelegate
    nameWithType: AudioGeneratorDelegate
    fullName: DotFeather.AudioGeneratorDelegate
  - uid: DotFeather.DelegateAudioSource.EnumerateSamples*
    commentId: Overload:DotFeather.DelegateAudioSource.EnumerateSamples
    name: EnumerateSamples
    nameWithType: DelegateAudioSource.EnumerateSamples
    fullName: DotFeather.DelegateAudioSource.EnumerateSamples
  - uid: DotFeather.IAudioSource.EnumerateSamples(System.Nullable{System.Int32})
    commentId: M:DotFeather.IAudioSource.EnumerateSamples(System.Nullable{System.Int32})
    parent: DotFeather.IAudioSource
    isExternal: true
    name: EnumerateSamples(Nullable<Int32>)
    nameWithType: IAudioSource.EnumerateSamples(Nullable<Int32>)
    fullName: DotFeather.IAudioSource.EnumerateSamples(System.Nullable<System.Int32>)
    nameWithType.vb: IAudioSource.EnumerateSamples(Nullable(Of Int32))
    fullName.vb: DotFeather.IAudioSource.EnumerateSamples(System.Nullable(Of System.Int32))
    name.vb: EnumerateSamples(Nullable(Of Int32))
    spec.csharp:
      - uid: DotFeather.IAudioSource.EnumerateSamples(System.Nullable{System.Int32})
        name: EnumerateSamples
        nameWithType: IAudioSource.EnumerateSamples
        fullName: DotFeather.IAudioSource.EnumerateSamples
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.IAudioSource.EnumerateSamples(System.Nullable{System.Int32})
        name: EnumerateSamples
        nameWithType: IAudioSource.EnumerateSamples
        fullName: DotFeather.IAudioSource.EnumerateSamples
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        fullName: System.Nullable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Int32
        name: Int32
        nameWithType: Int32
        fullName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int16,System.Int16}}
    commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int16,System.Int16}}
    parent: System.Collections.Generic
    definition: System.Collections.Generic.IEnumerable`1
    name: IEnumerable<ValueTuple<Int16, Int16>>
    nameWithType: IEnumerable<ValueTuple<Int16, Int16>>
    fullName: System.Collections.Generic.IEnumerable<System.ValueTuple<System.Int16, System.Int16>>
    nameWithType.vb: IEnumerable(Of ValueTuple(Of Int16, Int16))
    fullName.vb: System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.Int16, System.Int16))
    name.vb: IEnumerable(Of ValueTuple(Of Int16, Int16))
    spec.csharp:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        fullName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.ValueTuple`2
        name: ValueTuple
        nameWithType: ValueTuple
        fullName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - uid: System.Int16
        name: Int16
        nameWithType: Int16
        fullName: System.Int16
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Int16
        name: Int16
        nameWithType: Int16
        fullName: System.Int16
        isExternal: true
      - name: ">"
        nameWithType: ">"
        fullName: ">"
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        fullName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.ValueTuple`2
        name: ValueTuple
        nameWithType: ValueTuple
        fullName: System.ValueTuple
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - uid: System.Int16
        name: Int16
        nameWithType: Int16
        fullName: System.Int16
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Int16
        name: Int16
        nameWithType: Int16
        fullName: System.Int16
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Collections.Generic.IEnumerable`1
    commentId: T:System.Collections.Generic.IEnumerable`1
    isExternal: true
    name: IEnumerable<T>
    nameWithType: IEnumerable<T>
    fullName: System.Collections.Generic.IEnumerable<T>
    nameWithType.vb: IEnumerable(Of T)
    fullName.vb: System.Collections.Generic.IEnumerable(Of T)
    name.vb: IEnumerable(Of T)
    spec.csharp:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        fullName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        fullName: <
      - name: T
        nameWithType: T
        fullName: T
      - name: ">"
        nameWithType: ">"
        fullName: ">"
    spec.vb:
      - uid: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        fullName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: "(Of "
        nameWithType: "(Of "
        fullName: "(Of "
      - name: T
        nameWithType: T
        fullName: T
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Collections.Generic
    commentId: N:System.Collections.Generic
    isExternal: true
    name: System.Collections.Generic
    nameWithType: System.Collections.Generic
    fullName: System.Collections.Generic
