### YamlMime:ManagedReference
items:
  - uid: DotFeather.Sprite
    commentId: T:DotFeather.Sprite
    id: Sprite
    parent: DotFeather
    children:
      - DotFeather.Sprite.#ctor(DotFeather.Texture2D)
      - DotFeather.Sprite.Destroy
      - DotFeather.Sprite.LoadFrom(System.IO.Stream)
      - DotFeather.Sprite.LoadFrom(System.String)
      - DotFeather.Sprite.Texture
    langs:
      - csharp
      - vb
    name: Sprite
    nameWithType: Sprite
    fullName: DotFeather.Sprite
    type: Class
    source:
      remote:
        path: DotFeather/Graphics/Sprite.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Sprite
      path: ../DotFeather/Graphics/Sprite.cs
      startLine: 10
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nA <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref> object to draw a texture.\n"
    example: []
    syntax:
      content: "public class Sprite : TextureDrawableBase, IContainable, ISizedDrawable, IDrawable"
      content.vb: >-
        Public Class Sprite
            Inherits TextureDrawableBase
            Implements IContainable, ISizedDrawable, IDrawable
    inheritance:
      - System.Object
      - DotFeather.TextureDrawableBase
    derivedClasses:
      - DotFeather.AnimatingSprite
    implements:
      - DotFeather.IContainable
      - DotFeather.ISizedDrawable
      - DotFeather.IDrawable
    inheritedMembers:
      - DotFeather.TextureDrawableBase.ZOrder
      - DotFeather.TextureDrawableBase.Name
      - DotFeather.TextureDrawableBase.Location
      - DotFeather.TextureDrawableBase.Angle
      - DotFeather.TextureDrawableBase.Scale
      - DotFeather.TextureDrawableBase.Width
      - DotFeather.TextureDrawableBase.Height
      - DotFeather.TextureDrawableBase.Color
      - DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
      - DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
      - DotFeather.TextureDrawableBase.Parent
      - DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
      - DotFeather.TextureDrawableBase.AbsoluteLocation
      - DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
      - System.Object.Equals(System.Object)
      - System.Object.Equals(System.Object,System.Object)
      - System.Object.GetHashCode
      - System.Object.GetType
      - System.Object.MemberwiseClone
      - System.Object.ReferenceEquals(System.Object,System.Object)
      - System.Object.ToString
    modifiers.csharp:
      - public
      - class
    modifiers.vb:
      - Public
      - Class
  - uid: DotFeather.Sprite.Texture
    commentId: P:DotFeather.Sprite.Texture
    id: Texture
    parent: DotFeather.Sprite
    langs:
      - csharp
      - vb
    name: Texture
    nameWithType: Sprite.Texture
    fullName: DotFeather.Sprite.Texture
    type: Property
    source:
      remote:
        path: DotFeather/Graphics/Sprite.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Texture
      path: ../DotFeather/Graphics/Sprite.cs
      startLine: 15
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGet or set a texture drawn by this <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: public Texture2D Texture { get; set; }
      parameters: []
      return:
        type: DotFeather.Texture2D
      content.vb: Public Property Texture As Texture2D
    overload: DotFeather.Sprite.Texture*
    modifiers.csharp:
      - public
      - get
      - set
    modifiers.vb:
      - Public
  - uid: DotFeather.Sprite.#ctor(DotFeather.Texture2D)
    commentId: M:DotFeather.Sprite.#ctor(DotFeather.Texture2D)
    id: "#ctor(DotFeather.Texture2D)"
    parent: DotFeather.Sprite
    langs:
      - csharp
      - vb
    name: Sprite(Texture2D)
    nameWithType: Sprite.Sprite(Texture2D)
    fullName: DotFeather.Sprite.Sprite(DotFeather.Texture2D)
    type: Constructor
    source:
      remote:
        path: DotFeather/Graphics/Sprite.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: .ctor
      path: ../DotFeather/Graphics/Sprite.cs
      startLine: 25
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nInitialize a new instance of <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
    example: []
    syntax:
      content: public Sprite(Texture2D texture)
      parameters:
        - id: texture
          type: DotFeather.Texture2D
          description: A texture for this <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref>.
      content.vb: Public Sub New(texture As Texture2D)
    overload: DotFeather.Sprite.#ctor*
    modifiers.csharp:
      - public
    modifiers.vb:
      - Public
  - uid: DotFeather.Sprite.LoadFrom(System.String)
    commentId: M:DotFeather.Sprite.LoadFrom(System.String)
    id: LoadFrom(System.String)
    parent: DotFeather.Sprite
    langs:
      - csharp
      - vb
    name: LoadFrom(String)
    nameWithType: Sprite.LoadFrom(String)
    fullName: DotFeather.Sprite.LoadFrom(System.String)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Sprite.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: LoadFrom
      path: ../DotFeather/Graphics/Sprite.cs
      startLine: 37
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGenerate a <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> from the specified image file.\n"
    example: []
    syntax:
      content: public static Sprite LoadFrom(string path)
      parameters:
        - id: path
          type: System.String
          description: File path.
      return:
        type: DotFeather.Sprite
        description: Generated <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref>。
      content.vb: Public Shared Function LoadFrom(path As String) As Sprite
    overload: DotFeather.Sprite.LoadFrom*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
  - uid: DotFeather.Sprite.LoadFrom(System.IO.Stream)
    commentId: M:DotFeather.Sprite.LoadFrom(System.IO.Stream)
    id: LoadFrom(System.IO.Stream)
    parent: DotFeather.Sprite
    langs:
      - csharp
      - vb
    name: LoadFrom(Stream)
    nameWithType: Sprite.LoadFrom(Stream)
    fullName: DotFeather.Sprite.LoadFrom(System.IO.Stream)
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Sprite.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: LoadFrom
      path: ../DotFeather/Graphics/Sprite.cs
      startLine: 44
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nGenerate a <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> from the specified image file.\n"
    example: []
    syntax:
      content: public static Sprite LoadFrom(Stream stream)
      parameters:
        - id: stream
          type: System.IO.Stream
          description: File stream.
      return:
        type: DotFeather.Sprite
        description: Generated <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref>。
      content.vb: Public Shared Function LoadFrom(stream As Stream) As Sprite
    overload: DotFeather.Sprite.LoadFrom*
    modifiers.csharp:
      - public
      - static
    modifiers.vb:
      - Public
      - Shared
  - uid: DotFeather.Sprite.Destroy
    commentId: M:DotFeather.Sprite.Destroy
    id: Destroy
    parent: DotFeather.Sprite
    langs:
      - csharp
      - vb
    name: Destroy()
    nameWithType: Sprite.Destroy()
    fullName: DotFeather.Sprite.Destroy()
    type: Method
    source:
      remote:
        path: DotFeather/Graphics/Sprite.cs
        branch: master
        repo: https://github.com/xeltica/dotfeather
      id: Destroy
      path: ../DotFeather/Graphics/Sprite.cs
      startLine: 49
    assemblies:
      - DotFeather
    namespace: DotFeather
    summary: "\nDispose this <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content: public override void Destroy()
      content.vb: Public Overrides Sub Destroy
    overridden: DotFeather.TextureDrawableBase.Destroy
    overload: DotFeather.Sprite.Destroy*
    modifiers.csharp:
      - public
      - override
    modifiers.vb:
      - Public
      - Overrides
references:
  - uid: DotFeather.IDrawable
    commentId: T:DotFeather.IDrawable
    parent: DotFeather
    name: IDrawable
    nameWithType: IDrawable
    fullName: DotFeather.IDrawable
  - uid: DotFeather
    commentId: N:DotFeather
    name: DotFeather
    nameWithType: DotFeather
    fullName: DotFeather
  - uid: System.Object
    commentId: T:System.Object
    parent: System
    isExternal: true
    name: Object
    nameWithType: Object
    fullName: System.Object
  - uid: DotFeather.TextureDrawableBase
    commentId: T:DotFeather.TextureDrawableBase
    parent: DotFeather
    name: TextureDrawableBase
    nameWithType: TextureDrawableBase
    fullName: DotFeather.TextureDrawableBase
  - uid: DotFeather.IContainable
    commentId: T:DotFeather.IContainable
    parent: DotFeather
    name: IContainable
    nameWithType: IContainable
    fullName: DotFeather.IContainable
  - uid: DotFeather.ISizedDrawable
    commentId: T:DotFeather.ISizedDrawable
    parent: DotFeather
    name: ISizedDrawable
    nameWithType: ISizedDrawable
    fullName: DotFeather.ISizedDrawable
  - uid: DotFeather.TextureDrawableBase.ZOrder
    commentId: P:DotFeather.TextureDrawableBase.ZOrder
    parent: DotFeather.TextureDrawableBase
    name: ZOrder
    nameWithType: TextureDrawableBase.ZOrder
    fullName: DotFeather.TextureDrawableBase.ZOrder
  - uid: DotFeather.TextureDrawableBase.Name
    commentId: P:DotFeather.TextureDrawableBase.Name
    parent: DotFeather.TextureDrawableBase
    name: Name
    nameWithType: TextureDrawableBase.Name
    fullName: DotFeather.TextureDrawableBase.Name
  - uid: DotFeather.TextureDrawableBase.Location
    commentId: P:DotFeather.TextureDrawableBase.Location
    parent: DotFeather.TextureDrawableBase
    name: Location
    nameWithType: TextureDrawableBase.Location
    fullName: DotFeather.TextureDrawableBase.Location
  - uid: DotFeather.TextureDrawableBase.Angle
    commentId: P:DotFeather.TextureDrawableBase.Angle
    parent: DotFeather.TextureDrawableBase
    name: Angle
    nameWithType: TextureDrawableBase.Angle
    fullName: DotFeather.TextureDrawableBase.Angle
  - uid: DotFeather.TextureDrawableBase.Scale
    commentId: P:DotFeather.TextureDrawableBase.Scale
    parent: DotFeather.TextureDrawableBase
    name: Scale
    nameWithType: TextureDrawableBase.Scale
    fullName: DotFeather.TextureDrawableBase.Scale
  - uid: DotFeather.TextureDrawableBase.Width
    commentId: P:DotFeather.TextureDrawableBase.Width
    parent: DotFeather.TextureDrawableBase
    name: Width
    nameWithType: TextureDrawableBase.Width
    fullName: DotFeather.TextureDrawableBase.Width
  - uid: DotFeather.TextureDrawableBase.Height
    commentId: P:DotFeather.TextureDrawableBase.Height
    parent: DotFeather.TextureDrawableBase
    name: Height
    nameWithType: TextureDrawableBase.Height
    fullName: DotFeather.TextureDrawableBase.Height
  - uid: DotFeather.TextureDrawableBase.Color
    commentId: P:DotFeather.TextureDrawableBase.Color
    parent: DotFeather.TextureDrawableBase
    name: Color
    nameWithType: TextureDrawableBase.Color
    fullName: DotFeather.TextureDrawableBase.Color
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Width
    parent: DotFeather.TextureDrawableBase
    name: ISizedDrawable.Width
    nameWithType: TextureDrawableBase.ISizedDrawable.Width
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Width
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Width
    name.vb: DotFeather.ISizedDrawable.Width
  - uid: DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#ISizedDrawable#Height
    parent: DotFeather.TextureDrawableBase
    name: ISizedDrawable.Height
    nameWithType: TextureDrawableBase.ISizedDrawable.Height
    fullName: DotFeather.TextureDrawableBase.DotFeather.ISizedDrawable.Height
    nameWithType.vb: TextureDrawableBase.DotFeather.ISizedDrawable.Height
    name.vb: DotFeather.ISizedDrawable.Height
  - uid: DotFeather.TextureDrawableBase.Parent
    commentId: P:DotFeather.TextureDrawableBase.Parent
    parent: DotFeather.TextureDrawableBase
    name: Parent
    nameWithType: TextureDrawableBase.Parent
    fullName: DotFeather.TextureDrawableBase.Parent
  - uid: DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    commentId: P:DotFeather.TextureDrawableBase.DotFeather#IContainable#Parent
    parent: DotFeather.TextureDrawableBase
    name: IContainable.Parent
    nameWithType: TextureDrawableBase.IContainable.Parent
    fullName: DotFeather.TextureDrawableBase.DotFeather.IContainable.Parent
    nameWithType.vb: TextureDrawableBase.DotFeather.IContainable.Parent
    name.vb: DotFeather.IContainable.Parent
  - uid: DotFeather.TextureDrawableBase.AbsoluteLocation
    commentId: P:DotFeather.TextureDrawableBase.AbsoluteLocation
    parent: DotFeather.TextureDrawableBase
    name: AbsoluteLocation
    nameWithType: TextureDrawableBase.AbsoluteLocation
    fullName: DotFeather.TextureDrawableBase.AbsoluteLocation
  - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    commentId: M:DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    parent: DotFeather.TextureDrawableBase
    name: Draw(GameBase, Vector)
    nameWithType: TextureDrawableBase.Draw(GameBase, Vector)
    fullName: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase, DotFeather.Vector)
    spec.csharp:
      - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: TextureDrawableBase.Draw
        fullName: DotFeather.TextureDrawableBase.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
        name: Draw
        nameWithType: TextureDrawableBase.Draw
        fullName: DotFeather.TextureDrawableBase.Draw
      - name: (
        nameWithType: (
        fullName: (
      - uid: DotFeather.GameBase
        name: GameBase
        nameWithType: GameBase
        fullName: DotFeather.GameBase
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: DotFeather.Vector
        name: Vector
        nameWithType: Vector
        fullName: DotFeather.Vector
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object)
    nameWithType: Object.Equals(Object)
    fullName: System.Object.Equals(System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.Equals(System.Object,System.Object)
    commentId: M:System.Object.Equals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: Equals(Object, Object)
    nameWithType: Object.Equals(Object, Object)
    fullName: System.Object.Equals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        fullName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
    parent: System.Object
    isExternal: true
    name: GetHashCode()
    nameWithType: Object.GetHashCode()
    fullName: System.Object.GetHashCode()
    spec.csharp:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        fullName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.GetType
    commentId: M:System.Object.GetType
    parent: System.Object
    isExternal: true
    name: GetType()
    nameWithType: Object.GetType()
    fullName: System.Object.GetType()
    spec.csharp:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        fullName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.MemberwiseClone
    commentId: M:System.Object.MemberwiseClone
    parent: System.Object
    isExternal: true
    name: MemberwiseClone()
    nameWithType: Object.MemberwiseClone()
    fullName: System.Object.MemberwiseClone()
    spec.csharp:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        fullName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
    parent: System.Object
    isExternal: true
    name: ReferenceEquals(Object, Object)
    nameWithType: Object.ReferenceEquals(Object, Object)
    fullName: System.Object.ReferenceEquals(System.Object, System.Object)
    spec.csharp:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        fullName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: ", "
        nameWithType: ", "
        fullName: ", "
      - uid: System.Object
        name: Object
        nameWithType: Object
        fullName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        fullName: )
  - uid: System.Object.ToString
    commentId: M:System.Object.ToString
    parent: System.Object
    isExternal: true
    name: ToString()
    nameWithType: Object.ToString()
    fullName: System.Object.ToString()
    spec.csharp:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        fullName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: System
    commentId: N:System
    isExternal: true
    name: System
    nameWithType: System
    fullName: System
  - uid: DotFeather.Sprite
    commentId: T:DotFeather.Sprite
    parent: DotFeather
    name: Sprite
    nameWithType: Sprite
    fullName: DotFeather.Sprite
  - uid: DotFeather.Sprite.Texture*
    commentId: Overload:DotFeather.Sprite.Texture
    name: Texture
    nameWithType: Sprite.Texture
    fullName: DotFeather.Sprite.Texture
  - uid: DotFeather.Texture2D
    commentId: T:DotFeather.Texture2D
    parent: DotFeather
    name: Texture2D
    nameWithType: Texture2D
    fullName: DotFeather.Texture2D
  - uid: DotFeather.Sprite.#ctor*
    commentId: Overload:DotFeather.Sprite.#ctor
    name: Sprite
    nameWithType: Sprite.Sprite
    fullName: DotFeather.Sprite.Sprite
  - uid: DotFeather.Sprite.LoadFrom*
    commentId: Overload:DotFeather.Sprite.LoadFrom
    name: LoadFrom
    nameWithType: Sprite.LoadFrom
    fullName: DotFeather.Sprite.LoadFrom
  - uid: System.String
    commentId: T:System.String
    parent: System
    isExternal: true
    name: String
    nameWithType: String
    fullName: System.String
  - uid: System.IO.Stream
    commentId: T:System.IO.Stream
    parent: System.IO
    isExternal: true
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
  - uid: System.IO
    commentId: N:System.IO
    isExternal: true
    name: System.IO
    nameWithType: System.IO
    fullName: System.IO
  - uid: DotFeather.TextureDrawableBase.Destroy
    commentId: M:DotFeather.TextureDrawableBase.Destroy
    parent: DotFeather.TextureDrawableBase
    name: Destroy()
    nameWithType: TextureDrawableBase.Destroy()
    fullName: DotFeather.TextureDrawableBase.Destroy()
    spec.csharp:
      - uid: DotFeather.TextureDrawableBase.Destroy
        name: Destroy
        nameWithType: TextureDrawableBase.Destroy
        fullName: DotFeather.TextureDrawableBase.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
    spec.vb:
      - uid: DotFeather.TextureDrawableBase.Destroy
        name: Destroy
        nameWithType: TextureDrawableBase.Destroy
        fullName: DotFeather.TextureDrawableBase.Destroy
      - name: (
        nameWithType: (
        fullName: (
      - name: )
        nameWithType: )
        fullName: )
  - uid: DotFeather.Sprite.Destroy*
    commentId: Overload:DotFeather.Sprite.Destroy
    name: Destroy
    nameWithType: Sprite.Destroy
    fullName: DotFeather.Sprite.Destroy
